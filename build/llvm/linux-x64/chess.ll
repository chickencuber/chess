; ModuleID = 'chess'
source_filename = "chess"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%Fen = type { %Board, %Option.0, i32, i8, i8, i8, i8 }
%Board = type { [8 x [8 x %Piece]] }
%Piece = type { i32, i32 }
%Option.0 = type { <2 x i32>, i8 }
%"char[]" = type { ptr, i64 }
%Vector2 = type { float, float }
%List = type { i64, i64, %any, ptr }
%any = type { ptr, i64 }
%.introspect = type { i8, i64, ptr, i64, i64, i64, [0 x i64] }
%Color = type { i8, i8, i8, i8 }
%Ctx = type { i32, i32, i32, i32 }
%Texture = type { i32, i32, i32, i32, i32 }
%BoardRow = type { ptr, i32, i8 }
%Move = type { <2 x i32>, %Option.0 }
%Rectangle = type { float, float, float, float }
%Option = type { %Move, i8 }
%"char[][]" = type { ptr, i64 }
%Image = type { ptr, i32, i32, i32, i32 }
%"any[]" = type { ptr, i64 }

$.dyn_search = comdat any

$"$ct.int" = comdat any

$"$ct.fen.PieceType" = comdat any

$"fen.PieceType$xpos" = comdat any

$"fen.PieceType$piece" = comdat any

$"$ct.fen.Color" = comdat any

$"fen.Color$ypos" = comdat any

$"fen.Color$fen_turn" = comdat any

$"fen.Color$dir" = comdat any

$"fen.Color$pawn_file" = comdat any

$"$sel.acquire" = comdat any

$"$ct.ulong" = comdat any

$"$ct.fault" = comdat any

$"$ct.long" = comdat any

@chess.fen = local_unnamed_addr global %Fen zeroinitializer, align 8, !dbg !0
@chess.flip = local_unnamed_addr global i8 0, align 1, !dbg !49
@.bytes = private unnamed_addr constant [26838 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\03 \00\00\01\0B\08\04\00\00\00\8B\8D*?\00\00\00\04gAMA\00\00\B1\8F\0B\FCa\05\00\00\00 cHRM\00\00z&\00\00\80\84\00\00\FA\00\00\00\80\E8\00\00u0\00\00\EA`\00\00:\98\00\00\17p\9C\BAQ<\00\00\00\02bKGD\00\FF\87\8F\CC\BF\00\00\00\07tIME\07\E1\08\09\0F\14/\D2\97\CB\FD\00\00g\DDIDATx\DA\ED\9Dw\9C\D4D\1B\C7\BF\C7\D1\8E~\F4\DE\9B\D2\AB4\15\10)\22X\10EQ,(\D8QDE,\E8k\EF\BDc\AF\A8(\C5\86\22*\A0\A2\08\0A\8A\F4\DE{\E7(w\F7\BC\7F\ECf\93\ECf\B3{\B7\C9&\0B\F3\CB\E7\03\B9\EC$\99\99\CC\CC3O\07\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\85c\1Di\AA\0B|\82Z\0C\E6t\AA\03\EB\F8\9E\F7Yw\DC\F6D\0D\06\D0\83Z\94d\0BK\98\C2\97d\A9\E1\A1\A0\A0`\8D\AA\\A\C7\E3\BA\07\0A\F2\10\87\10\C3\91\C5\03\A4\1F\87=Q\9A\E78l\EA\09a\1D\97\A9I\A2\A0\A0`\85\FA\ECB\10\AE=n{\A00\DF\84-\99\81\E3+\0A\1Dwca\91eO\08oRXM\15\05\05\85p\DC\1B\\\22\FE;\A6Z\D5\9Eg\99\C7&V1\8D[(o[\F6\95(\8B\A6\F0\E2q5\12\CA\B3\22jO\08\EF\AA\A9\A2\A0\A0\10\8E'C\82\8Ac\05e\F9,l\F1\DB\CDuQK\B7#W+WW\86\CBp\A9\A3\DF\97C\1B\DB7\15\E14\86r#\03\A8t\0C\F4\DB\F7z\8F\D5\94!r\A3\F4\97b\C6^\1Cz\\\CD\8B4\FA2\9C\E6j\81PP8\9E\08HU\96Z\EE\A0_\88R\FE\03\AD\C4(9*\22\22Ged<\FB\EE\B2<\C1\1E\03\A9\99\1A\83\D8\F8\1D}\B4\B6\14\95\97%[\02\D8&\17\EA}\B1\91\E2)?:\AA0\84[\E9\1DS\BFU#HNs\8F3.TA\E1\B8& \05\F9=\AA\10\E6z\CB}\E6\CE\C0\AF]%W4\E4\CA\C9\DA=\DB\A3\BC\A7\05\AB#\9E\9F\CDM)\DCs_\06Z\91&\93\C4\8C\C1z\0B/I\F1\D1q>\BB\83-YN\07\9Br\DD\83z\C1\E8\E3FA\C1'\8C\B2\17\EF<\9B\86\A1\BF\FAr2\00{x8tm\1F\1F\B2;%\FBs8\AFh\A7\9D\E8\C8~&\B3I\BB\B0\97\FAl\0B+_N#\11\AFq\95\E1\F2k\0C\D7K\EC\8CxKm\FE\A0\82\E5\FB\AF\E5\E5\94\EC\B7\E2l\A7(\C0y|\1A\F6\D3N\EA\B07p\FA\19\03Sx\AE\95g\83\C1\14\E0\087\F3\92e\B9s\F8\88\22\86\BF\0FQ\9D\1Dj\A9RP\08\E01\1BU\A9v,2M\A1\D4\C1\7F\81\FA\A7\CB\07\C1\FD\F3\019Wo\D5m\11\E5kj\BF}f\DAu\7F\AA\DFS\D3\E2-\B3\A2\F6\DB\11\03iN%4\D3Z\F0\B9D\E2\02\ADu\0BSz\DCw\8A\F8ZW[r\1F\87#\CA]\A7\16\0D\05\05\0D[\E3  B\D7\14lY\1D\AD\F6#\0D\CB\DFA\A9\A6\B5\E9\A7\88;\8Ah*\F4\DBLK\E6(]\B7\11i\BE\1A\D2\16\94\94\17e\BB\1C\96\1F\A4\8D\DEo\1F\A6\E4\98\E8\A1\D5\7F\BE\05\01\B9Kk\DB\CE\94\1E\F7\A7E\8C\F1\1C\CE\0A+\D3@\17^U\96rZ\B9/\D5\A2\A1\E0O\14\F4\E0\9D\AB\A3\88_\8C\C8eM\0A\F6f]\ED\E4B\C3\C5\0C\CE\D14\E8\F5\22\EE8\CC\\\DA\02\BC\C2\954\08^\\\CA\AB\DA\EF\7Fr$\E2\9EA\81\FF\0A\F0UP\FA\D7\9D\9F\E9\C0\BF\81\CB\FD\C9HA\CF\ED\FD\11'\06\EC\B5\FB1u\10\E2\A9ki\83\BB\00o\D1\92\B5\A1\12\85\F8\902\DAP\FA\9E\07y3\F0G\87c`\A5\A9\C0e\94\8B\CA\B7\7F@\8E\E5/m9\CB\D6\1B\EA(\93\F8\D3\F2\97t\06sb\94\BBv\F0v\8409UP\89\B6T\A6\1AYlf-\BFs\E8\F8#ZM\F8\9D\9D\A1#+\B4\1B\D3\AF\AD\E1\8A\94l\D9\99\DA\EEq\A9i\07}\A7\B6\93\B4\92d\DF\A2\DDSI\C6\C9\06Y/\AFKE}\8Fz\B3\C5\1D\8B\03\BF\9Diz\C7x\FD\9E\B6)\D8s\D5\B4\DA?h\C1\814\D3Z\F6KJ\8F\FB\BEZ\1B\FF\94\D6\FA\D7\9Ai\D8\C4\8D\D6\AEV\94\95\22\F2\B2^\AA\\\8A\CF\F9\0C\96\DB\CA\1B^\B5\BC\EB\14\B2cJ*\B29\C5\F2\DEWm\EFZNF\CA\F5aqF\F2\0B9\A6v\EC\E73\CE>\BE\03R\1DKVXm\B5\0F\FB\AEi\01\EC\AE}\EE\7F-\A7\D6\DA\A8\C3|u@\B1\1C\86\A0\90\E3n\D3;\96\E9w\F5K\C9\BE[\AC\91\D1\9Da\E4c\82\DE\B2\FBRzt\9C\A1\B5c\91l\96*\91\AD\AA\C2\DE\C0\95\822SDD\BE\D1\CB\A4\BA?\C8i1\C8\C0A\CB\BB^\8EK\D8mm6r0\C6]\A7\A5T\FF\A5s5\9B\A2\B6\E57\BA\1CO\22\AC\D4D\15zR\9B\82l\E4G\16G)\B3\80\BD\94\02\B8\8F\BE\94\0D^\9C\C4t\ED\F7Y\16\F7dq\01?Z\9A\0C\1C\E2\02K\06u_@\CCa\E6\C1\B7\18\7F\8F\86\13\E8JU\B2Y\CDw\BAq\98O0\9E{\02\ED8\87\89\9A\1C\07\F8\8D+\B5S\890\D0J-\8448ki\CC{\F4$7\F0\E7\18\8A\93\0Dt\A0d\E0\C2\ED\C1\F5\A0\9A\91{\D9\C7\DA(b\9E\D4\E0@\F2\F3{F\02\CF\CEH\B0F~BI>\B0\DD\16v`\06\FF\E3>Dq \FEDC\BE0\B1\8E\BFGa\9B\E1\0D\ADL}\F9H\96\CA|\B9S\0A\E9\F7E\BB\AB\1B\DB#v\15\DB\A2\9A\11\FC\10(QAv\1B\F6\E9Wh\F7\E5R\D5\F2\AE\AE\CC1\A9o?\A3\BE\AF\FA\B8\0C;\B4\DAU\97\A7\E5\1FY/3\E4Z)\9C\EA\E6\01:2\B51t\93\88\88\8C\8E\B2\9F\AC)\07\82\DFtK\B8\85\DD2&3\9ASRP\FC\12\12\EE\96\92L\C3\91\A1\B7\CE\0Aok6\8D\99\16G\BAv\E7\DB\96\F7\06\7F\CD0\DDSJ\7F\DF\99)\D3w5\22#\C4\153\AE*\DA\F1\DEq\19~5\05\08H?M\B4`Z\80G[\96\ADe\C3:\DB\D9\D2T\E2%\83\F9\E6!^\A0b\D4\B27i\E5N\93m\22\22\92#OH\9Av\AF\B5JqL\98\ECT\10\F6\FAl\12\0D\D2\83\BAX\1C\1B\A2\10\C6TB\90\84\97\90\B5\22rDZZ\B6\F4\83\D0\A6\E0@tc\ED\D9<EW\0A\A4\1E\01Yb\12O>\19\17\01i!Vh\11\17\01y\D2t\CF\92\D4# \C5\99\A7\7F\F9L\B9Y~\92=\22\92+\9Bd\BC\0C\94\02\C6q\F1\B8\22 \FEC\A7\B0@\EB\B1\AC\F3\CF\8B\B2\0C\AE\B1!\09\01L\0B\95\9D\16c\AF\1E\E2WJHSi\225\8D\EF\19dq\C7\88\A8\0B\D1)\BE\EA\EB1QI\C8N\DA\1D\03c\FD:\AD=7\8A\88\C8l\F3\F4\17\04i\14\0A\E3\22\22r\82\BD\1C\7F#\CF\D1%%\C8Hl\02\F2\AA\C5\B1$.\02\B2\C4\F2\DEc\85\80\8C\D7\BF\F7\F5\B2#\A2\17\E6KG\E3\88\B8X\11\10\7F\A1\08\AB\F4\CFS\\2\8D\1F\EB\B0n\B6k\C2E\16\\\C8\DF\D4\8E\F1\A64]\84\C3\8E\18v\15C\A2.)\DFX\DCY\9F#\C6=Lqc\F9\15>\0A\93^\80\8BYg\D9\AA\\\BE\A1\C510\D6\8Bi\A1L.\0CN\FF\0F\A4\99\D45\1C]\E5\1F\D3\F2\F0\8Ft\95\EA\B1\94\C8\EB\B8\9F*)O@l\8E\18\04\C4\F6Hq\02\12\F2\8F*$\EF\885\0E\C9\A5z\AB\B6hz4E@\FC\81\E1\DA\A7\A9%\DFH\8E\88\CC\93\CE\FA\E7z#\CA]uy\CF \90\CAbd\1C~\F5uL\03\BFN\8C\D2c-\A7\CB\1C\83\F6Y\C7[\DA\EF'\CB_\22\92-_\1By\96a\BE\99*\7F\D9.\05\B9|\92\A2^\F6:*k\82\C4\87%\0F\D8\BDY~\95\F7\E4>\B9H\EAE\EB\9D\C3\BC\ED3\9DV\\\04\E4\99\B8\88@+\CBni\15\D7\BD\CF\A42\01I\E3O\AD\BE/\D9\0C\90\1C9\F3X\B1T\CC3\CAhA\F4\D8\E5\CB\E5a\9A&*Za\90L\9F\A8s\0A\D1\AD\D8n0,}u\E3x\D3y\A6\81\7F^\CC\F2\17\B0!L\1C\F5\BC\A5r\B5\90f\F6\DBT\0E\86\DA\B0\\\E7C\BE\F3A/7\E1\C7\F0\89_U:\9B\83\B9\07\DA\F8xJ\EF\B0B~\1E\D3$\BF\D8,\9F\CB-r\92\85\F0\8B\A3\8C3\1An\A5\02\01\99\15\17\11\18f\D9\13\C3\E2\BAwV*\13\90\AEZm\CF\8E1*v\EAQ\0Bv\1C?\96\B5Uy\C2\A4\9E\CEe\0A\9D|V\C7\A0X\E9j\D3\E7zS\AFs\F4]\DF\D5\86\96=\10\C7\9B\1E1\0D\FC\87\E3\B8\A3<\FBC\E5'Zx\B9\07\D0P+\F3\B6\F5\F4\F3\DA#7\83\C7\8D\226\A4\80\9C%\D3%WD\F6\C9\AB\D28|IX\CF9):\DEK\B29\D0\86j&=G\FE\B0^\9E\91\CE\BA\E9\84v\1C\E0^_F\91\8BB@D^\93\E6&!^\F8QO.7Y\1B\1A\183\B9\\\EA\D9\DE\DB\\^\0B\BB'\C5\08\C8\D3\9A\15\DA\A2\98\E3\E1\09\BDe\DD\8E\0F\F2q\86A\E6o$\22\8F\F8\88\82\16\D4\94\BA\CF\9A>\D6l\BD\BE\9D\E3\22 \9B\E2h\D3\F7\A6~\88\87/\B8\22FX\BE\00:ke~\B7\16\1E\E4z\DA\DF\ED\B4\F0\93\9A\0B\DD\E5\B28\8C=\9F$\ED#\B3\13\96I\C1\11\1F\0A\22z\8F8\85\D5\F2P\A4\8Ed\BE\0F\DD\0E\A3\12\90\E4\22\C5\08\C8rM\F4\1C\1B\DBt\B3\E6\A7\8E\07\F2q\A3\85Y\A9v|\EB\A3=\D4^\ABP\87\86X\B9'\C6E@b{\87\A7\85y\82\EC\88#<\C1\1Fq\11\90&Z\99\09\D6\E1\1A\F7x\D8\BB7sToC\9A\\\10ey\C9\95\CFu\B1a\E0X\95r\E9\B3\DAka9\CAF\F8\DA\C7D\AE\DD\8FG\E4\C3pk\ADC\DC\EA\B3\F0\16\8A\80\E4\1D\85\B5\ED\EB#q\B5\AD\93\D6\B2\AF\8F}\F2q\89\D1\\\B3\98\D4\97\0A\E6\09\F0\99o\\b\82\E9\A1\AA\18\D8\E8\\\E9\A6\07`\C8\88\93\80L\8A\F1\9E:\11d\B4v\8C;Z\C6\0C\0C\1E@1-\DAX\0F\C3:\B4K*\EBa\10\BCA1\A3\81\22\D2<\18\BE#\1A\8E\CA\D3F70!+\A5\E2\A5\95\D7\AD\F9\9Eraa\CC\96w\A5\86y\FCL\F0\95\B6H\11\90\BC\A3\96u\AA\87h\18\A2[|\1E\E3h\A9{VT\91qrHDDf\C8\A9\C6\E1\7F\97O\EAz\87n\C1\B4VDD\F6\CAP1h\1E\88\93\80\1C\8D\A1\DE\1C\18A@b\A9\D1_\8B\93\80\C0d\AD\D4U\B2ODD\D6H\17\FD\CE\D1\9E\F4k\05f\EB\B5/\22\8F\04\D3\F9\DAc\A3\D1\DAD\10\EEO\910r\E9|\AB[\14\1Dqiq\DC/w\98\FD\93\17Z\E6\92Q\04$U\08H\1B\AD\AE?\C5\D5\B6Q\BAwPR\A5\FC\C9g\CC>\D0DT\ED\99D\E5\E0\E5\93\F9\81\DByR+5\96o\98\EB\83\8F\F8*\B7\92\090\93\FA\B4#\83\D9zLq\E1\91<\F4\F3e<h\F3{k\ADs\D0\E2\B7\B7\E13\9B\F2\A5L\11\E3\ED\F1\88&@{\9D\8F\E8@\16\7FpT\FBmg\948\A8\EE\A2\06?\84b\D7\D3\9C\F7i\16\D7mU\98\C2\1B\8C\E0\80v\E1.\AA0L\0B)\E5c\BCH\AF\C0Iq\DE\0FF'\DFBI\8A9\FA\92\E2<\C4\85\0C\D17\A0'2\9B>\CC\F7WW\8C\F0\941\DA\97J\1B\EDPe\E3\CBb\10Jz\B0\87c\1A\A34\BA\DAX\B6GP\D1\AB\F5\1D\C2\AF>\D9]^\1CUW\F3\AC\ED}W\87\95^a\EB1\FC\9D\B6?m\15\9F\1A\FD\DA8r\DB\19\17\B0hm\B8\C8\83\1E\ADn\0C\ED=X\F6\E7q\17\B9\C8\AC\0Fy\D3\F7\9E\D8\C3t-\CFx\11\11\F9[\DA\09RDF\DA+7\F2\85,#\87,\EC\F0\89\03\E6\D0\B8\E2\EA&\F3\18\EA\FB\952\D3\DA\97%\1A\BA\EB\09\02\8Ea\14c[\A0\99E-s\CF\1D6fJ8\C3'u\1Em\19`c}\0C\EE\ED\EA\88;z\D8\94\0E\AA\D0\AF\94+\B5\D2\DBm\9F\BE O\04\A4\10\EB-Z\90c\91b\D7}\94\D3\02\B7#i\F2X\BE\16\C9]\BA\16J\10\9E\F3\F5\88/\A7[\1B\DE.\22\22\DF\1A\02D\8EsEP\F3\8AQ\94\B5\D5\C6\D0#yx\D4w\04\E4\D1\14X-\D7\04\EA\DA?\8Eo~P\F7\9Az\FEX& \97k\1FpL\94\8E\98\A3\BBH}\E5\9BZ\F7e\99\C5\10<7\8F\04\E4\E3\A8ekke^6&\11\AA\1D\B5|\E7\B8\B2k\EB8\D7\A2\F6K\E8\E3AO\16e\A6\1E\9C\E1\C3|/\91\87\F5<\E9\82p\93\8FG|(\A7\C5\00\C9\16\91\F9\A6P2\E7\B9$\EB\FF\CA\F8\96\0DT\F7\BC\17\1A\DB\06\CAL\FE\91K\E3\14X-\DF\D1\8C\DB\D7\C5\FC\E2\E3\F2\E2\84\EC \92\AD\03\09\8ALJqk\94\02m9\9B\CF\03\A7\A7S>\C6><Y\F8\8A\EF8\9D^\D4\A1 \9D(\1D\BC\FA<?\C4#o\EC\A2\A5\019;j{\DAD\9C\04\FEX\1D\E5\91\C3\F3T\FB\D2\86=\C9\1E~%\9BU|\CB4]\11\92D<\AF\A5\BEI\E7\1D[5\CE\0E\D6\D1$j6\D3\C2|@!\DE\D7\FE|\92\85|\EF\CB%\A0\15W\05N*2\8Et\8Er\99\AE\C1\01\D7\02\91\9D\C1w\F4\D1\A4\E2U\99\C2\C9\1E\A7\03^\CCH\9E\D0l+\8B\D0\C6a\FDOl\1Cd.\87\B5?r\18\155\A7\8F\9F\F0\19C\00\B2\B9\93wl\0B\EE\E5~\EDt\9F/bK\B8\84\12\9A-\FCp\1BZ\FA\9D\BFcK~\113\17Z\18\07\F2\96}\82Z\80\87\03\BF\17\96CrX\17p<\14U(\124\CCm\17\1F\07\F2\8A\A1\C6\9F{\DAw\17\EB\C2\ABwb\EC\A0\8B\09rB0\\}4\C3\DE~z\BB6\FB2\9C`\1A?\9B\85U\CF\85\ED\84\C7\B8hq4\C3\C8\85|\EE\03\8Db\CFP\FAj\A9.\CB\92j}\B5Jj\1B\E3\86\A5J\CE\CEtVZ{q\85\E3r\BDu/\A4\0E9(\C6\19<\C5df\B3\8E]l\E4?~\E5\13n\A5kTC\8BfZ3\BF\B2\B5i\0FI\F3\C6Z<#\83N\DC\C8{\CC\E2\1F\D6\B2\8B\CD,\E0{\DE\E3\BA$\C9z\1F0i\11\BA\C4& \BBt/\97EQ\A6qP\85\DE\DA\1C$nj\94'\8F\D2\17\A58\08H\07\93\CB\E6\FD\1E\8E\97\EAZ,Z\E4\7F1&|\1B\89\C7\85j\7F\A8\9CO\B3\15^\A8\D5\AE\9D\E4\88\C8!\A9\16F@~su\D9\FCF\0A\EA\EF\BA\D1\07\FD\E1\11\09IQ\F2\01#\F4 ?\15ds\D4\F6M6\87\F8o\EF\FF\86\15f0\D3\A2\E6\C9\10r\98\C5\0D!\0B]\1Dg\EAY\A1\ED\10\B2\B2y\CBtw&W\F0\9D\D1w9\E2\D8\C4\DB\9C\EA\F2^\EB\22\D3\1B\17[f-7\11\90\032R/\DF\C9r\9F\BA]\F3\D3\10\11]\8Dn\ED\8D\9E\A6eI(/;c\13\90\C2,4\D5\F7B\0FG\CD\14\AD\16\FDcZ\1Fi\E19F\C6\0C\E5QVo\DB\E9>\9B%EY\AD\F1[\01B\F1ED\98\F2\\\97\97\CE\17\8C\DE\E9\AD}\D0'\BD\92OBR\96\FBx\CE8V*\D9x\83<l\F6\FF9\E0\EFhq\05\B84J\D6\86\F0#\9B\1F\E8oZ\04C\CA\\{\A5PH4\13\12r\D3\99\89\86\00\E9\F6\C7|\06\B8HDZ\86\BDmll\02\B2X\0Fzg\15\00>\E4\85\FE\8A\88H,5z\0F\DD\A6\E7@l\02roXm\BD3\EA\EC\A3/\1C\B1Cy\C4K@L\8B\F2b\1F\E56\01\18\A3\D5\EC\D2\F0\B4\C3\C1\E3\93$,\9F\86w.\F0E\FF$\99\84\A4(\F9H\E3Mcx\D1kb\CC\99\05\C6$\13B6\03\92U\D1\BC*\D1k\F3N\DCY\EC\D2\E9Nw\FE\E1a>!\07@\D7b\1D\B6\BD1\F4k\C0\A7\EE\14\EE\E1\B4<\D4\B19\9F1\8Bk\F9\C7\95\1E[L\8E)\D0\CA\18>\E5?\FB[\1A\D1\89_\02\A7\17p\B3\EE\F1\13D\98\0A\BD\8D\F1\97\D5\11\0F\1B\AE\8D\B08\0C\D9\1Bq\BB\E9\EF\1C\96z\B6\EDxTW\C9d:\F8\E0\B3\E9\C7\14\AD\B5#\F3\E0\DA\E96*j}\9F\11\92\1B\AE\09\93\E7$\C3\\\E6E\FEd\81&@\1E\C3\BD\9E\F7\CBT\CE\E5\8B\80+\F1z:\C4\8C\D8\93(V\B3C_V\CE\E1\9B\14! \0Fp\B9v\DA\82\D7bJ\A5\9A1\937\19\C5nm\E5}\9Fm\CC\F0_\B3\BAk\B9%tS\CC\8Er\81\DC(\F7\C8-2T\CE\92:\D6<\C1\A2`\88\E1S\B5+\BF\D8\D2\D3*\BA\85\7FM\BE\B2zb5\E9+\97\CBMr\8F\8C\94K\A4\B7~\87q\B7q\B3K|\C8\D2\B07\FDf\E9\CAf\E0@\C4\A8H\8F\B4\A02\A8\D0\03\19\C6l\D4\E8\955\A9hos\CE\EC\AB-\17\ED\99\11\A6\BB\9E\F3\1F\E7\C4\B5o\8C\9F\03\11Y)\19z>6\FF\84\E1\0C\85\9A\B9/T\D3\AE\86oQ1\0E\D3Lg\B0@\1FO\87}b\BCj\E0B\92v\A4\92\EE\C3\10\D8\E8,9\10\F7\97^h\E4\B6\B6'\C7\AC$/\1C\C8\00>\D4\99\E0\A2\0C\E2\1C\BAS\22\AC\D0v\E6\F0\15\9F\B1\C5x\B11?\F0\1E\A3X\A9]Xn\93\F8c?\9B\B5\D3*\FCkV\C8\97\E1\1C\CE\A2\1DU#\EEZ\C4O|\C6\8F\88.\FD\7F\8A\0E\0C\89\C1\EC\E4\07\0B\F50\1C\00t\E0\AAX\01A.\E0fmwpeD\D9 \CB\D14\B8\FA\15\A1\09\7F\11\CE\8C\04q\95f\D9\1A\87%\EF\B0\08\15\FFB\CF\A6\C4\F5\DAp{\D8\F1G\D7\E1vmc]\91\81\06\B1\A7\978Q\DBAV\E3\96\D0\C5~\FC\14<+\CD7Is\CE00\1E\85y\C2\171\A0\A62\80\89\14*N[\E0,\D7\22\A7\E60\09\F8\93\03p\94sR&Jme^\D2N\07\F3N\1Ez\E7D~\E5dV\04\FE(\C7\1B\F4\D5\97C\EF\D1[\D7A\A4\C9U\B2)Ft\D0ir~x\D6\B4\ED\0C\D4\B2\85\DFfs\EF\EFQ\F6\10=dRp\8Fn\17\E6b\B0\F9\AD?EP8'\D8\CB\F0\BA\ED\B6\A0h&\0ED\E4\1A\BDt\CB\08\9A\1B\F4B\D7\10\D5\1B=]\F3M\AD&Gcq Uu\9B\A7<%\B6r\03\F54K\B0\01Q\BF\DCT\E9*mBG\E1\90\EAP\BF6H6D\F5L/\EEul\E1p|g\95\C6+Wn\90\E2\92.}eu>8\89\7F\A5\AF\9C\22_\E6\CB\ED\B2\A9>\06z\F9\A4\87\9E3\CF\0F7`\98\1F/\91:\F8T\AB\F5\E9r8\CFm^f\8Cl~\A9\7F\1AU_\17^U\8C;!\E7\12\B9\DCl\1F\90\CB\A6\C0Y\17\9B\BB\AC\F2$\F7\8A!\F42\E2Wib\BCw\BAM\C8\F5\FCa\B0\F6\EC\EE\C6\E0\D91\08\C8\9Fz\D9\E7\C36\D0&\15\BA\AD\1A\BD\9Fv}l\F8\04\89$ \9F[\D4\F2\22\8FFO(\95\D2\0FQ\E3\EC\16\8DC\0CqZ\D4o~et\F2\EC\05\FAj\B5i#9\11\DE+{\F3\B5\18\E6\04\C5\13\85\F2E|\BE\D7\FBg\9EOb\CC]\9DT\02ru\CA\90\8F6\9A\CF~\05\D9\92\AFVO\D5MvV\FB\C5\AC\A4 s\B5OQOV\E6\A99K\A5\87\C5RPT\B2\A2\DEq^X\D9\9A\F2M\1E\BB\F0\A0\\f|\C2x\87\A7LK}wi\B0\EB?;\D6\04i\AD\F3+F7\DCP.\F49\A1\FA\FF\A1?\D5lM\F1\A59\B4\81\CD\04\E9\AB\07\CC\7F\C3{\1B\AC\7F\03\EF?1\AA\D9\EA\0Fq\C9\B1\CBE\FD\E2\7F\EB\A5\C6\F8`\B6\FC\97\B7@\DC\F1`S\A8\85\13\F3u\7F\7F\BD\87\CER\04\C4\C7\08\E9|\BF\C8w\BB\87\DAi\\=\C1mZ\85\AA\E6k\FF\F3\BET\8AX\0C\BE\8D\EA_\\L\8CY\EA\AE\CD\E7\8E\ED^\E3\DBnu\B47\8Aj\FE\F4\0F\C8\04\A3\03O\19\FB\09\F2\A2^\F6\12C\B9\875s\04\9D\A4\1E\D2\F96\A3\1A\BD\A6\F6\DE\B3cM\90R\BA\A1\F5\E7r\BFn\DC\97\E1\C9\E8\A9\A8\ED\A9\A2\BB\0F\EE\D5\13\\\D9\1C\97\DA|\EFPN\BEi\9E\CF\96\EB\F2f0\10\1F\D6Kb\0B\CBB]\B4\EB\0F\1ED\11\10+\D4\D2\E6J\E7\04\DA\BDQ_C}\11\CC\BF\02\FB\B4\9D\EF\AC|6i\9B\9C\1E\B6\18\DC\10\D5)F/S\\>O\A0\1B\C7\EAO:B+G{$h\87u\A1\88\9C\A3\BF\E5E\FB\09\B2[\FF\AC?GJ\CB[\99\EA\DE\D2\CA\1B\FD\81p\E2\1Bu\82\BC\A4]?SD\06ym\83u\BEV\1B\BB\D1\B3BF\C9\B0\D0\A1\E94\9A\19\AE=a\C3\B5\8A\\\ABg*,\EA\E9l)\A3\C5\9B.\EC\A8\97\C3\B4\D0\B7\9E\96\CF'\0C\8A/.\B4\22 ^bL,ao|\18\A1\B7\BC\A9\F7\8DzB\AB\CC\E8\04\9A\94-ct\D9\9C \95\22\A4\C3\22\22?\19\82/T\93\B9\09\0E\A0K\8D\CE\85N\86\8D\9C\A8y\12\8Bl\942\BA\FF}g\FB\09b\A8\CF\09\A1r\DB\C2U\E8&&TW\A3\17bC\E0Z\DDP\CFE\99 'i*\EBR\B2ND\9Ake\BE\F0V]Z,\0F*\C1\BC\98\F1\06\F0\99\DE\17\9D=\9D-\0Fk\F5\B8\D9\D1\C5\F0\A6\90S\D9\EE|>\C1\C0\83LQ\04\C4\A7\F8;P\DF:\09\C6(X\90\B4\E0E\B1\93\F1djr\B4\AA\DC\93\C0\8B\D2y\90\09\86\CD\E1\16\8B\F8\92K\E8Ov\F0\BC!\BF'\1C{\E1\15]\E8\DF\DCQ\AF\AD\A09\ECb\B2\A9\A2'\1A,\C08{?\04\83\EB\9F\E6&T\9B\F2\9A\EE\CC\ACI\0B\A2\1C\B5\82g\E7h\96^\C3\EC?Za\DE\D0\0A<Bu\B2u\C6\C3+#\DE`\0BZ\BB\AA\D1\EB\10\F1>OPU\8B9U\8E\BB\1D|\EC\FE\D0li\15\0A\06\9DW\9C\A8\C7\EF?#\CC\10]\C1\1F(\A5\A5\E6\BC A)c3\9D\F1\E8\E45\01\19\A6\19\C2\DE\91\B0\08\FD\1C\BE\A4x\E8\AF\11\BA\8F(\00\87\B90\E4\A4]\93\EFc$\11\8FOY\F1\B6\1E\10|\84\83\BD\F6\9FV\E3\95\C0\D5\BA\BBEc\FB\14M'\EB\F1\1E/\0DV\AC\ADv\A1\AD\A9d\DB\C8\D3\E1\1A}\B8\DC\BEn\A3i\A21\22\C3\81\15\BA#\CC\7F\1EM\8B\E0\87t\D7\EF\A1\B2n/_\D9\C3%\E0\1E\CD@\E2.G\FD\ED\1FcW\F0\EC\8A\04\9Er\A3>\EB\AFT\AB\B5\0F\D1V[\8F\BB%\FC\A8S\B5\93v\EEf\EC\8C\FD\F0!\81\FF*:\92\03\F24\A6\86vP\FB8\D3\E4\E5w\9B\E6>G\05\A6R\D3\91\E6\B5d\B0\BEE\AD\EF4\07\12X\93M\8C\C7\9D\F61\81C\8B\7FE\FA\1BY\8DBa\A2\CA\E6:\E1\0B\94\A8\AF\8D\A9\01T\B4{AC\EE03\22\FFY\D4:\C9\A8b\FA\CF%\A4S!\EC}\1E\A0\81\B6\BE\D7\E2\1A\07\1F\BB\9C'\83geL\F6\17y\C5\E9\BA#\FA%I\CF\04\A4\10\0F\E3\00@Z\D8v2?h\A7\9D\94t\97#\8FE@\9Aj\0B\E2U\0E\99\F0t\E6\9B\90 k\B6A4\F9e\C8=\A2\10\93\1C\8C\B8`\98\C8\CE\99/.\0E\C6\F6\0A\AE\C9\86\90SEx\C5\8E\FB\BCL'5W\1A\09H\D30\CDo\11\8D\8D\D0J\\\A3=\D5\D6./\8D\97\B5\07\DD\11|B\88jx\17\07\ABL\E0\BF\B2y\B8%?\0C|\E8\F9\99\9E-\00\F7kt\FF>\07c\AAds\09\07\83\E7\A3\A2fJ\88\AFW\AF\D0\89lo\B5^\FB\0E\E5\B5\09S6\E1G\D5\8Dx\AA7\04$\C4K\0Dr\EC\95\1Dy+\B4@\BC\CDx\00\0Eq}\C8\EB\FE>::\D8\C0v:\01\EE\E2\D8C\0F\B1J\E7@\00\C6\E8\8C\C7\C9v\E2\81\F2A\C6\03\E8I-\D0\AC\C3\22c\96\98\22,\16\D5|J\1B\DBG\B2\BC\8A\EE\1A#2\1As\0DYI\96G\D3b_\E0\BF\83y\B8\A5~hK\1F?B)\F7\F6z\D4\CE\D6\9C\1F89\D1\D1Lhw2;t\9E\A8k\B1\81\F1\18\AC\D6k\DF!\D3\B9\1DPY\CB\D3\E4\13\90\93\02\FFUu\D4\1Al\90!(\E8ul\02\9E\09E*\ED\11\16@6Q\A4\E9K\AE\93\A6\BC\0BM\FF\99\19\8F\C7\ED\D47C\F5\9E\BF<\9A\0A\DDt\A5\1C\B58\9Fr\98\19\11+T\D6b\D1\1A\18\11\9D\03\F1.\0EV0\ED\EF\EE<\DC\F2\1C'\90\CE\05\B1\F4=V\AF!\9E4\C3.\F1\1F\C1\8F\F3\A0\83\D1\9D>\E6\F1\0493\F3\10\091\1E}=6wV\88DQ\D3\7F\09\C1\E0\AB\EC\AA\F7W,\02\D2H\DB\C7;\8B\BB97x\B6\83\AB\D8\1A\8A\C2]\9C\B7\1D\D7\F9\84\84A\D5\1D\94\FB\06\97\E3%\9A,\8B\93\B5\E4\D7P\9A\A7\A3\DF\D8\93z:-i\1FA.\B0\B8\D2F\93\F4e\D8K\C0\9F\D7\B6.\C34F\C4(\B7\F2\8E\80\04)\C7\D6<\DC\D2\94\FF\C8\E6\E3<\08\82\B24F\C7+\0E\A4\0Dg\04N:8(+\FD\81\CBM\F1\F0\12Oc?P;)IO\B5b\FB\0C\FB\C2x\E9\C4wm\AEo\A8b\AD\D6\C1\1Drm\87_\9B\C6\AB!c\99\AF\E8\1Ej\E3\AD\0E\D8^\85#\A4SM\0F\F3\15O\04A\C9\D0!-\F6%\F0\A8\FE\A6\81\BA\A4*\B2\E5\97\EA\04-h\B3UH\D3\9E\19`P\A3_\AE\C9\F4\06\D91\B7\FD5C\E5*\86\A4\18+8\A4\9D.\F2lZ\04c0\FF\EE\EAK\FE$Wo\B4\17\08Y\ED>\E0\98\A3\F7o\9C\AD\7F\BF\E0\86 Q\F4\D7\8D\A9\CFU+\B6\CF\10\\\06\B7\E9c9\DF\D8\E2\13\02\12\FC\DDy\0B\FE\F2\86\A8\E6\DA\E6\B8\1A\A3\\hb\BAs\12\80\08\02b\B4r*\C3s\FA\EF/G7\D7\BF\\\AFQ\14\15z\80\8D\0DqN\A1\00\DC6\DEP%yAgD\CA`\C1vx\C7\81\04si\ADg\AD\FB/\C1\A3\88\BC-\B4-C\A7<\E5>\B3\C3\DF\9C\11\B1\17M\\\B8Q&\C4\9D\D2\DB'a\15\15\C2\B6>Yz\DE\8B|\E3_}>\ACt\B3\CAq\12\107L\89\FBsY\D8\95\FB\0C^\22\CEa\97~\BA\DF\B1\87\86\D9a\05p\9E\CExTed\B4[\ABG\18\C0\B4\8E\22\131\A3\95]^\B2Q\D4\D0zu\80\15\9D\CB\F10\99\D4\AF\84xM\F7\10J\F6\B0\94m\1E\B4\F1.m1v\CA}\F0_z\EAZ\A3=\CE\11\10\E8\AB\9DT\F2E\E4b\05\1D\A1\1C\AA\89s\EB\7Fh'\EB\F2\A4|t\9C\80\1C\8E`\88\1C\C4\A3&\A3\C4\F2\8E\DA\AE\E8X\A4S\12\E7\EC\90\B2\C2\ED\B0\22\18\0F\1Bw\8Dp3\AD\B6q\11\10\DBh\0C\155F\C4\1C\90+D\DE\BC\B3\C1\82\05\1A\0D\7F\D1\B5\FC6\FF0S;\FD\D9\83\16\9E\A0\89\83\DA8\94nc6\DDt:\B8\9B\97\B5\D3b\0E<\DB\B0}\E9\A3\D6l_\E1?M\0B\92\E8V\EB(\DFEP\12o\08\C8\7Fa\A4\D1QT4m\D3/u)\1Fihi\99\E3\E8c\17Fr P5\AE\9CMg\86\E5\9Fj\13\07\01)\C9\85q<\F9\E10\7Fo\1F\D8`A6oi\95p+T\EE\B3\FA\E98\0FZx\AB6\8F\C6:\22\15\9ADw=\08\DA^zj\F1}J:bPS_\F7\A8\ED\AE\D6l_\E1\886A\A6$\A8\B8\98\A2\B3\1D_zK@\16hS\FF\80+\AF\BF%\B4QOc\98+o\D8\A2\AF\9D\B3\1C\DE-\00F;\AC\00\AE\8D#\96_A\CD\BD\1F\B0V\A1\83I\8D\0E\\\12\87\0B\D9Ia\\\8A\C1\06\EB?O'\C6K\9AV\F0\06W\18\A1\D9\BC\AD\F3\FEs\92\DE\BAr\9A\93T+G\F2\C5\BE\CE\00\BD\97\0E\D0\8F9\9A\BDI%\87*\1C\D2\D2\B8\1C\E6B!\CF\98\18\F8o\BF>\A2\F3\85\17tV\C4\E5D\BE\B1\06\D0\BC\C0\7F\87\98\EC\CA\EBKrAh\EF\DE\D0\957\8C\D3-\1A\9C% \0B\B5\9EY\19\D6\A1\AF\C4arp\95a\A7\DA4\8Ad\DB\A0F\07\DDH\D8\86,\BD\1A\E6\7F`\B0\C1Z\E8\E9\B4X\A1\0D\E3%\06\0F \A7\90\C5e:\11\7F\C1\83\D6]\AE1\06#\13\E6?r\19\CD0\BD5\DB9\8D\19\84\8C \AB:T\E1P\E0\C9R\F6\81w\14\92\8EO\B5\00\81\0F%`\8D>\9D\1F\B5\D3\09nk\04cyFLe\7F \98\E2{q\89P\F2\8EB!\0E\C4\1D\E9\C9+\DA\E9z]\96\E5$\07\02\0B\C3\FC\A5\9Br[\0CA\D6!\8A\D1\9A\B9!>\E1\1E\8Er\80\C3\C0\A1 \B9+LA\8C\BE\DB\D5X\CA>\CAR\862Q\0D\0DFG$\1C4\B0\1D\8B<\9E\18\B7pZ`\99}\9Cf\8E\EA\BA\B2\B9H\B7\0F\98\C5\87IoY\88u\AE\10\0A\F8\9C\9DO\87\A3}\\\C2$\FD\CF5\F4f1\80\16\D9\C7\A9-V\07\E3\E9\BFj\D5\F6\11\B2\18\17\F0\A4\DE\CA}\A1\08hy\C3!n\B0`E\BC\C3\FBZn\C0\DF]\89\D9?2\18\B7\BE\BA+O\7F\D6\BDT\A7\19z^\C2pdI#C\E6\93\E1r\A6\B4\95zRYJK\86\144eE\C9\CF\91&\85\A5\84T\90\BAz\92\\A\1AY\A4[z\C0\EB\\\84F\8C\D4j\9A./8\F6}\F7J?\BD\0F\0Ex\12\A4\FC\0C\ED\FDcDD\E4\1Bi!\E9RM\EE\95#yl\CBR=\AB\A2 \FC\1BRg\95\D6\B2\D4=\EEP\AF\E5J\A6\F6\96\D7=\1B\0F*\1F\885\CA\B1S\CB\FC\F2}\BEZ}\A3\DE\EA\C9~h\D0\E9Zuz\A5\1C\01\D9\A2'{:d\1F\C46_X\16x\F6E\A1\F7\FD+\CF\CB\A5\D2A\EA\98\D2\F2&\EB(*\95\A4\85\9C+\0F\C9O\B2CDD.\D2~[\E6\83q\94\CE\0C\BD\AE\03\82Y\DD\13\C3\F7R\DF\D8\037x\D2\AE\F1\1AY\\-\22\DF\1B\B6\07W\E5\A9-_Hic[\A6\19\9CyN\8F\95\06:\EF\E8\A5\BDg\81\22 \BE\C3MZ\AD\CB\C9\A2<\B7\F95\BD\CD\87\B58\22^c\A6V\A5\8FR\8C\80\9C\AFw\E6\E3.\F4K0/aE\E9.u\A4x\C2\9C\85\B3G\864\D4\F7\99\13}1\8E\CA\B3X\AF_1\B9Z\BE\97\1D\B23_\C7\06yO\BA\9B[\FC\BC'm*\CC\9E\C0\FB\FB\89\88H\9B\E0\DE1\C0)\AE\8Cs\9C\1E\96\1B\CD\A3\E7Y\93\0Cl\AC\B6#\DD\E5\D8\CC\B8G\E7MK*\02\E23\A4\F3\B3V\EF\1A\B2 O-~\C3\90\D1\D5\15\AF\EC|\E1d\ADJ\99\B2>\85\08\C8\F3zWnpe\9A<\84\A4\C8\F1\90OFR\15\FEr\A9\85O{\E4U\DDA\AB\C1\DB\22\92#\85C\E4\03A\BE\88k\9C\AE\90\B6\C6\96\1C\8A\88 \F9k\E0\97&\0E\CE\8D\AF\F5\F7uW\04\C4w\A8\C9v\AD\E6%eJ\9C\AD\CD\91[\8D\E3hjr,\EC\E2\D1\F6\CDd|\C0Xj\17\03\F8\D1\07\E2\F4x0\8B[\F4?n\D1#\ED9\88\8D\F1\16,Be\CA\93I\19JS\862\A1\FF\8B\01\19\14\05\0A\04\1D\10K\A0\B9\CB\EF!\178D\16p\90\DD\ECf\0F\BBC\FF\EFb;\9BM\E9\B8\9C\A9\A9\CB\D8\C4)\BC\C2E\0E?\F5 7y&\CB\0F\B9T\F4\00\0AP\9D\95\E4\02\E9\E4\80\16\1C\C0\16\EFq\83\D1\E6\7F#\03\0C\D1\DB\01*h\01\08Nw\B0\DA\86\98\06-\98\8E\82\BF\B0\96Gy,p\BA\8F\B3y,zX\8B\10\F6s\B1\D1\00\E3\08\A3\1C\08\A8\E5\10\01\81\EB89`C\F8;\97\F2q\0A\18\8F/\A0\1FG\B4?\DE\E5cW^\B2\D9\FAr\19jQ\9D\AAT\A3\1AU\A8A\15=W^\\\C84\FCk\8F\ADlb=\1B\D9\C0\066\B1\8E\B5\D1\A2\16l\F2\CD\87\D9\C7`>\E7=\07w!\F3\18\E4\A1\8E'\94k!\E0\A31,\98\87%\078)f\A4\90\1D\\\CDg\C6\0B\DFsID\D0\87A\9Am\F6\99\0EV\BB\1C\95\B5\E1[\1F\05\7F\A1\02\CF\1AM^s\B8\85E\BCd\F2\0A\0B\C7:\FA\F3\B7Y\B4:\9B{x\C6\81\E8\9B\0E\A179\1Ast\85\E4\F8\\\84\B5D\AA\E8\AC\DC?\8E\C4\7F\B0BE\ED\1D\05\A5\A1\F4\93Q\F2\9A\FC,[\C4Kl\96\9F\E45\19%\FD\A4\81Q\1AZ\C1W\13\E41G\85W\FB\F5\F4\CF\1E\E0*\AD\1E\FBDD$[\AE\0Fj3\DA\CB\AA\18\DF\EA'\E3(\15\B2\B9\CBrg6/\F0{y9\EC\E8H9EW\D7+\11\96\9Fp\06\DB\CC#\BC\84\0C\91i1\D6\DC}\F2\B6t3\08O\83\C7\AF\0Ee\06O\98\03\81o\19\AD1Uo\22\BC\E6\E3\94\CA\7F\D1[\CF=\B1\9D\01yJ\85\97\17l\E7@\C0)\A3\AFO\B4\D4P\89J\A1\F5\B4?S\B4]\FFv\1F}\9E\E1\DC\AA\9DVgD>\136O\E7-M\80W\9C\CFi\EFQ\08wt\97\F1\80\BBT:\CFs\1B\7FS\8B&\B6I\A5\84\C7\B9S\8BP\02\B0\9E\C1\CC\B0(\D8UK\836\D8\E1\88\D8\0D\B5\D75@\C1/(\C0\BD\DC\A9o#\0A\D0\8D!\9C\1Bp\C4\B3E\09.\E5R\D6\F0\1E\EF\1A\D9\F1\8E\CCc0S\FD\D2\BCq:m;#\B8\E3\8A\1F\D9\B2Ff\C8\BB\F2\80\DC$C\A4\AFt\906\D2@\EA\86,\852\A4\8D\F4\90Ar\AD\DC-/\C9\D7\B2P\0E\E6k\D71\CDh\0E\B9\CF\F1LXf|\A8\BDi\B2\F8\0D\13\F5^\F8\C0GS\A4#\87\B5z\F5\96\BD\09\B4\EFO\A9\A4\B7p\BEg\8A\B9\1EZ\1D\A2yI\AD\93\9D\16\FB\C5\B3\CC;\C5\8F\A3J,\BF\D5|\7F\168<>\1E\D5\DE\9D\E3Q\DF)\0E$\1C\85\F9\C88*z\CA_\F9hs\8E|(u\8Dc\EB(W\F8\A5\81\E9\FA\82\894\95\85qyb|%\0F\CB 9Q\0A\E5C<QUz\C9m\F2\BE\FC+\B9q[^\19\047Y\F4p]\B0\17|Wq\F9\C5W\E4\E3\17)\AE\F7C/\DFL\91\82,\D0j\D5G\0E%\D8\C6\85RQo\E3=\1E\B5\A8\AEV\83\F7-\17\E9\8A\82\A4\C9\99&\C1\E6>9\D98\CAw\D9\18\15\F4t\CF\07\EBs\BD\06M\15\01\F1\01\8A1M\1F\15\15\E4\C3\84\DA}\8B\A4\EBm\CF\0D*\E6|AB>0Z\F2\BF\11\B5\09\EB\E5\1D\B9R\1A;&\E9.+\FD\E4q\F9\C3V\12\B8[\06\1B\EF\D9C\D7$\F4\C8D\9D\84\FC\EC\1B\F2\F1\AB\94\D2\FB\E1K\1FM\92\EB\B5Z\9D {\1Ciga\AD\95\07\1DO\9A\19/I\DC\1F\A8\C15\11\B5{\DB\E0\DBqf\E8\EA~]\FB \08\7FR\C7fG\BAD+\F7\A3\E3c\E4_\BD\0E\E7*\02\E2\03\EE\E3k}T\B4\93\D5\09\B7\FDG\A9l\1Cg\B7\FBGJ\F7\A4qa\BFP\B6GX\B5?#\9D]s\AA\AB \97\C8d\CB\BD\EB,\A9m,\B9%J\8Ct\A7Q\8Du\DA;K\C9o\FE#\1F\EB\1C\8B\C0\E7\C4\D8\09\F6U\E1|x\D8Z\E3!\A3'\887\F8N3\02\C9\0E\AB[K\D3\C8\DD\13\14\E4\F61^}\C56\83\C1h\AD\DC9.\8C\92,]\E5:Z\11\10\CF7\E6\93\F5Q14\CFAp\A2\09O\9B\1A\B9\90\E1\EET=?\EEW\D7\F2\B4\AE\D1+\CF\E3\\J\1A\B0\83\F7y#f\E6\90B\94\A7,\E5(GI\8A\02\19\14f\0F\90\CB\1E\F6\B0\9D\1Dl\8F\19:>\93\8B\19j\08\1Dx\84\07x\C8h\B1\B6\80\B3X\9D\A4\8F\DF\94\9F(\178-k\BB\A1\84\80_\C7.\B2\C8b7\07\83j\E0C!Ml\E0,#\14\9DW;+B1\CA\90A\06\99\86_\AD\B1\82\F6\EC\D4\FE\D8\C1\A9\1E\C7\E15\A2;?\04Nn\D5\EC1\12\C6\11\9Ai!\EB\B7R\CD\A8\95N\1AFiQ\0E>\0C\0B7Z^\0B\AC\0A\A4\B3\93R\C0\AD<\A1\17\18\C3\C36\CFm\CF\CC\C0,\CB`a\8CQ\95?\D4\D1\A6\C8\1B\11\19\CE\92C@\82i\B2\0E\B8f&yP\0F<z\8D\1EU\D5\87x\8A\9B\B5\D3\BB\F8\9Fc>\B1\BB\E9\AFG\90\CD\A6\B76\FF\BC& \D0\96\8F\A9\A7\FF\D9\81\9B\99\C4\84(\8Emi\D4\A1\05\CD\A8OmjQ\CD\D6:E[\F7\D6\B0\86\95,d\01\0B\F5\90\E4\11\95\B8\99\0BHg:\D7\05\83\96\06\F1\19\97;\98\BC66Z2M#!-\F8\8D\0C\E0\00+\D9\C0V\B6\B1\91mle\13;8\C8nG2\F2\A5Q\86b\94\A3*\15\A8H\15*P\91j\D4\A58p\90\0E:\09\DFA\0F\B3q\B8\C7\18\C7\D0\C0b\BA^Kp\E1\00^\D0C`\F5\D2\D3\B0%\11\95X\170\D1\AF\CC\AF\A6\85\BE\9A\C1\7F\B3\03\BF\01\1F\19\D5\1Dw\DA\C6\07(\CB\\M(w\0F\F7\B9R\F1n\FC\148\F9\863\BC$ \BD\\\F3+\CB\D5\0D\90\FCL@.\E7M\9D|\DC\EF\E8\A3\F7\D3\93\DF\B4?vr\12\CB\FDA@\A0\14\AF\85RyDA\09:\D1\85Sh\9DP\1C\91l\960\8BY\CC`\AD\E5.\AA\A29\7F\F0~n\E2\8D\A4\0F\01\03\09\E9Ba\96\B2\DE\83qX\83\86\1C\E2\17\9D|\9C\C6|_M\94\A5\01\93\D1\8E\8E\86\AD\DAEo\8D\F7|\90\BB<i\D7\1B\9A\9DK\05\EE\A2\1FU(\C2N6\D1\DE\90<\EBe\AEf)m\F5\80\08\CF\E8{\CE(\22\8D34\06\F7\0F\97\CC\A4\061>p27JNewq\7FR\BF\D6\03\8E%\ABw\1A'\F2\A7\F6\81o\E09\C7\1F\BF\9BS\F5\88\99s\E9\A4\FBW{K@\00\86\F0\84\B5\8BZ=\CE\A6?\9D\1C\F6\15Y\C1d&3\D3\CE\B9\F2\0F.\F6\C8+\F9\14\A6\D9\BA\8A&\1BG\E9\EEp\02\ADDQ\98C.\C7\AB\9A\AE\A7\DAK2\0F\B2\C8>p@EV\93Cg}\22O\A3\8F\8D\B8-\8D\D74\A1R\09~w-\E7\D3\8D\1A!_\1FW\CC\15\A7\D7\9D\A5\01\1F\F84numX\08\8Fk<\FFr\1A:\C2\FE;\8D\22\CC\D6\02\16\F4\E4+W\BC\EB\D6\D0^\F7\8B{\84;\FC\D4\FC\B2F\C3\DE\80\BF\ECM2\DFU\15\F1vyAZY)\D8\0Fq\9F\A7K\F8\1D\BE\0A\9Fx\BB\EF\A6J+\D7\DB\BC\DB\B3\B6u\D3\BD[\AC\8E\FB\E4\88\F4\D7\FF^\ABq\ABQ\F0\A0~\E7\BB.\CE\A4\07\F4\B0\DF\C9\0FDy\89\D6\C2\8E\AE\AE\16\1D\F5^\BF\C4\97\FCG( k\03\D9\EDZ/\CC\D0\9D\1Br\E8\E4\1F\0E\04\A0\AD\9E\83\BA\1D\B7p\B6\ADY\89s\98\C7\0B\BC\CFQ\FD\C2w\DC\A0'\00\F7h\87\BD32Y`\1A\15\A8HE*S\91\12\94\A0\14\19\14\A74\19\14\A3\0Ci@\A9\90N\A8X\A8\EF\0E\87\9C\E7s\D8\0B\08\BB9H\16{8@\16{\D9\CF~\B6\B2\99-lc\9B\D5\C6\EA e\E3\8F\B4\98$<\E8xJ\AFH\9C`V\86%\11\DD\19O\F9h?\BE\C2G\FC\AC\FD\91MW]\CEh\81\D1\BAj}\04\CF\B8X\E5\D7\B5T\8AP\96]I\ED\ADR,\A6J`~\FCBG\17_4\87\0EZL\C1-4\F6p\8Ba\8D\86,\08L\FA\82\CC\E2$\17_t\9F\9EJ\FA_Z\1B\17\CED\91(\CF\14J\DC{/c\E3b*7\B1\93\1D\EC`\07\079\04\1C\E0\08eH#\8D2\94\A0\1C\E5(O\E5\18\96F\D0\9A7\B9\87\134\05\FB;\\\E6\F9`8\C2\1D\9A\083\9D[\E9Hm*P1\0E\93\01+\BEV'\C3\E5c\94\CDf\1B\DBX\C5o<\A1\0B\F7F\FB\8E|\E0\8A!Q8\1AyF@\A6\D3\98\D1\\f\FD\B9L6\A47\D9\92\8F\DBu\F21\88\A7\\\96\BC\19dl\C9% \FF\0B\90\0F\B8\CCU\F2\01\ED\18\C2\DBZs\C7\DA\EA\9D\92\8F4\DD\8C\FB^W\C9\07\DC\C9TM\99\DE\94\EB\9C\DC\97$\CA\814\D4\12RO\89\1A-t+\F3\99\CFb\D6\B0\9A\B5q\EAp\AAP\9BZ\D4\A39\CDi\10u\11\0E\19Jz\A5>\8D\DCj\06\AD\AD\872.\C9\AF\BE\8Cw\F4Z\\\E3Cf}\12\FD\01\BA8\BE\AB>\C8)\DA\E9`\0Fr\A2\9B\B7c-iL1\8A\B1\87\9D\94\D6?I\08\CF1\C2\96|<\A2\B34_\BB\CC\CD\CF\D6\17\EFS-\E3p\B9\85&\FC\15\106\87\18\11\17\B1\95\C6\1Au\CC\A1\8D\AF\CCJ\CE\E1smM\9F\E7\BA\F4\DD\C0x\EC\A6\AEs\1B\06\D7b\22\1E\E1Of1\93?\A3E=\B7\C5&6\85\CC\CF2hNgN\A1s\CC\DD\B8\E7\B8\99n4\04\98\C8\EBI\15,\E7\EA\E9\8F\97\C4\91<\C0C\1Cu\DC\C3s\95\91\C1\F5\16\D9\FC\C9\9F\86\BF\87\EA\B4\0D\C8e\0C\8F\DA\DC\FD\90\AE\E0\EC\C2$\D7\85\C1&\0E$Y(\C0I\BC\AA\AD\96g\B10\09nJg\F2\9E&\18x\8F\E1\FC\9E\9C<\19ql\DD\C7j'\CF'Ay\DB\94\1By2pZ\86\9B=\0B\FDc\C1\81\04\D53S\0CaL^\96^\92\E1\B8\924M\9A\C9\1D\F2\BB!.V9\ED\B7\07|\B3>^\EB\BE\7F\ADu8\E7P?\0D\C7\9Fx\22P\BF\22\B2\C1\E1\B6\BF\A8\B7\BD\AD\CF\DA\\\85E!\E5\E5Ot\B3-\FB\80>\D2ON(\CCd>\FC\B4\AFKR\7F\A4\F3\BD\E7\E6%\DF\E7K\AA\EC<\CE\D7j4(Ik\C4^\A9\A0\F5\C1\DE\18f\1C^\11\90m\F2\B4\B4\CBS\18\93B\92)\99\C6\C0\7Fq\85X\BC^\E6\F9\95\80\8C\D4\F2W\E7=T\E0\91P\C6\EF\A3y\BE\F7\A0\DE\EB#|J@\CE\D2\BF\DF\C7q\07\C7\8C\85]r\9B\1E6n\9F\C3\11\CF\9DY2\9B\D3\9DN1'\EC#\FA\F8\EE\9E\B4\CDGh\93\97,\01p7_X(v\F3\C5\C8\08\E6yI\97\C5I\DBf>\AE\F7\C1X\A7\9A\E1\98\08\EBo\DEc\92\8D\EE\B6&\F5\A8E-jS\89\B2\94\A3B0\89\AB\8E\AC\A0r}+\EBY\C3jV\B1\D4\D2\\`#/\F0\02\AD\B9\D2\8F\86\DDM\B4\AD\A7Q\00\B1\87Mlc3[\D8\CA>\F6\B3\87=\ECg?\FB\D9\05\1C\89\1A\BA\A58\85\81LJP\82\92\94\A24%(IE*S\89\0AT1\F4`\06\954QaS\9F\12\90\1F8\1C\E8\94\8D\0C\E21n\E0\BC8\F2\1C\D8a%o\F3\92!\\\08\D3\9Cv\92r\009\BA\F3\87\0D\EE\D6\CD\AE{21i\F1\D5\8Bi\AE\8E\C9z\A1?d\D0~\A8E\17=\CFK\A3\A4\BD\F4:\9E\D6\A2#\0C\E7!gl\B1\1C# \D6\8E\9Eu8\9964\A7E\1C)Z3\A8Nu\D3\95#,b>\F3\F9\85\B9\11~W\F3\B8\D6\03\F3\F5\98h\A3\91\CB\F7X\CE\0AV\B2\9EmQ\83\B1\C4\C2\01\0E\80\8D\BE\AB(\15\A8N]\EAQ\9F\9A\1A\01i\EDS\02\B2\9F\11\BA\B0w\1E\97s#}\E8E\CF\B0o\1E\1B\B9\FC\C5T\BE\E6W\F3\06b\93O\0C)\F2\8E\1B\F9\9Fv\DA\87\CFcZ :I@vh;\15\85\E4\22$4\1C\95\C4\97fp\AD6I\AAp\0E\9F8\F1L\C7\AC\B0\C2\89\FC\99\F4\E4\14\AA9\D4\F4\03\CCf:S\A2\85j\F4\8B\15V\11\0Ex.a\CD\A6\84\0F\8Dx\03\E8\CE\A7z\16q\0DUiCK\1AR\97:T\8A\12\17\E9\10\EBY\C9J\161\8F\BF\AD\02\9D\FD\CA@C\E8\A9T\C2\E9|\A3\8D\99^IP\9D\1B\D1X\9B\BC\AF%Is6P[\B4>I\A2\DE>\80\AD\9C\AF\9D\9E\CF\A7\9E\F3@\1B\02\E2\D6nLOr/\D4\D4\16\07\AF\E26D\88l\22\02\AE\8F\90\9F#B[;\85\15\F2\94\B4\89\94j\8E\F7\C5RP\907|!\E3}\C1\8F\ACY\10\D5y\8Bl\BB\DA\97\93\86\D2F\DAJ\0F\E9!]\A5\8D\B4\92\9A\B1td\DB\18\E1C\EDG|\A8\ADg\C0\EE$\FB\93\1C\F8?\14p\FE\DD$\B5v\A0\D6\D6\B5IOr\B0V\1F/\03=\FF\EAWiu\F9,\E9\FDp\B1\D6\0B\D9\CED4MT\84U\CE\C8\CC\F4d(g\B9:\97\EBr37\F37\E3x\9F=\FA\E5\8A\BEX\0C^\89\9D<\B28\99\94\A4\04\A5)E\09JR\82\A2A\01tAS\C8\C9}A\91]\16\87\D8\CF>\F6\B3\97=\ECg\1F\BBb\06\BB\E7:6\F1\A0O\17\CC\F5\\\CE\93\DC\CC\F9\D1\14 ;\8CZ\8D\D8X\C1\9B\BC\A0\BB\B3\A6\18\0A3Q\93\C8\B7\E6\DB\A4K\92\8A\E9\C3R!\99\082C\99\F4K\FA\AB\87\F0~\E0$\9D\01\BC\E8=\01\D9\A2\9Dt\E1E\9A\E7I\D2\B2\0F-hG`\F1,\12w^\80\96\BC\C0\03<\CFXM\0A\BE\C2\07\83\E2\B6@\B0r\E3\EAP\87z\D4\A6\22\95\A8B\05*S\D9\91\CC\07\07\D8\C2f\B6\B1\89-le5\CBY\1D\AE=\BE\8F\9Fl\FD\9D\BD\C5\BF\0Ce\04\E7q&=\22,)\E2\C7r\A6\F2)3|\19\22/^\8C\D2\92\DATbbB1\AB\F3\87\90\EE\BC(\0A\C9\14`u\0D\9C\9C\ED\01\E3\DC\8D\0Al\D3\C8\98\0F\08Hh\FA\DEnK>v\B2\98\D5\ACf\0D\EB\D8\C1v\B6[n\1A\8BR\8Er\94\A3*\B5\A9E-\EAS'\AA4\A6\0Cw\F3\8C\96:i\B3\E7\83\A2\B1\AE\08\AD\C3\0D4\A3>5\\R\87\14\A7.uMWrX\C7r\FE\E1\19-\E4}:c\E9\E9\EBI\B4\9F\B7y\9B\82\9CD{Z\D3\9A\FAq\CE\A5=\FC\C3<\E61\CB\17\9B\86\C4PK\8B\0EV\88\F1\1E\04\C45p \C5PH\1EN\D7V\DD\F3=xyA\06h\A9Q:Q*q\DE\BD\A0\9B\95\DD\C6,\E6\B0\80\05\AC\8B\AB\FC!6\B0\C1t\A5$\CDhFk:s\A2\05)\F1\91\A8\FF~M\FBy1\EF\B8\96 '\1A\D2\A9Mmzp=\DD4\C6\A3\07u\8C.\DA>EIv\F2\0F{\D9L\13\DA\C7\F4\95\10\96\B2\80\95\ACd=\B9\14\0BE\9CLU\BC\A4\89\8E\C6p\AA'\15P\04\C4\13t\D3:\BD\BB'\AF\EF\A7\11\90\82\9C\C2\97\BE$ {\F9\96i\CCbQ\C2O\DA\C7\AF\FC\0A@9\BAp*\FD\02I\04\FC\86*\9C\138i\C2\1BI'\1F:\0A\F1\B8\16\AD9\8D\CE\1E\11\90\8A\D4\A5,e\C9\A4,\C5(\13d\9A\0A\03\85\82z\8F\D2A\B7\96Rv\8F\A9\CC\E9|h\CE\FD\92F#\93\D1|\0E{\D9\CD^\F6\93\05\A1p\EE\078\02\1Ce?{\D8\C9.v\B0\95\95\B1\15GI\C7IZ\CA\A8\06\1E%%7\88\B02PH\1E\82t\E3d\8F,?N\A1\90\E6\02\D2\CDw\04d\1B\13\98\C8O.\D8\91\EE`\12\93\18I\13\CE\E2<\CD\0B\C7/\E8\A1I\AB\1E\F1\D8\1C\E8$}c^+\A9/\AEDg\DA\D0\85\16\09h5B\A8\CD\08\86R\92;y\9Aw\0Dy\FD\22\18\AF\CC8\DC\8B\02X\C7\1Cf1\D9G\82\AF\90\EB\E0\CB\9E\A9 \\' \859\CB\F4\85Ba\D0>\8C\FB\C39\85]\C6\D9\9Ai\FAaRR\1DPkh\C9\C0\BDr\88/A[-\CE`\D7\C4\9F\E6\18\01\11\A62\8E\C9\B6\DF\22\9D\AA\D4\A22\E5)G9\8A\93\16\DC\A0\C2A\0Es4\E8\89\BE\9Du\AC\8A\BAl,d!\0F\D1\8A\A1\0C\F6\0F\01\09ZTg\D2\C7\E3\8A\14\D0\F9\9F\82Ize\11.\E7B:;\A3\F0)\CFY\0C\08\09\89\1B\F1\0A\0F2\81\09\FC\98\A8\DBl\0Djp.O\F25\0F0\DB\07#\A6\A2\16\BC\BA\9B?\CC\F1\DD@\1A\DFF[%G{Y\AFaa\7F\FF\C8iI4\C5\08\ED}O\F5\AC\03\BA\EA\A1\DD\0B'J<\1D[f\AE\D4\D3&\86\89U\9A\D0\9C\E6\B4\A0\1E\D5\F3\10ur+\AB\F9\87\05,`\BE\85/\F6_\\\CF\AD~1\C0i\C7E\81\93\8E\9E{\11n\D6\9D\EC\9A%\E5\85\03x:q\FDoq\1As\22'q2M#\04\80\E5\18\C60\0E0\9BY,`\05+\F5\BC\E2\F9Y\D2\FA\D2\97/\B9N\B36\F0\0C\E7kS\C1\CB\14\15\12q\E2(\9A\F8$\EAT,t\A3\09\FF&\EDm-\B4\CDts\CF\1A\DCR\E7\10\1BE\F3\CDN:\01\D9\1A\C1\1Ew\A1\0B\A7pR>\F9\E3\8AT\A4}pt\FF\C7Lf1\9DM\A6\12Y~\19\80\A1\00\1D\DE\0B\D6JR\\\13\F7\0F\E0\02\97\1D,\8B\F2\12\97G\FF\B9\18e)\8C\96iQ\F3s)E:\A5(EIJQ\92JT\A5:\95c\9AC\14\E7\B4\D0N}\1B+Y\C5n\F6\B0\87\BD\EC\E5\10Y\1C\02r\83\9EA\01\1F\9A\FD\EC\8C\96v\FCL\BAr'/x\1A\D6\FB\0Cm\94\F7>v\09HIR\05\C9\ACipc\D7\C0C\CB\85\E6Fr\E6\17\02b\DC3\9E\C9Y\F4t\CC;)\8D&4\E1j\84?\99\C4d\AB\16\97\F1p\F05\D3\92\89\9D\98\D4\B86\D1\16\DA\A7u\0E\FD\06W\09HI&\9A\CDH\0A\D0\94ShJ\03*Q\96\B2\AE\05\E5\A8@\858\F3\B7\EDc';Y\C32\E61\D3h\DFW\82g\19\C0\C0(L\B3\FB(\A4\C9/\FA&!\13\84g\04D\C1\9A/\03\BC\8Dy\DA\80\0Cm\FB\DD\C4\EB\EE\E8l\0C*Q@\FA\C8gr\D8eg\FC\BF\E5\06)m\0Ef1\DD\C3\1E\B8T\AB\C5_\E2\0F\0C\D1\FB\A5\AAk\AD.\C2,\BD\FF\8B\CB\F52C\B2\1Ck\C1*y\\\DAHy9[>q,3F\AE|/]\CD\A3fM\92\C4|V2\84`\1D>\F2t\A4\\\A5\F5\C4\22WZ\D9Qk\E5\AF\E2G\FC\AA\8F\84\8EI\FC\F6\FB\02\EF\BC\D3\D3\B67\D7Z\FEA\A2\CDI\94\031\C5\B5\CBe5\BB]\DF\CE\1CdC\B8\1C|\B1\87\04d\AF.\B4\F3\07\86\E9\A1\8D\CA\BB\16`\F0\05:k\A7g\F1\8AeX\9D\C3a\8E\1A\85\A3\F2\A4G8\C0\1E6\B0\81%\FC\C7o\AC\09^\9F\C8D\0A\D2\8A\D6\9C@=\AAQ\85\22\94\89*\EE\DA\13&\932\97L\A3\07=\98\CA\D5\AC\D6.\D5d:=\F9\CB\13\02\12\84\B7\19\B0\14\07\92t\94\D6B\F8\D4\F0\B4\1A\D5\B4,\03\09G\BBM\94\80,\E0\19n\D0u\C7\8B\B8\921\\\C8`\DA\B9\D0\EC\CD\8C\E7=\E6\86_^\C8M\1E~\8B\95\DA\C9@\BE\F2xX\04\F0\BB~\9A\E3\D2+.\E1J\ED\F4\BEPv\CC\0D\FC\C2|\96\B1&\A8\9F\B0\0Eb\9Fa0Z-Hv0\A4Mtd3\879\98Ee\A5)h\D2o\EC\8B\A2\ED(EiJS\96\064\A0=\ED)N/\FE\E5.\9E\D5V\CC\F2L\A3i\98j-\19\08\06\12(\16\16Q@\11\90c\1E\D5\F5%\DC[\02\E2T5\12\0Fer3\F7p\177\E9\0E\10[y\96gi\C4y\F4\A6\83CJ\96\95|\CBd\A6E\AE\88\BFps\D8\FA\92l,\E0\8F\80\B6\FF\1F\1AR\9F\DA\D4\A1v\F0\DFd\D9\BA\EFb\15\ABY\CDjV\B1J\8F\AF\BF\DD%\D1\04\0C\D1NN\E3R\D6\F0\0FS\F9\DE:\AE\7F\04\B2\126~\C8\B5\C9\90\12\CE\1C\EEe\1D0\03\80Bt\A4\17\DD\B9\9DRz\DC\99\B2\F4\E35\AF\96\91\1A\1E:\9D\06z2\FCD\C1eT\D1N\AAzZ\8Dj\8EU\C3\89\F5}\1F\B73\8E\878\D78\1F\96\F0 \0FR\86\1Et\A1\1D\AD\F2%\E0\11\962\87\DF\F9\8E\A5V?\FF\C7}|\EA\F9\EEI\18\C5\0F\01]\E8!\FE5\D9\03\16\A5<\15\A8D\85\E0\FF\A5)M\09\8AQ\82\D2d\E4\C9\0A\E3 \07\D9\CB>\0Er\80=\ECa\0B\DB\D8\C6v\B6\B0\8D\ED\D1\12V\BD\EA\DA\C2\10\E2\BA~\A0\B6[\FD\BA\81\BF9\CDI\1F\BB\A3\CC\08\92\12\EB\B6$\11\C1\08\BC\07\BC\F5\87\E0\CF$\BD\E7e&\F9p-\F7$}L\09}\E7\E2%BQ\83\8AQ \B1U\C2)+\ACe\0C\A4>7s\99y]\DC\CDg|\06\14\A4)'\D2\88\064\A0\1A\15l^\BB\9BM\AC`)\CBX\CA\\c\C8v3~\E2\09\BE\F6\09\EB=\93a\8C\B3r\019\C4z\D6\DB\DC\98\89f\E4\0A\E9\A6\C8\1E{\83\BCV@\8F\B0+?\B5Z\C4#\AE\B5\F8\1Ez\B9\E4\E9\9E\C3J\16\F2\0B?3\97\\Jr\0A\A7\D2\96\13\A9\E4RK\DEa\9A\07#&8G\D6\F3\A8?\D6R\979\90\F7\14\E7\A1!$\A79\9C\BFY\ED\D8\AE\D7P\A3C\89<\C9\E9x\84\E5\B9\98\8B\F5\90\05\D1\8BU\A0\18eH\A38\85\D9\05\EC'\8Bml\8F\ED\18\B9\95\8Fy\87y>\1B\18\A7\F3f\9Es\B3\BA\89E\9C\A1k\8B]@c\A6X\86%;\CC2V\B0\85\DD\ECeO\C4\C7,A\A1\D0\BF:su\98}d\B3\93-lfM\94\01P\86\EAT\A7\1C\C5\C9\A0(%M;\90@\F4\ABHEH\89\A0\12\A4\06\0D\A8i9\D2?\E4rO\F2\A8\CF\E0d_\8D\DE\BF]qa:\C9\17>\FF\F1\A0\83Qq\E8*.\F6\1D5-\95\88g\AE[8\81\07X\E0x\A6\BD\AD\BC\CB\19I\0B\D1\91w\E6\F4R\1E\E6#f\B3\D9\B3\\\84\9B\99\CDG<\CC\A5IH\11T\86G\D9\13z\F3a~d4\9D|\9B\19\B0<\FDx\9AE\86\BEZ\C4%\9E\D5\E6%_d\AE\D4\8Fw\\ieY\0E\FA\AC\9D\D6\C7\C1$\CA\93\AE\F0]\EB\CB'\D6 7#\A2W\A3\17\BD\E8\92\B0\A2\E6 \7F\F2=\DF2/e\94}\C5\A8M\1DjR1\A8\FC(Oy\CA;J\FA\B2\D9\CEv\B6\B3\99\EDlg+kYe\13@\CC-\14\A2-\D5\116['*\F7!jp\02\A5\C9a\BE\A7a\153y\8Dn\1Ek\D0ui\C6\0C\86i9\86\1CF?\1Eu&q\AA\8B\D8\CC\EDLI\DA\DB\86k\B1\D4}\83j\89)\83\D2\92R\C5\F6\B4\A3\05\0D\A8\9D\07\C7\DB\CD,e\11s\98\C3\7F\D1bR\A4\18\CAS\8A\92\14\A38e(F1J\07\859\91Ym5\15H FG 4\F9A\0E\B2\9B\03\1Cd\1F{\F2\96\F7UAA\C1\17\B8\81\E7|V\A3:\89\89\BA\93\9B\93\A9\10\B5\A9GE*P\99\0A\14\A3(\19\A4S\98,r\D8K6\DB\D9\C6V\B6\B0\8Ee)\9B\E7ZAAA\C1\1A\CD\92\EA\F5\1E\0F\C6G\B7TRPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPH9\A4\A9.P\F0\1D\D2iC\0DJ\B3\85\FFX\A5\BACAAAA!\1ET\E7%\B6#\A1\E3_n\A0\B0\EA\16\05\05\05+\14\E016\F2\0D5\8E\F3~\A8\CBXf\B2\865\CCd,u\8E\D3^\18\CEA\03\F1\D0\8E\A54U\13EAA!\12C\82\8B\C4\94\E3\B8\0F\0A\F18\87MK\E6a\1E\A1\E0q\D7\0F\0FZ\10\8F\C0\B1\97.j\AA(((\84\E3\89\E0\12\B1\F6\B8\ED\81\22|g\B9hN=\CED7\97G%\1F\82\B0\95Zj\B2(((\98\F1dp\81XwL\B5\AA\13/\B1\80\AD\AC\E7gFS\C9\B6\EC\B8\A8\8B\E6\AB\B6\F7Uf43X\CFV\16\F0\12\1DS\BC\C7\CA\B1\DB\96\80\08\9F\1DW\F3\E2T\FE`=\13h\AC\96\08\05\85\E3\89\80\94gR\D8\D2\B7\8F\9B\A2\96nOn\D4%3\97\0EQ\EF\1B\C9\BE\B0\D2_P.\85{\ED\A1\18\E4C\C8\A5e\8A\8F\8C\0C\1Ee%\07\99\CDe\B6\F6\8F\85x\82\9C`\ABwPS-\12\0A\0A\C7\0B\01\A9\C6\0A\CB\E5\EF\95(\E5?\B4]4\DF\8Fr\D7k\96\A5\97S5e\FBmYL\02\22<\98\D2#\A3\00\BF\19\DA2\892Q\CA\15\E3+S\AB\7FQ\C6\F6\0A\0A:Z2?\C6B\B1\9DkR\B4m\85\F83j\AB\AC\B8\904v\D9\F6\C4N\CB\C5\E3\96\A8\E5\7FOQ\D5{\CD8\C8\87\F0kJ\8F\FB\E6a\ADYLE\8BRE\F99\A2\DD\9D\D5\A2\A1\A0\A0\E1\CF8\96\8A\\\EA\A5d\DB\AE\B3i\D3>*G\94/\1F\B3'\22\C5R\15\D9kS~xJ\F6[\C7\B8\08Hjs\A9\A7F\B4\E7/JGl(\C6[\B4\FB\05\B5h(\F8\95\AD\F6b\B7\19\1BiTO\C9\FE\BC\C1\E6\B7\12\\f!\AE\88\85\E2\11W\AE\A2\A4M\F9\1BS\B2\DF\8A;X\CA\AF(j\C1\8B\BF\15ve\14\E7[\DC\A9L\98\15\14Bx \8E\BD\E6?)i\C2Z7F\ABfD\DCQ\C4F\85.\089\16\FD0+\C6[j\A7`\CF5\89\8B\03Y\98\D2\E3\BE\AFe\9B\8C\C2\DA\16a\DE@\DA\91}\0C\18t\8F\B4\E1\9BWD\11\D2\95`\22\D9\B6#\22\9B\89\94\B0\BC\B7s\14]d\C0\ABhdJ\F6aaN\E7E~g=G9\C82~\E4.\9A\1D\8F$\A4\0F\B7\87\8E\19\C1\8F\BA\DBp\EDJ\DB=\B6\7F\D1#\C6\02\B8\DE\E2\9E?l\EF\F8\CD\E2\8E\8D1\DErZ\0A\F6\\\06\07\E2  \1F\1F\83\04\E4\A0a\09\F8\F9\98\DA\14\18\D10\C6Fi\B1\E5]c\E2\DAV\8C\B1\BCwq\0C\11y\C3\14\EB\C1\22\DCb\0A\F1c\14\84\F6>\9E\F9\91T\B2\C2J\8F\B1\13<3\C6P\DFaq\CF\CD\B6w\8C\B0\B8cG\8C\B7\9C\19c\17\93\EE\CB\BE\9D\18\C7RqQJ\8F\F4\D3\A3r\DB\E5\C9$\93\8BmZ\9E\EAj\F4\BE1u\9EVx;.\02\F2\B6\E5\BD\B91\EE\EA\9BR\FD\D7\95\D5\B6\AD\99\1A\C3\D7L\11\10\8F\D1\8AWYC6\C2\16\C6sF\94Rmb\0A\E6\AC\F6\DEk\A2\96_i!7\87\851\DE\D2:*y\FB\84\AD\08\D9\AC\E6\15\DF\F9T\9C\16s\A1XKFJ\8F\F4Fq-\87\D6\C7\7F\BC\CD=\0C\A6u\8AZ\D9\9D\19\B3\85N\13\10Ih\9B\E5/\\\15E\B4i\96n\B4U\04\C4\AF\CC\E3k!\B7.\ED\F8\C1\92\E2\17\8Aa\94\FB\92\E5\F3[G\11\DFd\D1\DE\B2\FC\AB\B6\EF\D8m\C9%U\E1\C7\08\ED\CA\CB\14\F1U?O\891E\06\A7\F8H/\10\93w\8C\E7\D8\CFt\EE\A7OT/\12E@\8E5\02rc\9C#c\1F\CD\15\01\F1#\F9\F8\D1\F2s\AD\A1\9AE\E9q\B6\9F8\9A5Mg6G\94\DDF\D7(\A5O\B1}\C7k\16w\D4`\ADe\D9\E9\BER\CE\96e\A9M\BB^<\06\C6\FA[\0E\10\10}\03\F0\13\D7Xz\92\A4&\01\C9\B48>\8A\AB'>\B2\BC\F7X! =9\1A\F7\98XE\05E@\FC\86\97\A3~\AE?,\B4\095m\94\C1\93m\DER\81g9d\E0=\9E\A6\BCM\E9\AFm\F6\A7\91\E6\CF\05m<o\FC\E5aP\87UQ\EA\F9\E11\11\9B\B8u\04'\9B\E7\A3\A3\8C\953\A5\A2n\85\F4=WEx\93\A4\22\01I\F6\91\1A\04$3\8A\E2<\DA1Q\11\10\7F\A1\B9\ED\94\BF\C2\E2\8E\01Q\D4w\ABc\EE\16\7F\0A\95\FD)F\C9\F2QL\14s\B9\C0R\82jg\06\E9\97L\1Bi\9Coc9\93\CB\04NL\F9\B1^ \86\88\D3\FA0mI\DE\90\00V\CAGr\B9\94\D1\84\17\CFS_\11\90c\90\80<\96\E7v\1Dw>C\FE& /\D8~\AC?,\EF\B9\C0\82\0B\99\17\D3}\B2\80\C1N~oL\07\CFZ\FCm\C1}\0C\B4,;\D7\B6\0D\CF\FA\A2\9F\BB1/\E6\D4\C8\E6-\AA\A4\F4X?=_K\9DA\84\91.[\C4\88C2I\06I\A1@\EF\BC\ED\E34d\8A\80\E4\07\95\C9\CAs\BB~>\9E\88GE\EE\0F)\16s\F8\806\BE\AB\E1\B2\18\C6\87\E5\A3,\EFo\99b\E5.\8CC\D7`v\A5\8B\BD\DB.\CC\22\93\02\ED\CD($\AAB\0C\83\C6%\9E\F7q\D5\18\01%\8D\C7\1EFR(e\C7\FB\94D\97\BD\93\C5\0Akd\84d\08\C2\11\9E\A4\94\22 \C7\0C\01\B9&\1F\ED\CAM\D1\18\1EyF!\1E\B1H_:\D5W\A9m\D3b\9A\CF\B5\8EzoQ>5(<c\B7\EAR\D3s\87\C4,_\CD\E0\A3\FB\89\A5\B9o\00mc\B4\E0\90\C7\B1^\07\E6\D96i>-Rr\C4\9F\92\F8\B2w\A9\EC\17k\AC\97k\A4\80 l\B4\14c*\02\92\8A\04\E4\9B|\B5,U\03\D1\E6\919\9B\195\F3\9C\7F<\A9\0B\C4\B4\808\C9\E6\EEWcz\CBF\17\96=\1F\B3\FC\9Dq\84\8A\07\E8\10S@R\C0\B3\FE-\CB\17\F9\9A\22Y\DC\94r!\CE\8B\C4\F4\DF\89\EB(*g\CBx9hIDfIc\CDc\BF\AC\22 \C7\00\019\90\AF\96\A5v\BC\86\B8P\DAB\82o\CC\07\DE\D375]\17\E3cU\B3\B9\F7MS\B4\9FX\0B\DE\EF\A6\E7\CE\8E\C9\1B\19\85ko\D8\94\AC\11\D3=\CF+\B4\8Ejs\15\CF\F1I\8A\85\BBy:\81\B6F\08!K\CA\E5\F2\97\05\09\C9\921R0\A0Ql\AF\08H\8A\13\90\CC|\B6l\E6\B1N>\0AF\E5>tI\B7_,n\DE\B3\AD\E7\B2<\DC{J\0C\81^V\D8\1E\BBP\1E\C4!\EF\D9\96]\9A\0F7\ACd\88\AE\B2\12\\\02\FEM\A1\\}\17\B9\B1\08\9E*\93,\88\C8\B7R: \9A\1C\AA\08HJ\13\90&\F9l\D9\8Ac\9D\80\C4\13\8D\F7o\9FxI\DB\87G\BC\D3\F6^sf\87\B7b\EC\C6\E3\D7\AE@\B8K\DAx\DB\B2w\DB\B6\A1\BB'\FDzS\E2\1E\11\08\1BRD\1B\D2&\9F\C2\888\8E\F62#\82\84,\95F\81_\FF\A7\08H\0A\13\90\96\F9lYR\EDY\93\EF\9E\D5\8C\D1q\94j\C1m\DC\EF\83\8F8\8D\A9\F4\8A*\DEz&\06Wa\DEq\DF\C8\BE\A8e\DBY\\\99\17\B5t\C90\83\DDB1\84'\C3\A3\8A\DA\BEb\BA\07\BD:\C6\A1\E4\B4U\F9\91\1E6\FD\E4\0F\D4\E2\AB\F0\BC/g\D0\9F\AD\BC\CB\F2\84\1F\FE\07\A7r>\CF\9B\\\90\1B\F0\0Bg3\0B\EE\A6\22\D7F\09T\98d\A4q\01\B5|\F19rY\C5\84(\B1S|\85\ED\F9\BCo\DB\B1\CD\7F|\1B\B7\FB\94?\C24T`e\94\FA\C5\0A^\F6e\D8\1Dv\22\85\C8\10(\E3lJ\0F\0D+\FBe\8C\9A\B4\B7\B0w\0B0\BB\E5=\E8\D1[\1D\DDI\EE\F0=\17b\CEp.\19\F2q\90S\D8,\F5\1D\EA\85\8A2%\8C\0B9 ]4\FD\98\1F\CC\0Dn\1C.~\C2pI\81\C4k\85\0D\B1)\947z>\D8\B2\FB}R\E7\AA\FCfQ\BB7b\DE75\EC\8EY6e\17X\18\ABF\C7/ae\BF\8DY\17\AB(L\BFx\E2\967(f\A0\ED\BC\1E\1B}\AD\0B\09\13\DE\142-\F5\CF;\D6\0Bi2B\B2M\8B\E4\0Ei\16\F8\EDi\1F\F4\C2\E57\FA\8A\80\DC(\\\9E\02\AB\E5\CF\F9\1A\0B\A3\92\CBY&\17Oqs\DCe\D7P\C7'\9Cf\01\86p-mM\BD\95M\07\E6\DA\DE\F5cD8\C4\13\A2$\CE)\C6\9E\08ab\0E\A59`Y\BA!\8B\C3\BE\DB\8F14\19-\98c\12s\09sx\89\F7<\10n\9C\CC4\17\028\CE\A7s\94\BE\F2\1AE\F8\D7\1Cd\E4\1E\EE3\FC5\81\F3\1C|Y\7F>2\C9\CA\B6rj`\C0\DD\E4y\BC\81\02\05\D7\0D\AB\EA\0F:\9F\CB*\DE\DA\98]\C3\1F\A2=[\DC\9D/-V+\FE>V\F9\8F\02l\C8\13-\F5W\1A\9D\F2\B42E\CD\9D\1BC\83\14\99z\F6\91(%;\E7\A9\F5\8FD\94\9Ce[\8F\82\A6`&\9BiE9\8Fz\B0b\BC\DF\BF\84<*_\C9\C5\F1\8F\94w|:\E2\C3r\EA5\95\C3\A6\9D\F0\1B\0E\AB\86;\CB\0E\D3\F3\97\07,\B2\B2\A3f\B0I\1E\0A\F1\B1o\14\E8\1F\A7H4\83\EAy\88\C4k\1F^\C9\B7\C8\A45}\B9\9C\DB\18\C6\F9\F4\E4D[\B7\B4\1Ay\EC\8C\11Q\9FT\9F\1E\9C\C7Pn\E1Z\CE\A1\0B\F5\92\C4K\99\1D\DF\EC\CD\01\22\93\D5n\8ABr\AC\B3\12\DE\14\85\1CD.\C2\BF\DB\D6\E3\0ES\D9\CF=\1B+i\F1{\D6\BE\19\\\00{\C7?V\06\FBr\01\D8o\AE\E5ga\A2\94\CB\1C_\1C\DB\C8>\D3\1B>\0B\\\DF\E5\8B\A4\B8\C38\E29\F18\9A\02\DA\0F}\CB\BA2\CF\ED{/5\\l\0B\D0\85\FB\F9\DD\C2\18s/?\F18=,\13\A7\E65\98\C3\D3\11KPg\1E`*;-=\D8\C7s5u]n\F7]aa@\EC\FCU\FE\8A\DBx\F0\03\CB\D6\BFoY\B6\9FEI;;\A4Fa\FE\16wz'\07\8F\FF\CB\AF\0A.\7F\8F\C6?V6\FB0\C5\D2\BB\E6:6\90\1C\D3\E2~P\CA\B9\B0Dv\0F\E3r\AE\D7v\A6~\C8\FDr2[=%\1F;}\14\E7\22\16\1A\C4\88\C4\17\DD\C5\B6\A8\BF\1BV\88kX\12\B3\19[x\91\93\C3\EE\1C\90\C7\AE\F8\D0poK\1E\B3I\FE\AA\FB\ECN\E7\\\17ip\9F\B0\F7\FDf\93a\DC*t\C5\04\CB\92K\F3\10\E6\F0sK\97\BA\E8\84>\DCi\B3\B7G\A3\A6\9C%\D9\8Fr\AC\0B.~O\E6e\B4<\E7\B3y\D2&|{5:\8C\FFx\DE\A5er\B0\E4\9A\22\F6\B6\09\\\7F\C0\17\BD\D2P\0F\DA\9F.\99I8\D2\F5\9EYL\83\94!\1F\ED\F2\98\09\C4l\1ES\CA\BF\0D\EBa&\1E%\A5\85\B4\916\D2F\1A\06\C2J\9B\8F\B9\0C0\08\B5\CE\CAcGh\92\ED.|\17\F9k\BA\D4\0D\BE\B9\95d\86[0\9D\EE\1AS\19^\8F\1B\A2\96]j\19\A6%2gX\E9(vI\B9\16{\EAr\96\A6}\D1#\EAF\A6\C3\F4*g\D93y\F9\F2\F9\22 \D9\B4\F2\D5L\89\B0\A11\9B\DA\EE\91\EA\AE\ED\B4\9F5\BDi\B1\14\0E\08o\FC\11\ED\BAT\C0\C0\BD\A7\ECM\8A\C5\D5^\E9\19\E8\95\EF\C9L\19\F2Q\9F-\09\8D\80\1F}\96\AE:$\7F\7FZ[\EC\DA\CB\FD2M\D6\9B>\D5\11Y*_\CAX\E9`\A4\FA\C2\7F\\\14\E4\09z\E5\B1\1B^\07:0\DD|\B5\B1\8C\94\09\F2\8F\1C2\BD{\AB\CC\90g\A5w`\AA\04\B8\17w\86\CB\DA\88,\1C\D1\C4f\D6\91\9En\B6 \C9\D1\DA\1F\C9n\8F\B4,\B72J\0Dj\19r\8Ch\89x\BDA\95\98q\8D\13' \F1\983'\0F\16\DC\B6\D9g|\A8\8B\A2\9A\22\F2\B7\E9]\B7k\A2\CE\82>YG^\D0\F5\\\EE\E3\CD@\EE\CD\D4\C9iY!\1F\BA\8F\F8\04\E0\9E\A2d\C0\09\B0\90\0C\93\851>\D9N\F9D\CE\0E\84u\D3(bc\A0E\1E;\E1!\9E1\8A\01Z\C8\F3\B22\C6\9B\B7\CA\13RU\CB\10\DC\CE\85^\88\8C\1F\FBC\14\91\99\B5\C5\D1?\11\E5\EE\88\DA\FEH%\FD|\CBr\EB\A3\D45\D2i\D3+\15\FA\BDy\FB\F2\F9$ \B94\F6\C9\\)l\C5\7F\BEo\18\A7\AFJ\9A\AB\D2\FE&\A6\88\BD\07\A4f\E0\FA\F5\BEYM\DE\EF \CBeg\12\8E\E5\D2!V\B0\1F\BF\E13G\C6\C0\10\7F5*#\90r\B5\9B,\89\9B\F2o\90\07\A4\B6\AEp\BE\8Fryt\22\DB\AA\EF\A8\06\CB\AC\B8\DF\9B%\8FI\F1\80\B7\B8\F3\11o\EE\B2\A8\A7\B5SR4ua8Y\9B\10\B5\FD\13\22\E4\A2\D1\FA\C9\0AVJ\EB\BB<\D2\9A\C54\DFM\97\EE20tl\0F~\C9)\86k'\C43b\9E\F5\C9l\19i\BD\A8\07\DA\95#O\9BytW\0E\B3\EB\DEG\81\AB\DB}#\C6\B9:\A9\CA\F3\ABS\88|\\\ECP\9Bw\FB\C9\C16\8D\CF\91\02\F2p\98\1DIl\1C\95\D7\A5\86\D6\A49l\CC\8F\8F\EDE!\AB\9C\F8\B1*\10\CA\E1(\E78\DC\13},?\95U\AC\A9\DDQZ\F4bX\B9uq\87Z\7F)J\B9]\16o\AFl\A9\B4\F6F\85>(\D67. \DF\C7\FC\A29rm\EC\D1\B2\D7\17\EA\C3\A8\06\03\0D\E4\0EyT\DA'e\D1, sM\FD\D75p\FDIE@|\8Db\F9Y#\A3\9A\F4\FA\06\B7!\85\E4\93\B0)\BD@^\91\9B\A4\97\B4\93\1E\D2C.\90\BB\E4=K\E1V\96<-\E55%r\1E;\A1\AB\CC\B1x\E2Z\F9X\EE\97\C1\D2Cz\C8Ir\9A\\#\CF\C9/a\A1\1C\8E\04\0C\18\0F9l\B8W\C1\B2\9E\93-J\1E\88\BA3(fZ\E8\ED\DAo\0C6R4\AA\1D\D3~\8B\B7[\F35\DE\C4\17\9B\1C\EB+w\8AkS\B0>\9E\11s\A1\0Ff\CBs\FEp\98\EBh\B2\C6\FA-p\F5\A0O\F2\CA+\02b\0D'#\C5es\82?\1A\D5\84\C3i\F2\9E\C94\F0Yi\18\A5\DA5d\A8|!G\C2&\FF6\B9(\CF\1DPB^1M\01\11\919r\9B\16\E3'\E2(/7\85\F1*c\03\E1\F6\9C\F5\0E\B1\E6\18\06F\94\8B\EEEz\91\A1T\BF\B8\83N\0F\8EZ\EAH\C4\BB\CF\F7Q\F2\A8\F4\A8\BCX\E8h\16\17\01Y\14\AF\E1\85\B7h\EC\03w\B9\E0\F1\81\A9\FF:\FB'6\96\22 \D1tg[\1Cm\B7O\224\CCDn3\0C\C4\19R7f\D5+\CBhY\1E\B6\00L\D6\D4\DBq\1D\9DdY\18\1F\F3\96\B4\8ByW!\B9\D9\E4\8B;*`}\E2\A4\13\95u\1A\D6ma\06\B2i6\B5\FC\DEP\EE\7F\B6\ED1\06N\9Af\A3<N\0B\13\A1l\B6,\E7\8D\0A\BD}<_\FB\B10\FE1\12;\E4\F4x\C6\CDr\CFg\CB\14\FFd\BD\A8f\CA\A1>Y\E3A*(\02\E2S\F4s\B8\DD\FB)\E1}\A3\FA\22\AD\0C\DE\AD\AF\1A\AD\ABbHa/\96\15a\D6Y}\E2\BCw\94iA\C9\967\A4Z\DC\DDV\DF`\C4\98#\E78\9DZ\E7\AE(\EF}7l/ag-\A4\F3D_\DB\B6\E5\ABP\B9Z\B6)\98\CC\B1}\DE\CBW\02,\B7p{|_-S\EA\86\8EM\A1XQ\FA\B5\C2\F1~\FF\DA\9E\CE\96\EE\FEJ\9C\F4\B0a\16\E5JS/M)\14\01\89\8D\0F\1Do\F9E\DE7\EA\0F\E4\E7\D0 |'\8F\E6\87\85\E4\1A\D9j\22\05\A3c>\A1\A0\BCb\22;\D3\A2\0A\AD\A2\1D%e\BA\81h\D5\14\8E8(\C6\EA\13\F5\BD\FD\0D\A5\8A\DB\D6pl\A8\DC\96\18vh\1A\EC\0Da\8B\C5U?oT\E8\EF\E7}\D8\E7\D3\8C7p\F4\F3p\AE\A41\DB_\04\A4\92\C9\9C\F7]-\93c!E@|\88\B4\BCDkH\15E\FA\A9H/\83\DA\BCh>\1AQ^>4\11\84\8F%\C3\A6t)\99j\B2`\BF>_\16\F3\C5dv\E8\19\13\05\89\91=0q5z`b\96\09\95\CA\B4\AD\DF\AA\A0\7F~\ED\98-\A9\15\1CZ+lK\E9\EF-\15\E1\EA\E8\B5\0A\FD\C7$\13\90a\1E\CE\96\F3\FCE>\10\E4U\93aI\A5\C0\D5A\8A\80\F8\10\0D]h\F9b\AF\1B5\9E\D0\F2\9F+'\E5\BB!\FDCb\89\00OQ,J\B9\E22\D3P\EEO-\BBs>\8E\8A\B21\C4\F5T\13v;\E8\DC\1F\DD\F0\F6\E5P\99\8A1\EA\17\C8\E010f;\02\09#N\8BQJ\97j\BF\12\B7Qp\B2\B08\C9\04d\ACgs\A5`~\DA\EA\F6Q\D7$\0C\1E\11\B8:U\11\10\1Fb\B0\0B-\CF\A5\B4\9BU.\10\E3\F7\92\9CY<$\99\F92F\DCp;L\A6\AD!T\FDiL\09O\13\0D@Q&\D2%\F4\D7\E7\9Cb\13\E6)\16\B6rM\F0,\9D\F3\A1\B4\83\F1\B1\A2'\92\1A\1E2\1A\8E\A5\B6\0F8\1F\C6\F6\95og(\1D\1D\85C\FC\E2\B0|\D4\DA]T>\C6\DF\A7\E32\1A\F9oUZ\C9\17\86\BF.\09\FC\D7\C3\D7Y\1C\8FW\B8\F1M\D2\A8\E1%\01\E9F\B1\FE\14\0F\09\B3\13\C1\06N5X\95u\E7\AB\08\12R\90O\E8\11\FA\EBq\06r0\A17NaC\F0\AC'@\AF$\10\904^\0FvW,)\F3\00\CA\C4M@J\C7t\87\0C\BC-\83\D7m\22\11\CFM\9D\99\94\15\FC\FFP~n\F6*\8Be\86\87\BC\8F-^0\9C\B7\A1I`\DE_\A2\D6k\DF\A1l\0A=5N\02r2!\8E`\1F_&\F8\B2C\\fHt\DE\95qa\AB\DD#\06\FD\E7\1D\DC\96p\CE\C9\DCPt\BD\93B\FF\B8L@\A0\0E\F7\C6E@2\18D\01Z\C7|W[\0Ap\91%\BB\16I@\EE\B7\0DW\ED\15\01\D9\93\F7[\02q\FC\0F\F3Y~\DE\B7\DB\A3v^Gu\7F\AEK3Yg\F8\EB\E2\C0\7F\E7\AB\F5\DAw(\E3\CAS=\0D^\F3-2-(=\FD\C1!\A9\DCX\83Dv\B4\E1\FA\B9\06\A7\C1\FB\1Dz\D7\B0\D0\13+I~\16\B2(\A8d\FB\D6\1C:\01Mc\D6\EEwN\88\AB\15\8D-r\1B\86\1FM\80\F6d\DB\96\F1J\B43??\E1k\CE\97\FFI\8B\FC}\F5\D1\9E\B4\B2\98\C3.`\8E\1E\8F\99\FC\F9\83q\B8\BC\CD\8D\A1t \91x\D9\95\B6\F7\F1\92\03\A9C(\C0\E9\12\87^y_p\8B\0E\F0 }\83g\0Dy+\C4\8F<\CB\DD\0E\BDkU\E8\AC\22\94\A2\A4C\8F\DD\125\FEm\A0O\C7Q$\0EC\C9\F6\0C\8D\EBm\97\C5!\E8*Da\DE\B0In\05\EB\D8\EC\D1\B4\D8\9E\1F)\D4'\DC\C3\FC\FC\BDo\87'\AD\1C\EE\91\8D[\1E8\BA\00\AA\D11pr\AE\DA\F2\FB\0C{\\y\EA^/\09H\11]'\B9\CA\B1\97\DE\17\D2\85\14\E0\1D*\02\05x7\14\05\EF\07nq\ECMY\A1\B3\A2\A1\7F\\\17b\C1\09\8C\8E\CB\D2\FE\86\B8\DEus\1Ce\0As\07MmK\CC\F3lZ$[t6\C7\836\16e\94\9FW\A6\BFYh\F8\ABg\E0\BF\FEj\C5\F6\19\B6\A4\D0S\E3$ \05\E0p\9CE\F3\C6\BF\CE\0E\9E\95\E3)`XHA\B1\9E\0B\C9q\EC=\FA\A6p\1B\E0\E0\83c-\8Aw\C5\A5q\89/\C0J<\A5Z3&F\89?=\9B\16\BF$\F5m\FB,2\AE\B8\8F+\A9\EA\EF\B5\E9c\C3y\D0\9A\E4\A4\14\CA\D0w|\E0?\17\9Ey0j\BA\B9d\11\90C\C6=\BCC8\C4\80\10a\1C\CC%<\18<\CF\E1\82\C0R\EF\10*\19\C9\F0Q\07\D5\AB\B1\08HA\83\B5@2\F0HL2\E3\1D\07\F2KR\ED\A2f;\B8M\88\17E\B8\DD\D5\E7\FF\90\F8#\8C\8E\1Fm(\07\90\EEZ\E2g\85\FCa\81\0B\CF\\\98\B0-RB\04d\03\EC\0C\9E:\1B\19x##B\E7\EF\84,\CD^\E6WG\DF\12\94\F6\B2\93,X\E1`W\C6\16\CB\94N\EA\D0\8B\FD6\EF\08\C8\F6\A4\F2 \93<h\E1\A5\AE\DA_\BD\C5\B4\C4\1F2\CF\904&]sV\EA\A9\D6l_a\13\FF:\FE\CC\EF\DD\ADr,\02\B2@\97}\9C\E4\F0\AB\C7\87\92h\A4\85\B8\84\BB\1Dn\9C\E6\FA\F13\C0,\07\1F\BD%\E4b\92\1AX\EF\99\0A\1D\CC\8E\08\EEboXH\CB\E4\C0\CDD\B1_0\CC\C0H\E7\1B9\CC0\FC\15\A4\1C]\D4\9A\ED3|\E5\F8\13\BFt\B7\C2q\10\10\CD\FB\BC6\CD\1D~\F9\0D\1C0\FD}\AB\C3&\FC=C:\90o\9D& )\E5\96\E7ym'$\8D\DC\BE\C3\BE\A4\B7\EET\9A\B9\F6\ECO\19D\B63\FA\95\E9\86\F3\E0\C6\AA\A1\D2\82\F8\0C\1F8\FC\BC\E5\09\04\0Fq\84\80\FCh\14\C0^\E9\F0\CB\D72\CE\F0\D7\0A\93\B1\A1\13\B8#\F8\7F._C\8Ei\06)\02\92Ld\F3XR\DEs\D0\C1\90\99\F1\E3:\D7\9E\FC\22\838\02\CE\04H\F9\D1p^=\105#\CDq\B1\82Bb\F8' ,q\0C/\BB\AB\01\89\07\F3\91?\82.H{\A5\8A\C3N.5\0D\99\0B\AFu\F8\D9=CO\9E \88\E3\B2\F1\BE\FEu\1B\B38\FAz<\8A\0A\F0K\12Zy\93\07-\ABb\CE?\98.g\CB}r\A5\96\C29\91 x\F7\06\DF\90\1659r\1E\9D3\B7\18\DC\09\CF\F1:\F0\A4r$\B4Fo\07[\BD5\C9\9AXK\8CF\86\87\86\DD8\C7?\ED\C7!\E2T\CC\D1\E7\16\97\95\A1Z\B7\11\C4\10d\CB\19TN)\02R\D9\F3q\D4\88\83.\B7q\A6\A3\96\E6\F1\E2.s*\82Y\C11\B7UNN\A4-G\B9\22\F4\86\13\9C\EA\A1/\0D\04\E4\81\C0\B5o\14\01\F1\1D\A6:\D6\EAk\FD\D0\9C\0A\EC\CD\905\A1\FC~=\1D\FE\B4O\04\9F\BC\C1\E1\E7\BE\18\9A*_\0A\C2|\9B \83\F9\C5\FA\94!\1F\EB}11\86\90\EBb\1B7z\94\89\D0\14\A8\E5e\C3\12\BD\D66\EB\8D\ED\B1\C3d`;\D4\A9>z\C8P\BBo\02\D7v\B90/\14\01I\0C\8D\9D\E18\F9\83\82\EEW6\F6+\B6\F1T\D6\D8;\82\DA\9D\02\BCK+69X\01\09\F1\E9Nbh\88\F8\1E\08\98\C8\DC\E4\82/\C2\\\AA)\0DH\1E\F0.\E5yB\FF\D0gr\86m\EC\15{\EC\E1u\96\E9\7Fn\A57\AB=hS\0D\B3e\89\1649\87tj\D0&\7Fv\1B\0B9\8B\15\86\BFOqN\C0\AE\A3m\E0\BF24t,F\91\823X\CC(^J\F8)\FB\19L\B6?\1AT\8A-i\F2Sh\EF2OJ\B9\10\E6m\93\83\CF\ECf\C8\E0~\A3 \8E\DB6\04p_\CAp \F7\F9fr\0C!+P\A7A\92(vHE=\EB\9AW\81\01M\9A\B0\02\B2_DrD\82aA\FB\E6\E7[}\11\16\B1\AD\80sA\1A\9B\9A\FA\AFF\E0\EA\C5\8A\03\F1\1D\D2x'\C1\F6\E6009U\8DGj\BC\97\AB\85\8BC1\EAZ11\94!\C4\8F\1CH\17&\87\DC\B2\BF\E6\05\D8\E2R\9C\A2\ED)3 \FDS\D3w9\89\BF\C1\89H~e950\80\C6\D1\D6\C8\8C$\15\B5\8C\7F\E4\F2KpJ\A5\01\87\F2\1E\94+\87{87\CC\10\B9\B3sA\1A\17\87\C2\12\01\B4\09\FC\D7\08\05\BF\A1\89y\\\E5\03\B9\9C\9A\1C\05z|R\B2/xg\FD\A5\9711(r\E8\C6\F7\F45x\B6\FA\89\80tc\12%\82\E7\8B\B8\88\DC\1C\06;*s\D3\91\B0_I\11*R\862\94\A14\C5\80tJ\01{\C9\01\0E\B2\9B\DD\ECa7[M\D3>_\98\E9\A3\C9\B1\80\8B\98K\C6\82\84\B7H\B9\81\00\81\BFp\1DG\FC\D2\B8\9B\F8=\C4@\8Cak\DEn\DE\C8`~\8A\B8z\99s\B5\CBf1-B\7F\B5d\22@C\B5^\FB\0A\05\B9\8B;\E2\8C\92g\F7\94\EB8\9B\E1.8&\E6\8B\80\C0\8D\B4\F9\B2\E9\8D\BC\18\FC\B3#\BFr\16K\1D\A8\80\16i\EB\A8#\CD\B9\987B}\BF\85\FE\EC\81\B1ND\12\8A\B2\A1\CB#\0AQ\9B\864\A2\015\A8A\E5\B8\B7\96[\D9\C4z\D6\B1\94%,cU^E\9B\92\F7\9A\BA\88\AA|O\06<F\F9\04u \8F\07b\CFu\E1\1D.\F2,\0Ba\96\F9\CFE\B4`\0C\ADY\C3\9Byu\01\9E\CE`\8Bh\01\99\CE&~\FA\C7@@\EA\06\FEk\80\82\9Ff\C7x\C7\E2\03Tc\0AO0\C6/\9A\90\DAl6'\83\DA%\17\E4K>WJ\EAH;\E9-\03e\A0\0C\96\87$GDD\A6J\7F\E9,'HE-\DDM\9E\8Fty\C4\90\92j\9B4\15\847\\\B52\F9'\9Ez\95\90Se\84\BC%\7F\19|^\12\C1a\99'o\CA\8Dr\8A\14\8F\AFg\E6\FBh\82\14\E17\17$\DC\B7{\D6\9E\01\8E\D4\FF\10\B7F\11&\8Fq\B6\A7\EE5\8C\A3\99\81k\FB<\B2\C3R:\90H\B4c\B3\E3-\9F\EER\9E\C3|\A0={\90[\0D\8B\B4\C8\87\92\19\C7\C2\DEH\06\CA=\F2\A6\FC +\0C\EA\ED\E8\D8$\B3e\BC<*\C3\A4\83\94\88\B3\A3\AA\CA\0F\86'l\09d\B3\9B\E8\B2!\9B\ED\F4\AE$\E7\C93\F2\A7\1C\15\B7pT\FE\90\A7e\80\AEL\B6>\EE\F0\D1\14y\CC\95\E5!;\8E\94[\EE\A0\8D\03\B5_\105FP&\DB\9C\ED\A9\ABL\99\09\83W\AB(\02\E2\0B\F4f\9F+m_\E0\9FT\03\1D\D8\8D\\&\87L\C3\F0\BC(\15\AF&\17\CA\0B\F2\87\1CHh\91\CC\91e\F2\89\8C\90\D6\B6\9C\C9\C5\B2\D3p\CF\12\A9'\08\93\1D\8D@o\85J\EC\B0\22\98m\E4^\F93\C8Y%\07\0B\E5\11\E9!\85\AD\FAf\BB\8F2\E55\E2\B0K\0B\C4o\1E\ED\A33\13\AE\F93\14\89\FA\F4\17\9D\EE\A7>\861\93+E\03WOU\04\C4\07\E8g\8Eh\E0\E8\B1\DC?\0E\07\ED\D9\8At\92\8D\A6\E5\EB'ik\A8nQ\E9+\AF\19\FC\C0\9D\C2\1E\F9R\86K\D5\88\EE\A9,\13\C3jSN\10\DE\8B+'`\A2\B8\CCX\93\0C9G\DE\97\DDqpX3\E5cyZF\CAE\D2[:Hc\A9,\99\92)i\C1\90\13\99\92)\95\A5\B1t\90\DE2Xn\91\A7e\BC\CC\92\CD1\9F\BB[\DE\97s\C2\DD\D7\86\F8h\92|\E1\E2\12q\A1GmZ\9A@\9D\F7p\9E\CD\93\9Bp\D4\E9^jf\1A/\8D\03W\AFR\04\C4s\9C\AE\99\B7\BBt,\F2\CF6\B2\1EK\90\F22\C14\14s\E5EA\0A\C9\B9\F2\99\ECsu\AF\9D+\BF\CB\ADR9\D81\85e\A4\EC2\FD\FA\B8\14\14\84\C7\92\16\D6\E2)mj\8E\97\FD\B6D\E3\1ByX.\92\B6\09x\D1\94\96\B6r\91<,\DF\C8&\9B7\ED\97\F1\D2L\BB\E7I\1FM\92\8A\CE/\88\86c\9AG\ADz=\DF5^fk\01U\98\DF\9D\EF\A5L\D3H\E9\13\B8\FA\98\22 \1E\A3%\FB]\EF\819d\F8\A5\B9\99|\8E C\C2\F6\DA\EF\9B\82\B5\85\E3\88,\97\1F\E4M\19+W\CB\00\E9*\CD\A5\AE\D4\95\CC\E0Q]\EAJc\E9$\FD\E42\19%\CF\C9d\99/{l\9F\F6\85\9C)\03d\89\E9\EAF\E9\17PI&s\D7]\80qH\A6\EC\88\A2\F0\FEE\1E\95~!\82\E7\DCQY\FA\CBc\F2K\14\9D\D2\8E\80n\EAu\CF\02UXa\84\AB\13$\C7#6\FD\F4|\8B\15j\D8>\F7\19w\FA\C9\B8\BD\BB.p\ED\13E@<E%\D6$\A5\0F>vc5\C8\8F\92y\17\E7r\1DO\BC[t:\8Fra\A8V\83-\8Af\F1\07sX\C0\02\FE\B35\D4\B5\F6)\A9Es\9A\D3\8AN\11z\BEB\9C\CD\D9a\D7>\E4\06v\C2\12\06'5tG.\C3\A0\D5\D0\B2\A6\8B\C2|\A62\95\DFBf\CANc3\93\99\0Cd\D0\91^\F4\A2\B9it\94\A5\15\D3_\E7j\CF\CC[\ADp\8E\CB\84\FC,\07\02@\E4\1D?\B0\9C\FAy\BEk-\DDYg\F3\FBy\86\84\9D\8Eb\83\C1s\B0\B6\B6\80y\81\F4\22\0C\A1l\12^\B4\93w9\9C\8E_\91\CE'\81\D8\FA\AE\E3\02\E6\F2\B8\D3\0F\CD?Mj\C9\87\9C\00\03x\CDb\18d3\83\EF\98\C9\9F\0E\F9x5\A0\0B\DD9#\EA\80\DB\CCu|\0E\F0\1A#\C3\B2T%\85\0B\A95\FE\DF\F3\02\EE\8B\87\F9\81\09|\9D\F4\04\80U8\83s\E9\11\F4\82\D9O\B3OV_\E8}.\00\E3H\AB\B9\F7\EE\12\B5]\A3\E2?\F2\D4\9BG\86z\D2\B2\01|\96\C7;\0E\D2\85\BFl~o\CB\8F!oX\C7\E9]\F7\D0\F9;\01/\C5\C5\0Eg\AB\8E\0F_<x\F6\98$\BD\EA!\EE\FC\C2\81\D0\07\EE\E0.\EEO\DA\BB\8E\D2\85?\FC\D3\F4\22\DC\9D\9E\B54Bh\F3\B9\\,e]a\C2\0AJWy:L\81/\22\F2A@\AF\B0\8D\B3<\EB\8B\A2=\16}.\1F\C9\C5R\DA\D3\A8W\A5\E5b\F9H>\97\1E\0Bml{<A\E9\CC\7F\\\B6D{a\99g\8D\FB8\8F\DFi\90\ED\D3\EA\BB\E0\0D\10:>7\F4\D8\E4\C0\B5\9D\1E\F4Xu\0E=\924\1B\C5G\84\C3\09\07\07q\07\ED\\\B4\BD\B2:\16S\CC/\1C\08\00\17\9D\FB\C1\04\FD\AFE\8C\E3=\B6\B9\DC\E7\059\83+\E9c\90\BE\DD\C5\83\C2;\DC\E6\FA\AB\ED\D0\82\B9\F8\85Q\CE\A6\B5)\F4\AA\1Ff\CAe\7F\BC\E5\EE\1B~\CE\EEZ*\DC3<Y\DB\07&ii\C6\E3\C0\CB\B6y\1A\AA1\93:\EEU\F5m.\0D\9D\FFJg\00\A1h\D2\83\C1|\C2\C0\0C\AEL\8A\DAj\03\E3\C8\82O\9D\F5\E9wh)\9B\EBx\9E\F0Xx\C4W~a\E5N\D08\90\D9\D27h\86\9A\9C\A3\AE\8C\0Bzv\E7J\CF5\81\99\E01\9E\F7M\F4\DD\E7\FD\B7\D5*0\CEm\0Ed\AC\98\B2h$\17\E9\DC\13\A7%\CD\1C[\EF\A4\1A,swl<o\E8\B1\C5\DA\D5\EAI\EE\AD\1E\9E\CC\8A\1E\BE\9B\14#=\E8\85\C3\CE\0A,\13\D5\CB7\AC\B3\E4n\8A\F1&\DF\C5xM5jS\9BZT\A7\22\E5(K92(\10\0A\18\99\C5!r\D8\C1Nv\B0\83\8D\ACa5kX\15#\8C`Mn\A0\11\EF0\E1A\EE\F2\C1p(\C1|\EAB%\9AyT\81\7F\D8\02\B0\92\16\EC\F7\DDd\F9\AC\C6\80{\\\CB\F9\94\CB\8F<A\F6\F9|\EAa\0B+1\88\D3iHI\8A\B0\9F\1D\08\AD\22\CAl\A4=\1Bl\06\F4t\EA\B9[\C9\07\D15\0F\DB4\E7\80\B6I5;)\CC\DF\9Eh]\96\D1,\F1\B8\A4\0E\A2\0AK\C2B\F7'\07\D3\9C\DCh%\1C\EAc\95!\F7f\E4\C3[\D2\86\964\A7Y\8C\9E\CA \03(\1F!\89Y\CA?\CC\E7o~e\8F\C5]k\B9\D5OK\E4~.aF\EF\F4\CF=3\B8\CE\E2\\\BE\CD\E5\0A\1F\92\0F(\B6\CE}\8F5o-\DD\B7\F0,\CF\1A\FE.\C5\FA\B0a\BF\86~6\E4\A3\1E\D3\DD\B7\C71\C6\8A\CF$-`\A6\97\\'\B3\9B3N\B8.b\AE\BB\8D\ED\BC\D8 k\84G>/\D6\B8\C3\13\F2\01=\E8\CEt\BFtBC+6\A9\80\9C$w\CBT\D9\EB\98x\22G\FE\96\E7d\80\94\B4f\CB\1E\F0\CD\A0xi\96x\89Y\C2\0B\F8\13o'\81=\EF\ED\B36\0F\0F\0Bkg\B7P7`]2D\18\D7\9A\C6K\99\C0\D5\CB\92\D6#\A73\83\9C\FFy27\FE'\E40\C3C1\A7\19\D5]\F6=\B7;f9\D7\0C\87\83\0D\16\A6\07g\D1\9F\CA\0E\F7v\01Z\D0\82\1B8\CCt&1)\E9F\B2q\E3/oSS\1C\81y>\ED\99d\C4\04^\E0\B36\BF\CA>\06P\91\03,b\92E\AE\0F\E3F\EC\C7\E4\84\BC3g\AB*\CBn\80\0AI\EA\8F\1AL\A1\08\1C\F4\E4c\1C\84\02\9C\CC\14\1A\D8z\E0$\8F\FF(\EA\D9\BB;s:\DF\FB\8E\80\9C\C8P.\891\16\B3\D9\C0fv\B0\83\9D\1Cb\9F!T})\0A\05u#\E5\A8\155\E3a\11\FA\D0\87\17\F8\9Aq|\E3\97@\F7F\D4\BE\93\C9Ig\CFu6\FDN\DC\B4\E0I\08S]\7F\C3\7Fl\F4]\AB?\E4\C3\B8\16\D6\A9\C9\8A\98\BA'\8C\80\AC\04\1CL0j\8F\B6\01\E3\F2\C7Y\93$\DF9\1Dk5\87\FB\22\B4\F5\01\01)c0\86\F3\02#|F@\FA2:j\1E\94\9D\CCg\01\FF\B0\8C5l\88s\D1\AF@-j\D3\94\E6\B4\A0N\84\A6\BF \FD\E9\CFF\9E\E7\C5\B0\1D\95\E7h\F5\1B5h\E4r\14yk\1Cb\05\87\B0P\DC\FA\03\FF\F17-]\16\92\A5&*\F1\BDk\D6\05\11\C8\0A\DB\90\018\ED\1B\10k\B5\C9\E1#/\FB\BB\A0\0F\BE\F9\E5I#\DA\D6\E8C=V\F8a\F07D\CE\92?-e\8E\8Be\9C\0C\91\BA\0E8\C7\F5\91\87d\A6)\88\BC\1E\F3\E9n)\ED'\1D\C8f\CFMx}+\DD\A3\0CS]ku.\F7&-|\A6\B3(\CE\DF\C9\1C\1F=L\F3\A7k\E0j\B2\F4f\03}a\E4>\D0\F3o\9E\E6\B6\B1v\1C\C7\13\FE\18\FE\0D_\B3Hs\F4\83\8C\90\DA\8E7\B9\84\0C\90we{\C4\FB\D6H\93g|\B2\18\9C\E8\8B\09\E2\DF,\D7\05y\CC\15\CF\DB\0D\F4KQ\EE#\8D\8F\92;:N3\CD\9D\1E\81\ABo(\02\92Tt\F6A/l\F2\85\DB\F3\15\1DsM\03\F2_\B9Y\CA\BB\DA\F0\82\D2O&\86e\F9{\E3{_,\06\ED\D8\EE\8B\09b\8C\97\E7?\D4g<9\0E\B6v\17c\92&\82q\1E\B7%{tt\B3\0A\E8\FE\B1\22 I\C5\D3\BE\E8\87\AEN4%A\B6\7F\ED!\CD3'\97\CF\E9DS\9Ef\BB\AB}\9F\CD\14\CE\A6&\F7\19\22\F8\EE9\EC\8B\85\F1\CBF\E5\06\B8\ED\07\16\03\F5\18@\A3\AA|\EA\9F\D8\FF\11X\CE\05\D4\E5^V'\FC\A4\\~b\08\D5x\C8#\B3\9E\C4\D1\82\07\93\FDJs|\CD`\CE\B5\0C\14\92\C9u\0E\F0E=\1C\09\ED\92\A0Bi\DA\81\11<C!&\F0\00\FF\C6\D1s\95\A9I\F9\A0\ADU!JS\00(\C4Q`\1F\D9\ECb\07;\D8\C1&\D6\C6p\19\DD\C4\BD<\C5\F5\8C\A0\22_r\DF\BF\9E\7F\8Ct>:\BB\E2\A7\14\04\162\89I\FC\99\D4P\B8\05h\C7Y\F4\A7\09\90\CD\C0f\13o\E7^\1FO\A15\DC\C7}4\A3\17=iG\99<\DF\BF\8A_\F8\96\EF\D9\9A\D2\0BI\01^J\BEBW\14\01\F1^RQ\C3\17\F58\87\EB\BCO\F7\D0\10)\22\C5l\18\A5\0Ci+C\E5Y\F9N\96X\AA\C1\A3\E5\1D\DC \BF\C8;2JN\97J6OO\0F\B8\16z\AFD\BF\1E\F9\D9\D4\82\AD\F2\B1\\)u\\gD\EB\C8U2^\B6\99\DE\FD\B3\B0\D5C+\F3\BC\EE\C7\EA1\84W\F8\8D-d\DB\B44\8BU|\C3\A3\9CA\E61\B2\90\\\ED\85\E0\A2\8Bi\A4\0C\0A\\\FDE\89\B0\92\88;|\133\AF\89\E7\1C\08\10\85W\A8\CA\C9t\E1\14\9A\E4KW\93FU\AA\D2)\C4o\FC\C2Lf\F0\0F9a\E5r\FCa\C6[\90Q\B0\C3t\A9\02\17p\01\B0\8E\DF\F8\8D\D9\FC\EDhj\A9\0CZ\D2\81\8Et\B4\8C\83\B7\03*\D0\C1\D6q-9\C8\04\0A\07\0D\16\03\CB~1\8A\90N)2)I)JR\85\1A\D4\8CkGV\94\DA\D4\A67\B7\B1\91\95\ACd\13\FB\D8\CB>\F6\B27\C8\C0\C2\91`.\98]\86s\BF\A2d\F2\C5W\8A\03\F1\05\BA\FB\A8&\0B}@@\22\85)g\D3\9F\13\1D|f\15\CE\E3<`\17_1\89\A9~\F3\FD\80\93\A8\05\A39\D1B{]\83\1A\9C\0Fd\B3\8C\05\CCg\09+X\9E\AF\B5\AD\04\F5\A8GcZ\D0\9C\066dy\09\A3\01Z%\9D\80\14\A7=-iHm\CAR\96L\CA\BA\94P\B7*U\A3:\1D\99w6\BB\D8\C9N\B6\B3\8C\A5\FC\CEB_%\D8\BA:)\E9\F8\22`\A9\03I\9A\11B\19\FE\E7x\94\8A\BC`3\F7\04|\EF\BDC\E1\D0\BE\D8{tK<n\B7\A3\04\A4\09C\19\14\91~\D6\1A\FB\D8\CBa\E0 G(\03\A4Q&\A8\13\B1\DB\D0^\CC\C5\1C\E6;\DE\E0+?\F9\A1\9F\06\B0\94\13h\CB\D9\F4\A7\A9eG\9F\C0\09\\\10\1A\C8k\D8\CC\066\B3\8D=\ECa\0F\87\0C[\E6\12\14\A2(\A5)Mi*R\89\EAT\A2V\1C\13\EF\DF\A0\F6E\80P\A0c\F7\91\CE)\0C\E0\14N\F0\85\8B\96\8E\22T6u\DAn\A6\F0\1C\7F\FADpw\AD7/\16\AB\E9\EF\D6w\EB\C7\A3\A6/Px$7x\DC\F1\BB\B9\E7-^5\D1\94\DB\99\92\C4\0A\B4\F2\91\CD`G'\84/\0E\91\D5\8B\B9\8A\0EQ\7F\DF\CB?\AC`\15kX\C3\16v\B03J\06\9B\B2\94\A3<5\A9E-\EA\D0\D4R\B6Q\84~\F4c\13\EF\F0\92/\82\DAP\94\F3\B4\C99\879\DCI=zq\1A\DDl\84\F5\95\1D\DD\87\ED\E4G~`j ,\85\F5V\D3-\14\E2J\EELJ^ '\B6\BF\97p\09\DF2\D6\07i=OM\9E\EFy\F8L5\E2\88\15Uq\0Ae\19\1F.\1C[\E6y\C7/\83\E2&/\F0L\C6S=\89Y\19[\F8hFT\A6R \03\84\A7\04\A4(C\B9\DDr\A9\CFb\0E?3\8F\F9\AC\8Es\8C\EEd'\CB\F8\CD\F0u[\D0\82.t\89Xp\AB0\9A\91\BC\C5#\0E\D8\83&\881\E1\09@V\F0\12/\91Nk\BA\D0\89\8E\AE\AD\AF\EB\F9\8D\DF\98\C9<+jq#o\B9N_O\E0}Z\93Z\E8MO^\E0N\8FC\DE{\96\A1\DB\BC\A2\1Fvs\B3\D1 R\B7\F2\1E\8B<\0D\D6\B6\CA\8A\01\CD\A0\01\BF'\AD\0A\CD|5\1B\9A\E3\B1\0F]\C3^\B2\DE\C2\8A\EAo\F9\9Ft\96\C2\0EZ\0C4\94\E1\F2\95dE\BC\E9\88<%\05\1F\F4\B0\07J\B27V\DDk\C892V&\C8r\C9q \B0\FD2\F9L\EE\91\B3\A5z\AC>{\DA\E5\96\F7\E5\80o\ECI\F2z\AC\C9C\0AZ7\B0\C4\AB\96\9Fe\1AM\E7h\99\B2\DD\11\90\A4\CAh\E8\98\C4/\FF\B3\AFZ~\8B\C7\22\AC\D6E\C7\87\09\DB\FF\E5-\BE`\95\E3\FD\BE\94\A5\BCJ\09z1\9835\E5\1FP\88\9B\D9w\C2X/\85\11%\A1#\9D\F8\9D_\A3l\E5\D6\B1\8E/\82\DCZ}\EAS\9F\DAT\0F\EA6\0A\C5x\FC\11\B6\B2\9E-\ACg\15\CBY\1E\08\98h\8B\02t\E2$~\E5\B7K\19\E3b\8E\F0\0Bx/f\E5\FD\8B\9A|\C3\9D<\EA\91\1D|%\EF\C2\CD\14\B5\E2@\04\85d\A1\FE\B1U\9B\04\09\C8\C9\A5J\1B\04V\EF\F3\86\CB\BC\E0~&0\81\CA\0Ca8uu6\C8\CB\C8\96\E5`\10\1F\92\06l\E0S>a\B6\CD|<\C4\BFa\0E\97%)MiJQ\1C(Na\E00\07\81\03A\E5z^$-it\E0|\06R\0D\10.\CA\FC\B8\06K]jug\DEMa\F2\11\A0\B3\0FS\9Bk=\B1\CC\F2P\EC\A7\08\88\A7(H%_\D5\C7s\EDe\F9\9F\F6\8B\88\EC\97'\A5rR\99\AF\82r\A9,\11\11\91}\B9\8Fz\99e\AC\1B\F2\9DI,\B0V^\963m\9D+\9D?\8AI?yE\D6\9A\EA\F1\9D\D0\CE\B5a\B7)e\85W\E6\E3\0D\97L\8D\EDq\8Bw-\BE\DA4F\BA\04\AE.t\A5\95J\84\15\89\1A>k\F9\\\8F9\10\B6/\AC\FC\CF\B8\A5g}\\t[\92\E7`6\EF\F0>\FD\E8\B0\E8\E8\F5w{\99\E1w\01\07\D6\147\8F\91\AB\B9\9A,~b:3\99\EB\AA\B9qA\DAr\0A\DD\E8j\E1x\BEVX\EE\D2k\EF\F3\D4\98\DFI\\\C1\A7|\9B\F4\B7z\18\CABq \C7\F7\8E\DF\E9\FA$l\85u\DD~\06Q\99\87\B84\F9\F9\18r\FE\99x\CBD\AF#\F1\EE\E0\85;o\AFE\8F\B0\ADl\06}\E8\03\EC\E7W~c.s\1DM\97W\8D6\B4\A1#\9D\A2\E4\A5\11\A6q\EF\EF\86x\93\CE\A2\E614\A5\BDX\CC\ABz\D7\\E@<E\85c\AD>\CE\F8\81l\E6\0A\9Ef\14\83\C2\CC\CC\DD\C4\9F<\CE\84\88\D8&^\E0\7F[\BB\F6<\A9\16\03\B9\80\B6\11?\96\A0g\D0\E0g3\7F\B3\88%,eI\BE\88I5\1A\D2\90F\9C@K[\06`\0E\9F\F0)k\84Q\AE\B5x\1C\EE\0A\0D\F72\93\C9\FC\C5\D9\9CN+W\DD\13\B71\C9\83\11SJ\11\90\E3\14E|V\9F\02\14LLD\E2\DC\E4\FC\87K\19\C3\8D\\\E1zJ\F0l\BE\E6i\1FDz\D2p\90\BE|\B6\A6\EB\13<A=\CE\E5\0C\BAXvkez\D3;4q7\B0\815la\17\BB\D8\CD.\8E\92\1D\0A\D1R\92\82\14\22\93L\CA\90IejR\8Dj1\C7\DEQf\F15\9Fk\EE\84c\\\0C\91\F7\09m\B8-\E6W\DAcJ\C0\9DN)\A0 %#J\EE\E7({\C8b3\1BX\C3\7F\FC\17\0Az6\87;)I\1B\1A\D3\88\9AT\A6\12\19d\04m\0DL\AC({\81\A3&\8B\83\82\94\8E\E9\8D\7F\90s=\89\E8\EBa\EC)E@<\85\FF\0CO\8A\F8)\A4G`\A1\E8\C1\BB\ECwI\E9\B3\90\DB})\7FO\E7&\F6\E9Ix\07\CA[\B2J\92\85U\F2\A6\0C\94\D2z/\ED\E3\0A\D7[|}\C47\DE\CBT\EE\E1<ZP5\8E\8C\CF\01\0A\99\DF\A5\B4\14\99q\85\81\CF\A46\9D\B9\9C\E7\98\1B\11\EBw\89\CB9\DA\A3c\AAwj\D3\97L#'\98\FCm\96+\ADl\9A2J\F4\A6I\FB\F2\97\FA\AE\EDe\12k\90[6(\A58\9D^\F4rLZ~\80\9F\F8\96o\FC\91\08>*;\D8\8D!\F4\D1\E5\8A59\95S\E8D#W\B2G\E6\B0\98_\99\C1\CFF\87\F3m|\C3\BB\FC\98\14\E3\D4\0A\0C\E5T\AAR\98\F5\CCa*\BFr\D4\D7\BB\BFr\F4\A0'\8D\A8\CC.\16\F1\15\9Fy&\00=\9B\09^ep\1Fi\088$\0CB@\18\CCG.\BC*\8D\1F\E8\96\02\\\C1\8F\9C\964\1E\ECJ^\F7Y\EB+'\16\CC\C4m#\C6\13\E9L{\DAsb>\85e\EB\99\C3\1Cf\F3+\87I\0D\A4\D1\86\DE\F4\E6$\BD\C5\C5iI\1BZs\22\0D\13\8Eq\B8\87\A5\FC\C7<\E6\F2\B71\A6o6\B3\99\CA\B7\CCU\E2\88\94@\B3\A4z?\DBc\0E\7F\B9\F4\E4\C2\9C\E5\FB\EC-\BB\98\14%0\9F\1B\B8\96\17}\D6\FE\9A\89\05<J\96\15|qN\A4\01\0DhH\1D*S1\AA\88\E3(\DB\D9\C6\1A\96\B2\8Ce\FC\C7\E6\94]\22\CAp\1A\A7\D2\85\E6f\F6\A3\0A\8D\A8G\0D\AAS\8D\1A\94#\D3V\B7q\98]\EC`-\1BX\CF:V\B28\BCCr\98\CF,~f\BA\D7Q\AA\15\14\14b\E2j\1E\F2Y\8D\DA$\166$\CD\A3j\17\A3\02\A5(\1CL7\14P\7F\EEbOXV\A6c\01%\E9\C8I\B4\A4U\B4(r\C5\C8\A4\0CE\09d[\D2<\D1\B3\D8\C3\AE\E8\C9\BEW\F2\17\7F\F3;\B3\FD\97\1CEAA\E1xA\9A\EA\82$\F2$-hH\03\1A\D0\80\DA\E45\FC\CA~V\B3\8Ce,c)\0B\14\BF\A1\A0\A0\A0\08\C8\F1\8BRT\A7*\95(M\19\CAP:\C8\8B\15F8J\C0\B4u7{\D8\CDn\B6\B0\91\F5\8A\D3PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP8\06\F1\7F\F9Fg\00e\9Ad\B3\00\00\00%tEXtdate:create\002017-08-09T15:20:47+00:00R\DB\A9\04\00\00\00%tEXtdate:modify\002017-08-09T15:20:47+00:00#\86\11\B8\00\00\00\00IEND\AEB`\82\00", align 1
@chess.ATLAS = local_unnamed_addr constant %"char[]" { ptr @.bytes, i64 26837 }, align 8, !dbg !51
@chess.mousePos = local_unnamed_addr global %Vector2 zeroinitializer, align 4, !dbg !61
@chess.selected = local_unnamed_addr global %Option.0 zeroinitializer, align 8, !dbg !68
@chess.possible = local_unnamed_addr global %List zeroinitializer, align 8, !dbg !70
@.panic_msg = internal constant [33 x i8] c"Called a method on a null value.\00", align 1
@.file = internal constant [8 x i8] c"list.c3\00", align 1
@.func = internal constant [11 x i8] c"createTile\00", align 1
@std.core.builtin.panic = extern_weak global ptr, align 8
@.panic_msg.6 = internal constant [63 x i8] c"@require \22index < self.size\22 violated: 'Access out of bounds'.\00", align 1
@.file.7 = internal constant [8 x i8] c"main.c3\00", align 1
@.panic_msg.8 = internal constant [18 x i8] c"Division by zero.\00", align 1
@.enum.NONE = internal constant [5 x i8] c"NONE\00", align 1
@.enum.KING = internal constant [5 x i8] c"KING\00", align 1
@.enum.QUEEN = internal constant [6 x i8] c"QUEEN\00", align 1
@.enum.BISHOP = internal constant [7 x i8] c"BISHOP\00", align 1
@.enum.KNIGHT = internal constant [7 x i8] c"KNIGHT\00", align 1
@.enum.ROOK = internal constant [5 x i8] c"ROOK\00", align 1
@.enum.PAWN = internal constant [5 x i8] c"PAWN\00", align 1
@"$ct.int" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 4, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@"$ct.fen.PieceType" = linkonce global { i8, i64, ptr, i64, i64, i64, [7 x %"char[]"] } { i8 8, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.int" to i64), i64 7, [7 x %"char[]"] [%"char[]" { ptr @.enum.NONE, i64 4 }, %"char[]" { ptr @.enum.KING, i64 4 }, %"char[]" { ptr @.enum.QUEEN, i64 5 }, %"char[]" { ptr @.enum.BISHOP, i64 6 }, %"char[]" { ptr @.enum.KNIGHT, i64 6 }, %"char[]" { ptr @.enum.ROOK, i64 4 }, %"char[]" { ptr @.enum.PAWN, i64 4 }] }, comdat, align 8
@"fen.PieceType$xpos" = linkonce constant [7 x i32] [i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5], comdat, align 4
@"fen.PieceType$piece" = linkonce constant [7 x i8] c" kqbnrp", comdat, align 1
@.enum.WHITE = internal constant [6 x i8] c"WHITE\00", align 1
@.enum.BLACK = internal constant [6 x i8] c"BLACK\00", align 1
@"$ct.fen.Color" = linkonce global { i8, i64, ptr, i64, i64, i64, [3 x %"char[]"] } { i8 8, i64 0, ptr null, i64 4, i64 ptrtoint (ptr @"$ct.int" to i64), i64 3, [3 x %"char[]"] [%"char[]" { ptr @.enum.NONE, i64 4 }, %"char[]" { ptr @.enum.WHITE, i64 5 }, %"char[]" { ptr @.enum.BLACK, i64 5 }] }, comdat, align 8
@"fen.Color$ypos" = linkonce constant [3 x i32] [i32 0, i32 0, i32 1], comdat, align 4
@"fen.Color$fen_turn" = linkonce constant [3 x i8] c" wb", comdat, align 1
@"fen.Color$dir" = linkonce constant [3 x i32] [i32 0, i32 -1, i32 1], comdat, align 4
@"fen.Color$pawn_file" = linkonce constant [3 x i32] [i32 0, i32 6, i32 1], comdat, align 4
@.__const = private unnamed_addr constant %Vector2 zeroinitializer, align 4
@raylib5.rl.WHITE = external constant %Color, align 1
@.func.9 = internal constant [9 x i8] c"contains\00", align 1
@.str = private unnamed_addr constant [6 x i8] c"Chess\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c".png\00", align 1
@.bytes.11 = private unnamed_addr constant [26838 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\03 \00\00\01\0B\08\04\00\00\00\8B\8D*?\00\00\00\04gAMA\00\00\B1\8F\0B\FCa\05\00\00\00 cHRM\00\00z&\00\00\80\84\00\00\FA\00\00\00\80\E8\00\00u0\00\00\EA`\00\00:\98\00\00\17p\9C\BAQ<\00\00\00\02bKGD\00\FF\87\8F\CC\BF\00\00\00\07tIME\07\E1\08\09\0F\14/\D2\97\CB\FD\00\00g\DDIDATx\DA\ED\9Dw\9C\D4D\1B\C7\BF\C7\D1\8E~\F4\DE\9B\D2\AB4\15\10)\22X\10EQ,(\D8QDE,\E8k\EF\BDc\AF\A8(\C5\86\22*\A0\A2\08\0A\8A\F4\DE{\E7(w\F7\BC\7F\ECf\93\ECf\B3{\B7\C9&\0B\F3\CB\E7\03\B9\EC$\99\99\CC\CC3O\07\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\85c\1Di\AA\0B|\82Z\0C\E6t\AA\03\EB\F8\9E\F7Yw\DC\F6D\0D\06\D0\83Z\94d\0BK\98\C2\97d\A9\E1\A1\A0\A0`\8D\AA\\A\C7\E3\BA\07\0A\F2\10\87\10\C3\91\C5\03\A4\1F\87=Q\9A\E78l\EA\09a\1D\97\A9I\A2\A0\A0`\85\FA\ECB\10\AE=n{\A00\DF\84-\99\81\E3+\0A\1Dwca\91eO\08oRXM\15\05\05\85p\DC\1B\\\22\FE;\A6Z\D5\9Eg\99\C7&V1\8D[(o[\F6\95(\8B\A6\F0\E2q5\12\CA\B3\22jO\08\EF\AA\A9\A2\A0\A0\10\8E'C\82\8Ac\05e\F9,l\F1\DB\CDuQK\B7#W+WW\86\CBp\A9\A3\DF\97C\1B\DB7\15\E14\86r#\03\A8t\0C\F4\DB\F7z\8F\D5\94!r\A3\F4\97b\C6^\1Cz\\\CD\8B4\FA2\9C\E6j\81PP8\9E\08HU\96Z\EE\A0_\88R\FE\03\AD\C4(9*\22\22Ged<\FB\EE\B2<\C1\1E\03\A9\99\1A\83\D8\F8\1D}\B4\B6\14\95\97%[\02\D8&\17\EA}\B1\91\E2)?:\AA0\84[\E9\1DS\BFU#HNs\8F3.TA\E1\B8& \05\F9=\AA\10\E6z\CB}\E6\CE\C0\AF]%W4\E4\CA\C9\DA=\DB\A3\BC\A7\05\AB#\9E\9F\CDM)\DCs_\06Z\91&\93\C4\8C\C1z\0B/I\F1\D1q>\BB\83-YN\07\9Br\DD\83z\C1\E8\E3FA\C1'\8C\B2\17\EF<\9B\86\A1\BF\FAr2\00{x8tm\1F\1F\B2;%\FBs8\AFh\A7\9D\E8\C8~&\B3I\BB\B0\97\FAl\0B+_N#\11\AFq\95\E1\F2k\0C\D7K\EC\8CxKm\FE\A0\82\E5\FB\AF\E5\E5\94\EC\B7\E2l\A7(\C0y|\1A\F6\D3N\EA\B07p\FA\19\03Sx\AE\95g\83\C1\14\E0\087\F3\92e\B9s\F8\88\22\86\BF\0FQ\9D\1Dj\A9RP\08\E01\1BU\A9v,2M\A1\D4\C1\7F\81\FA\A7\CB\07\C1\FD\F3\019Wo\D5m\11\E5kj\BF}f\DAu\7F\AA\DFS\D3\E2-\B3\A2\F6\DB\11\03iN%4\D3Z\F0\B9D\E2\02\ADu\0BSz\DCw\8A\F8ZW[r\1F\87#\CA]\A7\16\0D\05\05\0D[\E3  B\D7\14lY\1D\AD\F6#\0D\CB\DFA\A9\A6\B5\E9\A7\88;\8Ah*\F4\DBLK\E6(]\B7\11i\BE\1A\D2\16\94\94\17e\BB\1C\96\1F\A4\8D\DEo\1F\A6\E4\98\E8\A1\D5\7F\BE\05\01\B9Kk\DB\CE\94\1E\F7\A7E\8C\F1\1C\CE\0A+\D3@\17^U\96rZ\B9/\D5\A2\A1\E0O\14\F4\E0\9D\AB\A3\88_\8C\C8eM\0A\F6f]\ED\E4B\C3\C5\0C\CE\D14\E8\F5\22\EE8\CC\\\DA\02\BC\C2\954\08^\\\CA\AB\DA\EF\7Fr$\E2\9EA\81\FF\0A\F0UP\FA\D7\9D\9F\E9\C0\BF\81\CB\FD\C9HA\CF\ED\FD\11'\06\EC\B5\FB1u\10\E2\A9ki\83\BB\00o\D1\92\B5\A1\12\85\F8\902\DAP\FA\9E\07y3\F0G\87c`\A5\A9\C0e\94\8B\CA\B7\7F@\8E\E5/m9\CB\D6\1B\EA(\93\F8\D3\F2\97t\06sb\94\BBv\F0v\8409UP\89\B6T\A6\1AYlf-\BFs\E8\F8#ZM\F8\9D\9D\A1#+\B4\1B\D3\AF\AD\E1\8A\94l\D9\99\DA\EEq\A9i\07}\A7\B6\93\B4\92d\DF\A2\DDSI\C6\C9\06Y/\AFKE}\8Fz\B3\C5\1D\8B\03\BF\9Diz\C7x\FD\9E\B6)\D8s\D5\B4\DA?h\C1\814\D3Z\F6KJ\8F\FB\BEZ\1B\FF\94\D6\FA\D7\9Ai\D8\C4\8D\D6\AEV\94\95\22\F2\B2^\AA\\\8A\CF\F9\0C\96\DB\CA\1B^\B5\BC\EB\14\B2cJ*\B29\C5\F2\DEWm\EFZNF\CA\F5aqF\F2\0B9\A6v\EC\E73\CE>\BE\03R\1DKVXm\B5\0F\FB\AEi\01\EC\AE}\EE\7F-\A7\D6\DA\A8\C3|u@\B1\1C\86\A0\90\E3n\D3;\96\E9w\F5K\C9\BE[\AC\91\D1\9Da\E4c\82\DE\B2\FBRzt\9C\A1\B5c\91l\96*\91\AD\AA\C2\DE\C0\95\822SDD\BE\D1\CB\A4\BA?\C8i1\C8\C0A\CB\BB^\8EK\D8mm6r0\C6]\A7\A5T\FF\A5s5\9B\A2\B6\E57\BA\1CO\22\AC\D4D\15zR\9B\82l\E4G\16G)\B3\80\BD\94\02\B8\8F\BE\94\0D^\9C\C4t\ED\F7Y\16\F7dq\01?Z\9A\0C\1C\E2\02K\06u_@\CCa\E6\C1\B7\18\7F\8F\86\13\E8JU\B2Y\CDw\BAq\98O0\9E{\02\ED8\87\89\9A\1C\07\F8\8D+\B5S\890\D0J-\8448ki\CC{\F4$7\F0\E7\18\8A\93\0Dt\A0d\E0\C2\ED\C1\F5\A0\9A\91{\D9\C7\DA(b\9E\D4\E0@\F2\F3{F\02\CF\CEH\B0F~BI>\B0\DD\16v`\06\FF\E3>Dq \FEDC\BE0\B1\8E\BFGa\9B\E1\0D\ADL}\F9H\96\CA|\B9S\0A\E9\F7E\BB\AB\1B\DB#v\15\DB\A2\9A\11\FC\10(QAv\1B\F6\E9Wh\F7\E5R\D5\F2\AE\AE\CC1\A9o?\A3\BE\AF\FA\B8\0C;\B4\DAU\97\A7\E5\1FY/3\E4Z)\9C\EA\E6\01:2\B51t\93\88\88\8C\8E\B2\9F\AC)\07\82\DFtK\B8\85\DD2&3\9ASRP\FC\12\12\EE\96\92L\C3\91\A1\B7\CE\0Aok6\8D\99\16G\BAv\E7\DB\96\F7\06\7F\CD0\DDSJ\7F\DF\99)\D3w5\22#\C4\153\AE*\DA\F1\DEq\19~5\05\08H?M\B4`Z\80G[\96\ADe\C3:\DB\D9\D2T\E2%\83\F9\E6!^\A0b\D4\B27i\E5N\93m\22\22\92#OH\9Av\AF\B5JqL\98\ECT\10\F6\FAl\12\0D\D2\83\BAX\1C\1B\A2\10\C6TB\90\84\97\90\B5\22rDZZ\B6\F4\83\D0\A6\E0@tc\ED\D9<EW\0A\A4\1E\01Yb\12O>\19\17\01i!Vh\11\17\01y\D2t\CF\92\D4# \C5\99\A7\7F\F9L\B9Y~\92=\22\92+\9Bd\BC\0C\94\02\C6q\F1\B8\22 \FEC\A7\B0@\EB\B1\AC\F3\CF\8B\B2\0C\AE\B1!\09\01L\0B\95\9D\16c\AF\1E\E2WJHSi\225\8D\EF\19dq\C7\88\A8\0B\D1)\BE\EA\EB1QI\C8N\DA\1D\03c\FD:\AD=7\8A\88\C8l\F3\F4\17\04i\14\0A\E3\22\22r\82\BD\1C\7F#\CF\D1%%\C8Hl\02\F2\AA\C5\B1$.\02\B2\C4\F2\DEc\85\80\8C\D7\BF\F7\F5\B2#\A2\17\E6KG\E3\88\B8X\11\10\7F\A1\08\AB\F4\CFS\\2\8D\1F\EB\B0n\B6k\C2E\16\\\C8\DF\D4\8E\F1\A64]\84\C3\8E\18v\15C\A2.)\DFX\DCY\9F#\C6=Lqc\F9\15>\0A\93^\80\8BYg\D9\AA\\\BE\A1\C510\D6\8Bi\A1L.\0CN\FF\0F\A4\99\D45\1C]\E5\1F\D3\F2\F0\8Ft\95\EA\B1\94\C8\EB\B8\9F*)O@l\8E\18\04\C4\F6Hq\02\12\F2\8F*$\EF\885\0E\C9\A5z\AB\B6hz4E@\FC\81\E1\DA\A7\A9%\DFH\8E\88\CC\93\CE\FA\E7z#\CA]uy\CF \90\CAbd\1C~\F5uL\03\BFN\8C\D2c-\A7\CB\1C\83\F6Y\C7[\DA\EF'\CB_\22\92-_\1By\96a\BE\99*\7F\D9.\05\B9|\92\A2^\F6:*k\82\C4\87%\0F\D8\BDY~\95\F7\E4>\B9H\EAE\EB\9D\C3\BC\ED3\9DV\\\04\E4\99\B8\88@+\CBni\15\D7\BD\CF\A42\01I\E3O\AD\BE/\D9\0C\90\1C9\F3X\B1T\CC3\CAhA\F4\D8\E5\CB\E5a\9A&*Za\90L\9F\A8s\0A\D1\AD\D8n0,}u\E3x\D3y\A6\81\7F^\CC\F2\17\B0!L\1C\F5\BC\A5r\B5\90f\F6\DBT\0E\86\DA\B0\\\E7C\BE\F3A/7\E1\C7\F0\89_U:\9B\83\B9\07\DA\F8xJ\EF\B0B~\1E\D3$\BF\D8,\9F\CB-r\92\85\F0\8B\A3\8C3\1An\A5\02\01\99\15\17\11\18f\D9\13\C3\E2\BAwV*\13\90\AEZm\CF\8E1*v\EAQ\0Bv\1C?\96\B5Uy\C2\A4\9E\CEe\0A\9D|V\C7\A0X\E9j\D3\E7zS\AFs\F4]\DF\D5\86\96=\10\C7\9B\1E1\0D\FC\87\E3\B8\A3<\FBC\E5'Zx\B9\07\D0P+\F3\B6\F5\F4\F3\DA#7\83\C7\8D\226\A4\80\9C%\D3%WD\F6\C9\AB\D28|IX\CF9):\DEK\B29\D0\86j&=G\FE\B0^\9E\91\CE\BA\E9\84v\1C\E0^_F\91\8BB@D^\93\E6&!^\F8QO.7Y\1B\1A\183\B9\\\EA\D9\DE\DB\\^\0B\BB'\C5\08\C8\D3\9A\15\DA\A2\98\E3\E1\09\BDe\DD\8E\0F\F2q\86A\E6o$\22\8F\F8\88\82\16\D4\94\BA\CF\9A>\D6l\BD\BE\9D\E3\22 \9B\E2h\D3\F7\A6~\88\87/\B8\22FX\BE\00:ke~\B7\16\1E\E4z\DA\DF\ED\B4\F0\93\9A\0B\DD\E5\B28\8C=\9F$\ED#\B3\13\96I\C1\11\1F\0A\22z\8F8\85\D5\F2P\A4\8Ed\BE\0F\DD\0E\A3\12\90\E4\22\C5\08\C8rM\F4\1C\1B\DBt\B3\E6\A7\8E\07\F2q\A3\85Y\A9v|\EB\A3=\D4^\ABP\87\86X\B9'\C6E@b{\87\A7\85y\82\EC\88#<\C1\1Fq\11\90&Z\99\09\D6\E1\1A\F7x\D8\BB7sToC\9A\\\10ey\C9\95\CFu\B1a\E0X\95r\E9\B3\DAka9\CAF\F8\DA\C7D\AE\DD\8FG\E4\C3pk\ADC\DC\EA\B3\F0\16\8A\80\E4\1D\85\B5\ED\EB#q\B5\AD\93\D6\B2\AF\8F}\F2q\89\D1\\\B3\98\D4\97\0A\E6\09\F0\99o\\b\82\E9\A1\AA\18\D8\E8\\\E9\A6\07`\C8\88\93\80L\8A\F1\9E:\11d\B4v\8C;Z\C6\0C\0C\1E@1-\DAX\0F\C3:\B4K*\EBa\10\BCA1\A3\81\22\D2<\18\BE#\1A\8E\CA\D3F70!+\A5\E2\A5\95\D7\AD\F9\9Eraa\CC\96w\A5\86y\FCL\F0\95\B6H\11\90\BC\A3\96u\AA\87h\18\A2[|\1E\E3h\A9{VT\91qrHDDf\C8\A9\C6\E1\7F\97O\EAz\87n\C1\B4VDD\F6\CAP1h\1E\88\93\80\1C\8D\A1\DE\1C\18A@b\A9\D1_\8B\93\80\C0d\AD\D4U\B2ODD\D6H\17\FD\CE\D1\9E\F4k\05f\EB\B5/\22\8F\04\D3\F9\DAc\A3\D1\DAD\10\EEO\910r\E9|\AB[\14\1Dqiq\DC/w\98\FD\93\17Z\E6\92Q\04$U\08H\1B\AD\AE?\C5\D5\B6Q\BAwPR\A5\FC\C9g\CC>\D0DT\ED\99D\E5\E0\E5\93\F9\81\DByR+5\96o\98\EB\83\8F\F8*\B7\92\090\93\FA\B4#\83\D9zLq\E1\91<\F4\F3e<h\F3{k\ADs\D0\E2\B7\B7\E13\9B\F2\A5L\11\E3\ED\F1\88&@{\9D\8F\E8@\16\7FpT\FBmg\948\A8\EE\A2\06?\84b\D7\D3\9C\F7i\16\D7mU\98\C2\1B\8C\E0\80v\E1.\AA0L\0B)\E5c\BCH\AF\C0Iq\DE\0FF'\DFBI\8A9\FA\92\E2<\C4\85\0C\D17\A0'2\9B>\CC\F7WW\8C\F0\941\DA\97J\1B\EDPe\E3\CBb\10Jz\B0\87c\1A\A34\BA\DAX\B6GP\D1\AB\F5\1D\C2\AF>\D9]^\1CUW\F3\AC\ED}W\87\95^a\EB1\FC\9D\B6?m\15\9F\1A\FD\DA8r\DB\19\17\B0hm\B8\C8\83\1E\ADn\0C\ED=X\F6\E7q\17\B9\C8\AC\0Fy\D3\F7\9E\D8\C3t-\CFx\11\11\F9[\DA\09RDF\DA+7\F2\85,#\87,\EC\F0\89\03\E6\D0\B8\E2\EA&\F3\18\EA\FB\952\D3\DA\97%\1A\BA\EB\09\02\8Ea\14c[\A0\99E-s\CF\1D6fJ8\C3'u\1Em\19`c}\0C\EE\ED\EA\88;z\D8\94\0E\AA\D0\AF\94+\B5\D2\DBm\9F\BE O\04\A4\10\EB-Z\90c\91b\D7}\94\D3\02\B7#i\F2X\BE\16\C9]\BA\16J\10\9E\F3\F5\88/\A7[\1B\DE.\22\22\DF\1A\02D\8EsEP\F3\8AQ\94\B5\D5\C6\D0#yx\D4w\04\E4\D1\14X-\D7\04\EA\DA?\8Eo~P\F7\9Az\FEX& \97k\1FpL\94\8E\98\A3\BBH}\E5\9BZ\F7e\99\C5\10<7\8F\04\E4\E3\A8ekke^6&\11\AA\1D\B5|\E7\B8\B2k\EB8\D7\A2\F6K\E8\E3AO\16e\A6\1E\9C\E1\C3|/\91\87\F5<\E9\82p\93\8FG|(\A7\C5\00\C9\16\91\F9\A6P2\E7\B9$\EB\FF\CA\F8\96\0DT\F7\BC\17\1A\DB\06\CAL\FE\91K\E3\14X-\DF\D1\8C\DB\D7\C5\FC\E2\E3\F2\E2\84\EC \92\AD\03\09\8ALJqk\94\02m9\9B\CF\03\A7\A7S>\C6><Y\F8\8A\EF8\9D^\D4\A1 \9D(\1D\BC\FA<?\C4#o\EC\A2\A5\019;j{\DAD\9C\04\FEX\1D\E5\91\C3\F3T\FB\D2\86=\C9\1E~%\9BU|\CB4]\11\92D<\AF\A5\BEI\E7\1D[5\CE\0E\D6\D1$j6\D3\C2|@!\DE\D7\FE|\92\85|\EF\CB%\A0\15W\05N*2\8Et\8Er\99\AE\C1\01\D7\02\91\9D\C1w\F4\D1\A4\E2U\99\C2\C9\1E\A7\03^\CCH\9E\D0l+\8B\D0\C6a\FDOl\1Cd.\87\B5?r\18\155\A7\8F\9F\F0\19C\00\B2\B9\93wl\0B\EE\E5~\EDt\9F/bK\B8\84\12\9A-\FCp\1BZ\FA\9D\BFcK~\113\17Z\18\07\F2\96}\82Z\80\87\03\BF\17\96CrX\17p<\14U(\124\CCm\17\1F\07\F2\8A\A1\C6\9F{\DAw\17\EB\C2\ABwb\EC\A0\8B\09rB0\\}4\C3\DE~z\BB6\FB2\9C`\1A?\9B\85U\CF\85\ED\84\C7\B8hq4\C3\C8\85|\EE\03\8Db\CFP\FAj\A9.\CB\92j}\B5Jj\1B\E3\86\A5J\CE\CEtVZ{q\85\E3r\BDu/\A4\0E9(\C6\19<\C5df\B3\8E]l\E4?~\E5\13n\A5kTC\8BfZ3\BF\B2\B5i\0FI\F3\C6Z<#\83N\DC\C8{\CC\E2\1F\D6\B2\8B\CD,\E0{\DE\E3\BA$\C9z\1F0i\11\BA\C4& \BBt/\97EQ\A6qP\85\DE\DA\1C$nj\94'\8F\D2\17\A58\08H\07\93\CB\E6\FD\1E\8E\97\EAZ,Z\E4\7F1&|\1B\89\C7\85j\7F\A8\9CO\B3\15^\A8\D5\AE\9D\E4\88\C8!\A9\16F@~su\D9\FCF\0A\EA\EF\BA\D1\07\FD\E1\11\09IQ\F2\01#\F4 ?\15ds\D4\F6M6\87\F8o\EF\FF\86\15f0\D3\A2\E6\C9\10r\98\C5\0D!\0B]\1Dg\EAY\A1\ED\10\B2\B2y\CBtw&W\F0\9D\D1w9\E2\D8\C4\DB\9C\EA\F2^\EB\22\D3\1B\17[f-7\11\90\032R/\DF\C9r\9F\BA]\F3\D3\10\11]\8Dn\ED\8D\9E\A6eI(/;c\13\90\C2,4\D5\F7B\0FG\CD\14\AD\16\FDcZ\1Fi\E19F\C6\0C\E5QVo\DB\E9>\9B%EY\AD\F1[\01B\F1ED\98\F2\\\97\97\CE\17\8C\DE\E9\AD}\D0'\BD\92OBR\96\FBx\CE8V*\D9x\83<l\F6\FF9\E0\EFhq\05\B84J\D6\86\F0#\9B\1F\E8oZ\04C\CA\\{\A5PH4\13\12r\D3\99\89\86\00\E9\F6\C7|\06\B8HDZ\86\BDmll\02\B2X\0Fzg\15\00>\E4\85\FE\8A\88H,5z\0F\DD\A6\E7@l\02roXm\BD3\EA\EC\A3/\1C\B1Cy\C4K@L\8B\F2b\1F\E56\01\18\A3\D5\EC\D2\F0\B4\C3\C1\E3\93$,\9F\86w.\F0E\FF$\99\84\A4(\F9H\E3Mcx\D1kb\CC\99\05\C6$\13B6\03\92U\D1\BC*\D1k\F3N\DCY\EC\D2\E9Nw\FE\E1a>!\07@\D7b\1D\B6\BD1\F4k\C0\A7\EE\14\EE\E1\B4<\D4\B19\9F1\8Bk\F9\C7\95\1E[L\8E)\D0\CA\18>\E5?\FB[\1A\D1\89_\02\A7\17p\B3\EE\F1\13D\98\0A\BD\8D\F1\97\D5\11\0F\1B\AE\8D\B08\0C\D9\1Bq\BB\E9\EF\1C\96z\B6\EDxTW\C9d:\F8\E0\B3\E9\C7\14\AD\B5#\F3\E0\DA\E96*j}\9F\11\92\1B\AE\09\93\E7$\C3\\\E6E\FEd\81&@\1E\C3\BD\9E\F7\CBT\CE\E5\8B\80+\F1z:\C4\8C\D8\93(V\B3C_V\CE\E1\9B\14! \0Fp\B9v\DA\82\D7bJ\A5\9A1\937\19\C5nm\E5}\9Fm\CC\F0_\B3\BAk\B9%tS\CC\8Er\81\DC(\F7\C8-2T\CE\92:\D6<\C1\A2`\88\E1S\B5+\BF\D8\D2\D3*\BA\85\7FM\BE\B2zb5\E9+\97\CBMr\8F\8C\94K\A4\B7~\87q\B7q\B3K|\C8\D2\B07\FDf\E9\CAf\E0@\C4\A8H\8F\B4\A02\A8\D0\03\19\C6l\D4\E8\955\A9hos\CE\EC\AB-\17\ED\99\11\A6\BB\9E\F3\1F\E7\C4\B5o\8C\9F\03\11Y)\19z>6\FF\84\E1\0C\85\9A\B9/T\D3\AE\86oQ1\0E\D3Lg\B0@\1FO\87}b\BCj\E0B\92v\A4\92\EE\C3\10\D8\E8,9\10\F7\97^h\E4\B6\B6'\C7\AC$/\1C\C8\00>\D4\99\E0\A2\0C\E2\1C\BAS\22\AC\D0v\E6\F0\15\9F\B1\C5x\B11?\F0\1E\A3X\A9]Xn\93\F8c?\9B\B5\D3*\FCkV\C8\97\E1\1C\CE\A2\1DU#\EEZ\C4O|\C6\8F\88.\FD\7F\8A\0E\0C\89\C1\EC\E4\07\0B\F50\1C\00t\E0\AAX\01A.\E0fmwpeD\D9 \CB\D14\B8\FA\15\A1\09\7F\11\CE\8C\04q\95f\D9\1A\87%\EF\B0\08\15\FFB\CF\A6\C4\F5\DAp{\D8\F1G\D7\E1vmc]\91\81\06\B1\A7\978Q\DBAV\E3\96\D0\C5~\FC\14<+\CD7Is\CE00\1E\85y\C2\171\A0\A62\80\89\14*N[\E0,\D7\22\A7\E60\09\F8\93\03p\94sR&Jme^\D2N\07\F3N\1Ez\E7D~\E5dV\04\FE(\C7\1B\F4\D5\97C\EF\D1[\D7A\A4\C9U\B2)Ft\D0ir~x\D6\B4\ED\0C\D4\B2\85\DFfs\EF\EFQ\F6\10=dRp\8Fn\17\E6b\B0\F9\AD?EP8'\D8\CB\F0\BA\ED\B6\A0h&\0ED\E4\1A\BDt\CB\08\9A\1B\F4B\D7\10\D5\1B=]\F3M\AD&Gcq Uu\9B\A7<%\B6r\03\F54K\B0\01Q\BF\DCT\E9*mBG\E1\90\EAP\BF6H6D\F5L/\EEul\E1p|g\95\C6+Wn\90\E2\92.}eu>8\89\7F\A5\AF\9C\22_\E6\CB\ED\B2\A9>\06z\F9\A4\87\9E3\CF\0F7`\98\1F/\91:\F8T\AB\F5\E9r8\CFm^f\8Cl~\A9\7F\1AU_\17^U\8C;!\E7\12\B9\DCl\1F\90\CB\A6\C0Y\17\9B\BB\AC\F2$\F7\8A!\F42\E2Wib\BCw\BAM\C8\F5\FCa\B0\F6\EC\EE\C6\E0\D91\08\C8\9Fz\D9\E7\C36\D0&\15\BA\AD\1A\BD\9Fv}l\F8\04\89$ \9F[\D4\F2\22\8FFO(\95\D2\0FQ\E3\EC\16\8DC\0CqZ\D4o~et\F2\EC\05\FAj\B5i#9\11\DE+{\F3\B5\18\E6\04\C5\13\85\F2E|\BE\D7\FBg\9EOb\CC]\9DT\02ru\CA\90\8F6\9A\CF~\05\D9\92\AFVO\D5MvV\FB\C5\AC\A4 s\B5OQOV\E6\A99K\A5\87\C5RPT\B2\A2\DEq^X\D9\9A\F2M\1E\BB\F0\A0\\f|\C2x\87\A7LK}wi\B0\EB?;\D6\04i\AD\F3+F7\DCP.\F49\A1\FA\FF\A1?\D5lM\F1\A59\B4\81\CD\04\E9\AB\07\CC\7F\C3{\1B\AC\7F\03\EF?1\AA\D9\EA\0Fq\C9\B1\CBE\FD\E2\7F\EB\A5\C6\F8`\B6\FC\97\B7@\DC\F1`S\A8\85\13\F3u\7F\7F\BD\87\CER\04\C4\C7\08\E9|\BF\C8w\BB\87\DAi\\=\C1mZ\85\AA\E6k\FF\F3\BET\8AX\0C\BE\8D\EA_\\L\8CY\EA\AE\CD\E7\8E\ED^\E3\DBnu\B47\8Aj\FE\F4\0F\C8\04\A3\03O\19\FB\09\F2\A2^\F6\12C\B9\875s\04\9D\A4\1E\D2\F96\A3\1A\BD\A6\F6\DE\B3cM\90R\BA\A1\F5\E7r\BFn\DC\97\E1\C9\E8\A9\A8\ED\A9\A2\BB\0F\EE\D5\13\\\D9\1C\97\DA|\EFPN\BEi\9E\CF\96\EB\F2f0\10\1F\D6Kb\0B\CBB]\B4\EB\0F\1ED\11\10+\D4\D2\E6J\E7\04\DA\BDQ_C}\11\CC\BF\02\FB\B4\9D\EF\AC|6i\9B\9C\1E\B6\18\DC\10\D5)F/S\\>O\A0\1B\C7\EAO:B+G{$h\87u\A1\88\9C\A3\BF\E5E\FB\09\B2[\FF\AC?GJ\CB[\99\EA\DE\D2\CA\1B\FD\81p\E2\1Bu\82\BC\A4]?SD\06ym\83u\BEV\1B\BB\D1\B3BF\C9\B0\D0\A1\E94\9A\19\AE=a\C3\B5\8A\\\ABg*,\EA\E9l)\A3\C5\9B.\EC\A8\97\C3\B4\D0\B7\9E\96\CF'\0C\8A/.\B4\22 ^bL,ao|\18\A1\B7\BC\A9\F7\8DzB\AB\CC\E8\04\9A\94-ct\D9\9C \95\22\A4\C3\22\22?\19\82/T\93\B9\09\0E\A0K\8D\CE\85N\86\8D\9C\A8y\12\8Bl\942\BA\FF}g\FB\09b\A8\CF\09\A1r\DB\C2U\E8&&TW\A3\17bC\E0Z\DDP\CFE\99 'i*\EBR\B2ND\9Ake\BE\F0V]Z,\0F*\C1\BC\98\F1\06\F0\99\DE\17\9D=\9D-\0Fk\F5\B8\D9\D1\C5\F0\A6\90S\D9\EE|>\C1\C0\83LQ\04\C4\A7\F8;P\DF:\09\C6(X\90\B4\E0E\B1\93\F1djr\B4\AA\DC\93\C0\8B\D2y\90\09\86\CD\E1\16\8B\F8\92K\E8Ov\F0\BC!\BF'\1C{\E1\15]\E8\DF\DCQ\AF\AD\A09\ECb\B2\A9\A2'\1A,\C08{?\04\83\EB\9F\E6&T\9B\F2\9A\EE\CC\ACI\0B\A2\1C\B5\82g\E7h\96^\C3\EC?Za\DE\D0\0A<Bu\B2u\C6\C3+#\DE`\0BZ\BB\AA\D1\EB\10\F1>OPU\8B9U\8E\BB\1D|\EC\FE\D0li\15\0A\06\9DW\9C\A8\C7\EF?#\CC\10]\C1\1F(\A5\A5\E6\BC A)c3\9D\F1\E8\E45\01\19\A6\19\C2\DE\91\B0\08\FD\1C\BE\A4x\E8\AF\11\BA\8F(\00\87\B90\E4\A4]\93\EFc$\11\8FOY\F1\B6\1E\10|\84\83\BD\F6\9FV\E3\95\C0\D5\BA\BBEc\FB\14M'\EB\F1\1E/\0DV\AC\ADv\A1\AD\A9d\DB\C8\D3\E1\1A}\B8\DC\BEn\A3i\A21\22\C3\81\15\BA#\CC\7F\1EM\8B\E0\87t\D7\EF\A1\B2n/_\D9\C3%\E0\1E\CD@\E2.G\FD\ED\1FcW\F0\EC\8A\04\9Er\A3>\EB\AFT\AB\B5\0F\D1V[\8F\BB%\FC\A8S\B5\93v\EEf\EC\8C\FD\F0!\81\FF*:\92\03\F24\A6\86vP\FB8\D3\E4\E5w\9B\E6>G\05\A6R\D3\91\E6\B5d\B0\BEE\AD\EF4\07\12X\93M\8C\C7\9D\F61\81C\8B\7FE\FA\1BY\8DBa\A2\CA\E6:\E1\0B\94\A8\AF\8D\A9\01T\B4{AC\EE03\22\FFY\D4:\C9\A8b\FA\CF%\A4S!\EC}\1E\A0\81\B6\BE\D7\E2\1A\07\1F\BB\9C'\83geL\F6\17y\C5\E9\BA#\FA%I\CF\04\A4\10\0F\E3\00@Z\D8v2?h\A7\9D\94t\97#\8FE@\9Aj\0B\E2U\0E\99\F0t\E6\9B\90 k\B6A4\F9e\C8=\A2\10\93\1C\8C\B8`\98\C8\CE\99/.\0E\C6\F6\0A\AE\C9\86\90SEx\C5\8E\FB\BCL'5W\1A\09H\D30\CDo\11\8D\8D\D0J\\\A3=\D5\D6./\8D\97\B5\07\DD\11|B\88jx\17\07\ABL\E0\BF\B2y\B8%?\0C|\E8\F9\99\9E-\00\F7kt\FF>\07c\AAds\09\07\83\E7\A3\A2fJ\88\AFW\AF\D0\89lo\B5^\FB\0E\E5\B5\09S6\E1G\D5\8Dx\AA7\04$\C4K\0Dr\EC\95\1Dy+\B4@\BC\CDx\00\0Eq}\C8\EB\FE>::\D8\C0v:\01\EE\E2\D8C\0F\B1J\E7@\00\C6\E8\8C\C7\C9v\E2\81\F2A\C6\03\E8I-\D0\AC\C3\22c\96\98\22,\16\D5|J\1B\DBG\B2\BC\8A\EE\1A#2\1As\0DYI\96G\D3b_\E0\BF\83y\B8\A5~hK\1F?B)\F7\F6z\D4\CE\D6\9C\1F89\D1\D1Lhw2;t\9E\A8k\B1\81\F1\18\AC\D6k\DF!\D3\B9\1DPY\CB\D3\E4\13\90\93\02\FFUu\D4\1Al\90!(\E8ul\02\9E\09E*\ED\11\16@6Q\A4\E9K\AE\93\A6\BC\0BM\FF\99\19\8F\C7\ED\D47C\F5\9E\BF<\9A\0A\DDt\A5\1C\B58\9Fr\98\19\11+T\D6b\D1\1A\18\11\9D\03\F1.\0EV0\ED\EF\EE<\DC\F2\1C'\90\CE\05\B1\F4=V\AF!\9E4\C3.\F1\1F\C1\8F\F3\A0\83\D1\9D>\E6\F1\0493\F3\10\091\1E}=6wV\88DQ\D3\7F\09\C1\E0\AB\EC\AA\F7W,\02\D2H\DB\C7;\8B\BB97x\B6\83\AB\D8\1A\8A\C2]\9C\B7\1D\D7\F9\84\84A\D5\1D\94\FB\06\97\E3%\9A,\8B\93\B5\E4\D7P\9A\A7\A3\DF\D8\93z:-i\1FA.\B0\B8\D2F\93\F4e\D8K\C0\9F\D7\B6.\C34F\C4(\B7\F2\8E\80\04)\C7\D6<\DC\D2\94\FF\C8\E6\E3<\08\82\B24F\C7+\0E\A4\0Dg\04N:8(+\FD\81\CBM\F1\F0\12Oc?P;)IO\B5b\FB\0C\FB\C2x\E9\C4wm\AEo\A8b\AD\D6\C1\1Drm\87_\9B\C6\AB!c\99\AF\E8\1Ej\E3\AD\0E\D8^\85#\A4SM\0F\F3\15O\04A\C9\D0!-\F6%\F0\A8\FE\A6\81\BA\A4*\B2\E5\97\EA\04-h\B3UH\D3\9E\19`P\A3_\AE\C9\F4\06\D91\B7\FD5C\E5*\86\A4\18+8\A4\9D.\F2lZ\04c0\FF\EE\EAK\FE$Wo\B4\17\08Y\ED>\E0\98\A3\F7o\9C\AD\7F\BF\E0\86 Q\F4\D7\8D\A9\CFU+\B6\CF\10\\\06\B7\E9c9\DF\D8\E2\13\02\12\FC\DDy\0B\FE\F2\86\A8\E6\DA\E6\B8\1A\A3\\hb\BAs\12\80\08\02b\B4r*\C3s\FA\EF/G7\D7\BF\\\AFQ\14\15z\80\8D\0DqN\A1\00\DC6\DEP%yAgD\CA`\C1vx\C7\81\04si\ADg\AD\FB/\C1\A3\88\BC-\B4-C\A7<\E5>\B3\C3\DF\9C\11\B1\17M\\\B8Q&\C4\9D\D2\DB'a\15\15\C2\B6>Yz\DE\8B|\E3_}>\ACt\B3\CAq\12\107L\89\FBsY\D8\95\FB\0C^\22\CEa\97~\BA\DF\B1\87\86\D9a\05p\9E\CExTed\B4[\ABG\18\C0\B4\8E\22\131\A3\95]^\B2Q\D4\D0zu\80\15\9D\CB\F10\99\D4\AF\84xM\F7\10J\F6\B0\94m\1E\B4\F1.m1v\CA}\F0_z\EAZ\A3=\CE\11\10\E8\AB\9DT\F2E\E4b\05\1D\A1\1C\AA\89s\EB\7Fh'\EB\F2\A4|t\9C\80\1C\8E`\88\1C\C4\A3&\A3\C4\F2\8E\DA\AE\E8X\A4S\12\E7\EC\90\B2\C2\ED\B0\22\18\0F\1Bw\8Dp3\AD\B6q\11\10\DBh\0C\155F\C4\1C\90+D\DE\BC\B3\C1\82\05\1A\0D\7F\D1\B5\FC6\FF0S;\FD\D9\83\16\9E\A0\89\83\DA8\94nc6\DDt:\B8\9B\97\B5\D3b\0E<\DB\B0}\E9\A3\D6l_\E1?M\0B\92\E8V\EB(\DFEP\12o\08\C8\7Fa\A4\D1QT4m\D3/u)\1Fihi\99\E3\E8c\17Fr P5\AE\9CMg\86\E5\9Fj\13\07\01)\C9\85q<\F9\E10\7Fo\1F\D8`A6oi\95p+T\EE\B3\FA\E98\0FZx\AB6\8F\C6:\22\15\9ADw=\08\DA^zj\F1}J:bPS_\F7\A8\ED\AE\D6l_\E1\886A\A6$\A8\B8\98\A2\B3\1D_zK@\16hS\FF\80+\AF\BF%\B4QOc\98+o\D8\A2\AF\9D\B3\1C\DE-\00F;\AC\00\AE\8D#\96_A\CD\BD\1F\B0V\A1\83I\8D\0E\\\12\87\0B\D9Ia\\\8A\C1\06\EB?O'\C6K\9AV\F0\06W\18\A1\D9\BC\AD\F3\FEs\92\DE\BAr\9A\93T+G\F2\C5\BE\CE\00\BD\97\0E\D0\8F9\9A\BDI%\87*\1C\D2\D2\B8\1C\E6B!\CF\98\18\F8o\BF>\A2\F3\85\17tV\C4\E5D\BE\B1\06\D0\BC\C0\7F\87\98\EC\CA\EBKrAh\EF\DE\D0\957\8C\D3-\1A\9C% \0B\B5\9EY\19\D6\A1\AF\C4arp\95a\A7\DA4\8Ad\DB\A0F\07\DDH\D8\86,\BD\1A\E6\7F`\B0\C1Z\E8\E9\B4X\A1\0D\E3%\06\0F \A7\90\C5e:\11\7F\C1\83\D6]\AE1\06#\13\E6?r\19\CD0\BD5\DB9\8D\19\84\8C \AB:T\E1P\E0\C9R\F6\81w\14\92\8EO\B5\00\81\0F%`\8D>\9D\1F\B5\D3\09nk\04cyFLe\7F \98\E2{q\89P\F2\8EB!\0E\C4\1D\E9\C9+\DA\E9z]\96\E5$\07\02\0B\C3\FC\A5\9Br[\0CA\D6!\8A\D1\9A\B9!>\E1\1E\8Er\80\C3\C0\A1 \B9+LA\8C\BE\DB\D5X\CA>\CAR\862Q\0D\0DFG$\1C4\B0\1D\8B<\9E\18\B7pZ`\99}\9Cf\8E\EA\BA\B2\B9H\B7\0F\98\C5\87IoY\88u\AE\10\0A\F8\9C\9DO\87\A3}\\\C2$\FD\CF5\F4f1\80\16\D9\C7\A9-V\07\E3\E9\BFj\D5\F6\11\B2\18\17\F0\A4\DE\CA}\A1\08hy\C3!n\B0`E\BC\C3\FBZn\C0\DF]\89\D9?2\18\B7\BE\BA+O\7F\D6\BDT\A7\19z^\C2pdI#C\E6\93\E1r\A6\B4\95zRYJK\86\144eE\C9\CF\91&\85\A5\84T\90\BAz\92\\A\1AY\A4[z\C0\EB\\\84F\8C\D4j\9A./8\F6}\F7J?\BD\0F\0Ex\12\A4\FC\0C\ED\FDcDD\E4\1Bi!\E9RM\EE\95#yl\CBR=\AB\A2 \FC\1BRg\95\D6\B2\D4=\EEP\AF\E5J\A6\F6\96\D7=\1B\0F*\1F\885\CA\B1S\CB\FC\F2}\BEZ}\A3\DE\EA\C9~h\D0\E9Zuz\A5\1C\01\D9\A2'{:d\1F\C46_X\16x\F6E\A1\F7\FD+\CF\CB\A5\D2A\EA\98\D2\F2&\EB(*\95\A4\85\9C+\0F\C9O\B2CDD.\D2~[\E6\83q\94\CE\0C\BD\AE\03\82Y\DD\13\C3\F7R\DF\D8\037x\D2\AE\F1\1AY\\-\22\DF\1B\B6\07W\E5\A9-_Hic[\A6\19\9CyN\8F\95\06:\EF\E8\A5\BDg\81\22 \BE\C3MZ\AD\CB\C9\A2<\B7\F95\BD\CD\87\B58\22^c\A6V\A5\8FR\8C\80\9C\AFw\E6\E3.\F4K0/aE\E9.u\A4x\C2\9C\85\B3G\864\D4\F7\99\13}1\8E\CA\B3X\AF_1\B9Z\BE\97\1D\B23_\C7\06yO\BA\9B[\FC\BC'm*\CC\9E\C0\FB\FB\89\88H\9B\E0\DE1\C0)\AE\8Cs\9C\1E\96\1B\CD\A3\E7Y\93\0Cl\AC\B6#\DD\E5\D8\CC\B8G\E7MK*\02\E23\A4\F3\B3V\EF\1A\B2 O-~\C3\90\D1\D5\15\AF\EC|\E1d\ADJ\99\B2>\85\08\C8\F3zWnpe\9A<\84\A4\C8\F1\90OFR\15\FEr\A9\85O{\E4U\DDA\AB\C1\DB\22\92#\85C\E4\03A\BE\88k\9C\AE\90\B6\C6\96\1C\8A\88 \F9k\E0\97&\0E\CE\8D\AF\F5\F7uW\04\C4w\A8\C9v\AD\E6%eJ\9C\AD\CD\91[\8D\E3hjr,\EC\E2\D1\F6\CDd|\C0Xj\17\03\F8\D1\07\E2\F4x0\8B[\F4?n\D1#\ED9\88\8D\F1\16,Be\CA\93I\19JS\862\A1\FF\8B\01\19\14\05\0A\04\1D\10K\A0\B9\CB\EF!\178D\16p\90\DD\ECf\0F\BBC\FF\EFb;\9BM\E9\B8\9C\A9\A9\CB\D8\C4)\BC\C2E\0E?\F5 7y&\CB\0F\B9T\F4\00\0AP\9D\95\E4\02\E9\E4\80\16\1C\C0\16\EFq\83\D1\E6\7F#\03\0C\D1\DB\01*h\01\08Nw\B0\DA\86\98\06-\98\8E\82\BF\B0\96Gy,p\BA\8F\B3y,zX\8B\10\F6s\B1\D1\00\E3\08\A3\1C\08\A8\E5\10\01\81\EB89`C\F8;\97\F2q\0A\18\8F/\A0\1FG\B4?\DE\E5cW^\B2\D9\FAr\19jQ\9D\AAT\A3\1AU\A8A\15=W^\\\C84\FCk\8F\ADlb=\1B\D9\C0\066\B1\8E\B5\D1\A2\16l\F2\CD\87\D9\C7`>\E7=\07w!\F3\18\E4\A1\8E'\94k!\E0\A31,\98\87%\078)f\A4\90\1D\\\CDg\C6\0B\DFsID\D0\87A\9Am\F6\99\0EV\BB\1C\95\B5\E1[\1F\05\7F\A1\02\CF\1AM^s\B8\85E\BCd\F2\0A\0B\C7:\FA\F3\B7Y\B4:\9B{x\C6\81\E8\9B\0E\A179\1Ast\85\E4\F8\\\84\B5D\AA\E8\AC\DC?\8E\C4\7F\B0BE\ED\1D\05\A5\A1\F4\93Q\F2\9A\FC,[\C4Kl\96\9F\E45\19%\FD\A4\81Q\1AZ\C1W\13\E41G\85W\FB\F5\F4\CF\1E\E0*\AD\1E\FBDD$[\AE\0Fj3\DA\CB\AA\18\DF\EA'\E3(\15\B2\B9\CBrg6/\F0{y9\EC\E8H9EW\D7+\11\96\9Fp\06\DB\CC#\BC\84\0C\91i1\D6\DC}\F2\B6t3\08O\83\C7\AF\0Ee\06O\98\03\81o\19\AD1Uo\22\BC\E6\E3\94\CA\7F\D1[\CF=\B1\9D\01yJ\85\97\17l\E7@\C0)\A3\AFO\B4\D4P\89J\A1\F5\B4?S\B4]\FFv\1F}\9E\E1\DC\AA\9DVgD>\136O\E7-M\80W\9C\CFi\EFQ\08wt\97\F1\80\BBT:\CFs\1B\7FS\8B&\B6I\A5\84\C7\B9S\8BP\02\B0\9E\C1\CC\B0(\D8UK\836\D8\E1\88\D8\0D\B5\D75@\C1/(\C0\BD\DC\A9o#\0A\D0\8D!\9C\1Bp\C4\B3E\09.\E5R\D6\F0\1E\EF\1A\D9\F1\8E\CCc0S\FD\D2\BCq:m;#\B8\E3\8A\1F\D9\B2Ff\C8\BB\F2\80\DC$C\A4\AFt\906\D2@\EA\86,\852\A4\8D\F4\90Ar\AD\DC-/\C9\D7\B2P\0E\E6k\D71\CDh\0E\B9\CF\F1LXf|\A8\BDi\B2\F8\0D\13\F5^\F8\C0GS\A4#\87\B5z\F5\96\BD\09\B4\EFO\A9\A4\B7p\BEg\8A\B9\1EZ\1D\A2yI\AD\93\9D\16\FB\C5\B3\CC;\C5\8F\A3J,\BF\D5|\7F\168<>\1E\D5\DE\9D\E3Q\DF)\0E$\1C\85\F9\C88*z\CA_\F9hs\8E|(u\8Dc\EB(W\F8\A5\81\E9\FA\82\894\95\85qyb|%\0F\CB 9Q\0A\E5C<QUz\C9m\F2\BE\FC+\B9q[^\19\047Y\F4p]\B0\17|Wq\F9\C5W\E4\E3\17)\AE\F7C/\DFL\91\82,\D0j\D5G\0E%\D8\C6\85RQo\E3=\1E\B5\A8\AEV\83\F7-\17\E9\8A\82\A4\C9\99&\C1\E6>9\D98\CAw\D9\18\15\F4t\CF\07\EBs\BD\06M\15\01\F1\01\8A1M\1F\15\15\E4\C3\84\DA}\8B\A4\EBm\CF\0D*\E6|AB>0Z\F2\BF\11\B5\09\EB\E5\1D\B9R\1A;&\E9.+\FD\E4q\F9\C3V\12\B8[\06\1B\EF\D9C\D7$\F4\C8D\9D\84\FC\EC\1B\F2\F1\AB\94\D2\FB\E1K\1FM\92\EB\B5Z\9D {\1Ciga\AD\95\07\1DO\9A\19/I\DC\1F\A8\C15\11\B5{\DB\E0\DBqf\E8\EA~]\FB \08\7FR\C7fG\BAD+\F7\A3\E3c\E4_\BD\0E\E7*\02\E2\03\EE\E3k}T\B4\93\D5\09\B7\FDG\A9l\1Cg\B7\FBGJ\F7\A4qa\BFP\B6GX\B5?#\9D]s\AA\AB \97\C8d\CB\BD\EB,\A9m,\B9%J\8Ct\A7Q\8Du\DA;K\C9o\FE#\1F\EB\1C\8B\C0\E7\C4\D8\09\F6U\E1|x\D8Z\E3!\A3'\887\F8N3\02\C9\0E\AB[K\D3\C8\DD\13\14\E4\F61^}\C56\83\C1h\AD\DC9.\8C\92,]\E5:Z\11\10\CF7\E6\93\F5Q14\CFAp\A2\09O\9B\1A\B9\90\E1\EET=?\EEW\D7\F2\B4\AE\D1+\CF\E3\\J\1A\B0\83\F7y#f\E6\90B\94\A7,\E5(GI\8A\02\19\14f\0F\90\CB\1E\F6\B0\9D\1Dl\8F\19:>\93\8B\19j\08\1Dx\84\07x\C8h\B1\B6\80\B3X\9D\A4\8F\DF\94\9F(\178-k\BB\A1\84\80_\C7.\B2\C8b7\07\83j\E0C!Ml\E0,#\14\9DW;+B1\CA\90A\06\99\86_\AD\B1\82\F6\EC\D4\FE\D8\C1\A9\1E\C7\E15\A2;?\04Nn\D5\EC1\12\C6\11\9Ai!\EB\B7R\CD\A8\95N\1AFiQ\0E>\0C\0B7Z^\0B\AC\0A\A4\B3\93R\C0\AD<\A1\17\18\C3\C36\CFm\CF\CC\C0,\CB`a\8CQ\95?\D4\D1\A6\C8\1B\11\19\CE\92C@\82i\B2\0E\B8f&yP\0F<z\8D\1EU\D5\87x\8A\9B\B5\D3\BB\F8\9Fc>\B1\BB\E9\AFG\90\CD\A6\B76\FF\BC& \D0\96\8F\A9\A7\FF\D9\81\9B\99\C4\84(\8Emi\D4\A1\05\CD\A8OmjQ\CD\D6:E[\F7\D6\B0\86\95,d\01\0B\F5\90\E4\11\95\B8\99\0BHg:\D7\05\83\96\06\F1\19\97;\98\BC66Z2M#!-\F8\8D\0C\E0\00+\D9\C0V\B6\B1\91mle\13;8\C8nG2\F2\A5Q\86b\94\A3*\15\A8H\15*P\91j\D4\A58p\90\0E:\09\DFA\0F\B3q\B8\C7\18\C7\D0\C0b\BA^Kp\E1\00^\D0C`\F5\D2\D3\B0%\11\95X\170\D1\AF\CC\AF\A6\85\BE\9A\C1\7F\B3\03\BF\01\1F\19\D5\1Dw\DA\C6\07(\CB\\M(w\0F\F7\B9R\F1n\FC\148\F9\863\BC$ \BD\\\F3+\CB\D5\0D\90\FCL@.\E7M\9D|\DC\EF\E8\A3\F7\D3\93\DF\B4?vr\12\CB\FDA@\A0\14\AF\85RyDA\09:\D1\85Sh\9DP\1C\91l\960\8BY\CC`\AD\E5.\AA\A29\7F\F0~n\E2\8D\A4\0F\01\03\09\E9Ba\96\B2\DE\83qX\83\86\1C\E2\17\9D|\9C\C6|_M\94\A5\01\93\D1\8E\8E\86\AD\DAEo\8D\F7|\90\BB<i\D7\1B\9A\9DK\05\EE\A2\1FU(\C2N6\D1\DE\90<\EBe\AEf)m\F5\80\08\CF\E8{\CE(\22\8D34\06\F7\0F\97\CC\A4\061>p27JNewq\7FR\BF\D6\03\8E%\ABw\1A'\F2\A7\F6\81o\E09\C7\1F\BF\9BS\F5\88\99s\E9\A4\FBW{K@\00\86\F0\84\B5\8BZ=\CE\A6?\9D\1C\F6\15Y\C1d&3\D3\CE\B9\F2\0F.\F6\C8+\F9\14\A6\D9\BA\8A&\1BG\E9\EEp\02\ADDQ\98C.\C7\AB\9A\AE\A7\DAK2\0F\B2\C8>p@EV\93Cg}\22O\A3\8F\8D\B8-\8D\D74\A1R\09~w-\E7\D3\8D\1A!_\1FW\CC\15\A7\D7\9D\A5\01\1F\F84numX\08\8Fk<\FFr\1A:\C2\FE;\8D\22\CC\D6\02\16\F4\E4+W\BC\EB\D6\D0^\F7\8B{\84;\FC\D4\FC\B2F\C3\DE\80\BF\ECM2\DFU\15\F1vyAZY)\D8\0Fq\9F\A7K\F8\1D\BE\0A\9Fx\BB\EF\A6J+\D7\DB\BC\DB\B3\B6u\D3\BD[\AC\8E\FB\E4\88\F4\D7\FF^\ABq\ABQ\F0\A0~\E7\BB.\CE\A4\07\F4\B0\DF\C9\0FDy\89\D6\C2\8E\AE\AE\16\1D\F5^\BF\C4\97\FCG( k\03\D9\EDZ/\CC\D0\9D\1Br\E8\E4\1F\0E\04\A0\AD\9E\83\BA\1D\B7p\B6\ADY\89s\98\C7\0B\BC\CFQ\FD\C2w\DC\A0'\00\F7h\87\BD32Y`\1A\15\A8HE*S\91\12\94\A0\14\19\14\A74\19\14\A3\0Ci@\A9\90N\A8X\A8\EF\0E\87\9C\E7s\D8\0B\08\BB9H\16{8@\16{\D9\CF~\B6\B2\99-lc\9B\D5\C6\EA e\E3\8F\B4\98$<\E8xJ\AFH\9C`V\86%\11\DD\19O\F9h?\BE\C2G\FC\AC\FD\91MW]\CEh\81\D1\BAj}\04\CF\B8X\E5\D7\B5T\8AP\96]I\ED\ADR,\A6J`~\FCBG\17_4\87\0EZL\C1-4\F6p\8Ba\8D\86,\08L\FA\82\CC\E2$\17_t\9F\9EJ\FA_Z\1B\17\CED\91(\CF\14J\DC{/c\E3b*7\B1\93\1D\EC`\07\079\04\1C\E0\08eH#\8D2\94\A0\1C\E5(O\E5\18\96F\D0\9A7\B9\87\134\05\FB;\\\E6\F9`8\C2\1D\9A\083\9D[\E9Hm*P1\0E\93\01+\BEV'\C3\E5c\94\CDf\1B\DBX\C5o<\A1\0B\F7F\FB\8E|\E0\8A!Q8\1AyF@\A6\D3\98\D1\\f\FD\B9L6\A47\D9\92\8F\DBu\F21\88\A7\\\96\BC\19dl\C9% \FF\0B\90\0F\B8\CCU\F2\01\ED\18\C2\DBZs\C7\DA\EA\9D\92\8F4\DD\8C\FB^W\C9\07\DC\C9TM\99\DE\94\EB\9C\DC\97$\CA\814\D4\12RO\89\1A-t+\F3\99\CFb\D6\B0\9A\B5q\EAp\AAP\9BZ\D4\A39\CDi\10u\11\0E\19Jz\A5>\8D\DCj\06\AD\AD\872.\C9\AF\BE\8Cw\F4Z\\\E3Cf}\12\FD\01\BA8\BE\AB>\C8)\DA\E9`\0Fr\A2\9B\B7c-iL1\8A\B1\87\9D\94\D6?I\08\CF1\C2\96|<\A2\B34_\BB\CC\CD\CF\D6\17\EFS-\E3p\B9\85&\FC\15\106\87\18\11\17\B1\95\C6\1Au\CC\A1\8D\AF\CCJ\CE\E1smM\9F\E7\BA\F4\DD\C0x\EC\A6\AEs\1B\06\D7b\22\1E\E1Of1\93?\A3E=\B7\C5&6\85\CC\CF2hNgN\A1s\CC\DD\B8\E7\B8\99n4\04\98\C8\EBI\15,\E7\EA\E9\8F\97\C4\91<\C0C\1Cu\DC\C3s\95\91\C1\F5\16\D9\FC\C9\9F\86\BF\87\EA\B4\0D\C8e\0C\8F\DA\DC\FD\90\AE\E0\EC\C2$\D7\85\C1&\0E$Y(\C0I\BC\AA\AD\96g\B10\09nJg\F2\9E&\18x\8F\E1\FC\9E\9C<\19ql\DD\C7j'\CF'Ay\DB\94\1By2pZ\86\9B=\0B\FDc\C1\81\04\D53S\0CaL^\96^\92\E1\B8\924M\9A\C9\1D\F2\BB!.V9\ED\B7\07|\B3>^\EB\BE\7F\ADu8\E7P?\0D\C7\9Fx\22P\BF\22\B2\C1\E1\B6\BF\A8\B7\BD\AD\CF\DA\\\85E!\E5\E5Ot\B3-\FB\80>\D2ON(\CCd>\FC\B4\AFKR\7F\A4\F3\BD\E7\E6%\DF\E7K\AA\EC<\CE\D7j4(Ik\C4^\A9\A0\F5\C1\DE\18f\1C^\11\90m\F2\B4\B4\CBS\18\93B\92)\99\C6\C0\7Fq\85X\BC^\E6\F9\95\80\8C\D4\F2W\E7=T\E0\91P\C6\EF\A3y\BE\F7\A0\DE\EB#|J@\CE\D2\BF\DF\C7q\07\C7\8C\85]r\9B\1E6n\9F\C3\11\CF\9DY2\9B\D3\9DN1'\EC#\FA\F8\EE\9E\B4\CDGh\93\97,\01p7_X(v\F3\C5\C8\08\E6yI\97\C5I\DBf>\AE\F7\C1X\A7\9A\E1\98\08\EBo\DEc\92\8D\EE\B6&\F5\A8E-jS\89\B2\94\A3B0\89\AB\8E\AC\A0r}+\EBY\C3jV\B1\D4\D2\\`#/\F0\02\AD\B9\D2\8F\86\DDM\B4\AD\A7Q\00\B1\87Mlc3[\D8\CA>\F6\B3\87=\ECg?\FB\D9\05\1C\89\1A\BA\A58\85\81LJP\82\92\94\A24%(IE*S\89\0AT1\F4`\06\954QaS\9F\12\90\1F8\1C\E8\94\8D\0C\E21n\E0\BC8\F2\1C\D8a%o\F3\92!\\\08\D3\9Cv\92r\009\BA\F3\87\0D\EE\D6\CD\AE{21i\F1\D5\8Bi\AE\8E\C9z\A1?d\D0~\A8E\17=\CFK\A3\A4\BD\F4:\9E\D6\A2#\0C\E7!gl\B1\1C# \D6\8E\9Eu8\9964\A7E\1C)Z3\A8Nu\D3\95#,b>\F3\F9\85\B9\11~W\F3\B8\D6\03\F3\F5\98h\A3\91\CB\F7X\CE\0AV\B2\9EmQ\83\B1\C4\C2\01\0E\80\8D\BE\AB(\15\A8N]\EAQ\9F\9A\1A\01i\EDS\02\B2\9F\11\BA\B0w\1E\97s#}\E8E\CF\B0o\1E\1B\B9\FC\C5T\BE\E6W\F3\06b\93O\0C)\F2\8E\1B\F9\9Fv\DA\87\CFcZ :I@vh;\15\85\E4\22$4\1C\95\C4\97fp\AD6I\AAp\0E\9F8\F1L\C7\AC\B0\C2\89\FC\99\F4\E4\14\AA9\D4\F4\03\CCf:S\A2\85j\F4\8B\15V\11\0Ex.a\CD\A6\84\0F\8Dx\03\E8\CE\A7z\16q\0DUiCK\1AR\97:T\8A\12\17\E9\10\EBY\C9J\161\8F\BF\AD\02\9D\FD\CA@C\E8\A9T\C2\E9|\A3\8D\99^IP\9D\1B\D1X\9B\BC\AF%Is6P[\B4>I\A2\DE>\80\AD\9C\AF\9D\9E\CF\A7\9E\F3@\1B\02\E2\D6nLOr/\D4\D4\16\07\AF\E26D\88l\22\02\AE\8F\90\9F#B[;\85\15\F2\94\B4\89\94j\8E\F7\C5RP\907|!\E3}\C1\8F\ACY\10\D5y\8Bl\BB\DA\97\93\86\D2F\DAJ\0F\E9!]\A5\8D\B4\92\9A\B1td\DB\18\E1C\EDG|\A8\ADg\C0\EE$\FB\93\1C\F8?\14p\FE\DD$\B5v\A0\D6\D6\B5IOr\B0V\1F/\03=\FF\EAWiu\F9,\E9\FDp\B1\D6\0B\D9\CED4MT\84U\CE\C8\CC\F4d(g\B9:\97\EBr37\F37\E3x\9F=\FA\E5\8A\BEX\0C^\89\9D<\B28\99\94\A4\04\A5)E\09JR\82\A2A\01tAS\C8\C9}A\91]\16\87\D8\CF>\F6\B3\97=\ECg\1F\BBb\06\BB\E7:6\F1\A0O\17\CC\F5\\\CE\93\DC\CC\F9\D1\14 ;\8CZ\8D\D8X\C1\9B\BC\A0\BB\B3\A6\18\0A3Q\93\C8\B7\E6\DB\A4K\92\8A\E9\C3R!\99\082C\99\F4K\FA\AB\87\F0~\E0$\9D\01\BC\E8=\01\D9\A2\9Dt\E1E\9A\E7I\D2\B2\0F-hG`\F1,\12w^\80\96\BC\C0\03<\CFXM\0A\BE\C2\07\83\E2\B6@\B0r\E3\EAP\87z\D4\A6\22\95\A8B\05*S\D9\91\CC\07\07\D8\C2f\B6\B1\89-le5\CBY\1D\AE=\BE\8F\9Fl\FD\9D\BD\C5\BF\0Ce\04\E7q&=\22,)\E2\C7r\A6\F2)3|\19\22/^\8C\D2\92\DATbbB1\AB\F3\87\90\EE\BC(\0A\C9\14`u\0D\9C\9C\ED\01\E3\DC\8D\0Al\D3\C8\98\0F\08Hh\FA\DEnK>v\B2\98\D5\ACf\0D\EB\D8\C1v\B6[n\1A\8BR\8Er\94\A3*\B5\A9E-\EAS'\AA4\A6\0Cw\F3\8C\96:i\B3\E7\83\A2\B1\AE\08\AD\C3\0D4\A3>5\\R\87\14\A7.uMWrX\C7r\FE\E1\19-\E4}:c\E9\E9\EBI\B4\9F\B7y\9B\82\9CD{Z\D3\9A\FAq\CE\A5=\FC\C3<\E61\CB\17\9B\86\C4PK\8B\0EV\88\F1\1E\04\C45p \C5PH\1EN\D7V\DD\F3=xyA\06h\A9Q:Q*q\DE\BD\A0\9B\95\DD\C6,\E6\B0\80\05\AC\8B\AB\FC!6\B0\C1t\A5$\CDhFk:s\A2\05)\F1\91\A8\FF~M\FBy1\EF\B8\96 '\1A\D2\A9Mmzp=\DD4\C6\A3\07u\8C.\DA>EIv\F2\0F{\D9L\13\DA\C7\F4\95\10\96\B2\80\95\ACd=\B9\14\0BE\9CLU\BC\A4\89\8E\C6p\AA'\15P\04\C4\13t\D3:\BD\BB'\AF\EF\A7\11\90\82\9C\C2\97\BE$ {\F9\96i\CCbQ\C2O\DA\C7\AF\FC\0A@9\BAp*\FD\02I\04\FC\86*\9C\138i\C2\1BI'\1F:\0A\F1\B8\16\AD9\8D\CE\1E\11\90\8A\D4\A5,e\C9\A4,\C5(\13d\9A\0A\03\85\82z\8F\D2A\B7\96Rv\8F\A9\CC\E9|h\CE\FD\92F#\93\D1|\0E{\D9\CD^\F6\93\05\A1p\EE\078\02\1Ce?{\D8\C9.v\B0\95\95\B1\15GI\C7IZ\CA\A8\06\1E%%7\88\B02PH\1E\82t\E3d\8F,?N\A1\90\E6\02\D2\CDw\04d\1B\13\98\C8O.\D8\91\EE`\12\93\18I\13\CE\E2<\CD\0B\C7/\E8\A1I\AB\1E\F1\D8\1C\E8$}c^+\A9/\AEDg\DA\D0\85\16\09h5B\A8\CD\08\86R\92;y\9Aw\0Dy\FD\22\18\AF\CC8\DC\8B\02X\C7\1Cf1\D9G\82\AF\90\EB\E0\CB\9E\A9 \\' \859\CB\F4\85Ba\D0>\8C\FB\C39\85]\C6\D9\9Ai\FAaRR\1DPkh\C9\C0\BDr\88/A[-\CE`\D7\C4\9F\E6\18\01\11\A62\8E\C9\B6\DF\22\9D\AA\D4\A22\E5)G9\8A\93\16\DC\A0\C2A\0Es4\E8\89\BE\9Du\AC\8A\BAl,d!\0F\D1\8A\A1\0C\F6\0F\01\09ZTg\D2\C7\E3\8A\14\D0\F9\9F\82Ize\11.\E7B:;\A3\F0)\CFY\0C\08\09\89\1B\F1\0A\0F2\81\09\FC\98\A8\DBl\0Djp.O\F25\0F0\DB\07#\A6\A2\16\BC\BA\9B?\CC\F1\DD@\1A\DFF[%G{Y\AFaa\7F\FF\C8iI4\C5\08\ED}O\F5\AC\03\BA\EA\A1\DD\0B'J<\1D[f\AE\D4\D3&\86\89U\9A\D0\9C\E6\B4\A0\1E\D5\F3\10ur+\AB\F9\87\05,`\BE\85/\F6_\\\CF\AD~1\C0i\C7E\81\93\8E\9E{\11n\D6\9D\EC\9A%\E5\85\03x:q\FDoq\1As\22'q2M#\04\80\E5\18\C60\0E0\9BY,`\05+\F5\BC\E2\F9Y\D2\FA\D2\97/\B9N\B36\F0\0C\E7kS\C1\CB\14\15\12q\E2(\9A\F8$\EAT,t\A3\09\FF&\EDm-\B4\CDts\CF\1A\DCR\E7\10\1BE\F3\CDN:\01\D9\1A\C1\1Ew\A1\0B\A7pR>\F9\E3\8AT\A4}pt\FF\C7Lf1\9DM\A6\12Y~\19\80\A1\00\1D\DE\0B\D6JR\\\13\F7\0F\E0\02\97\1D,\8B\F2\12\97G\FF\B9\18e)\8C\96iQ\F3s)E:\A5(EIJQ\92JT\A5:\95c\9AC\14\E7\B4\D0N}\1B+Y\C5n\F6\B0\87\BD\EC\E5\10Y\1C\02r\83\9EA\01\1F\9A\FD\EC\8C\96v\FCL\BAr'/x\1A\D6\FB\0Cm\94\F7>v\09HIR\05\C9\ACipc\D7\C0C\CB\85\E6Fr\E6\17\02b\DC3\9E\C9Y\F4t\CC;)\8D&4\E1j\84?\99\C4d\AB\16\97\F1p\F05\D3\92\89\9D\98\D4\B86\D1\16\DA\A7u\0E\FD\06W\09HI&\9A\CDH\0A\D0\94ShJ\03*Q\96\B2\AE\05\E5\A8@\858\F3\B7\EDc';Y\C32\E61\D3h\DFW\82g\19\C0\C0(L\B3\FB(\A4\C9/\FA&!\13\84g\04D\C1\9A/\03\BC\8Dy\DA\80\0Cm\FB\DD\C4\EB\EE\E8l\0C*Q@\FA\C8gr\D8eg\FC\BF\E5\06)m\0Ef1\DD\C3\1E\B8T\AB\C5_\E2\0F\0C\D1\FB\A5\AAk\AD.\C2,\BD\FF\8B\CB\F52C\B2\1Ck\C1*y\\\DAHy9[>q,3F\AE|/]\CD\A3fM\92\C4|V2\84`\1D>\F2t\A4\\\A5\F5\C4\22WZ\D9Qk\E5\AF\E2G\FC\AA\8F\84\8EI\FC\F6\FB\02\EF\BC\D3\D3\B67\D7Z\FEA\A2\CDI\94\031\C5\B5\CBe5\BB]\DF\CE\1CdC\B8\1C|\B1\87\04d\AF.\B4\F3\07\86\E9\A1\8D\CA\BB\16`\F0\05:k\A7g\F1\8AeX\9D\C3a\8E\1A\85\A3\F2\A4G8\C0\1E6\B0\81%\FC\C7o\AC\09^\9F\C8D\0A\D2\8A\D6\9C@=\AAQ\85\22\94\89*\EE\DA\13&\932\97L\A3\07=\98\CA\D5\AC\D6.\D5d:=\F9\CB\13\02\12\84\B7\19\B0\14\07\92t\94\D6B\F8\D4\F0\B4\1A\D5\B4,\03\09G\BBM\94\80,\E0\19n\D0u\C7\8B\B8\921\\\C8`\DA\B9\D0\EC\CD\8C\E7=\E6\86_^\C8M\1E~\8B\95\DA\C9@\BE\F2xX\04\F0\BB~\9A\E3\D2+.\E1J\ED\F4\BEPv\CC\0D\FC\C2|\96\B1&\A8\9F\B0\0Eb\9Fa0Z-Hv0\A4Mtd3\879\98Ee\A5)h\D2o\EC\8B\A2\ED(EiJS\96\064\A0=\ED)N/\FE\E5.\9E\D5V\CC\F2L\A3i\98j-\19\08\06\12(\16\16Q@\11\90c\1E\D5\F5%\DC[\02\E2T5\12\0Fer3\F7p\177\E9\0E\10[y\96gi\C4y\F4\A6\83CJ\96\95|\CBd\A6E\AE\88\BFps\D8\FA\92l,\E0\8F\80\B6\FF\1F\1AR\9F\DA\D4\A1v\F0\DFd\D9\BA\EFb\15\ABY\CDjV\B1J\8F\AF\BF\DD%\D1\04\0C\D1NN\E3R\D6\F0\0FS\F9\DE:\AE\7F\04\B2\126~\C8\B5\C9\90\12\CE\1C\EEe\1D0\03\80Bt\A4\17\DD\B9\9DRz\DC\99\B2\F4\E35\AF\96\91\1A\1E:\9D\06z2\FCD\C1eT\D1N\AAzZ\8Dj\8EU\C3\89\F5}\1F\B73\8E\878\D78\1F\96\F0 \0FR\86\1Et\A1\1D\AD\F2%\E0\11\962\87\DF\F9\8E\A5V?\FF\C7}|\EA\F9\EEI\18\C5\0F\01]\E8!\FE5\D9\03\16\A5<\15\A8D\85\E0\FF\A5)M\09\8AQ\82\D2d\E4\C9\0A\E3 \07\D9\CB>\0Er\80=\ECa\0B\DB\D8\C6v\B6\B0\8D\ED\D1\12V\BD\EA\DA\C2\10\E2\BA~\A0\B6[\FD\BA\81\BF9\CDI\1F\BB\A3\CC\08\92\12\EB\B6$\11\C1\08\BC\07\BC\F5\87\E0\CF$\BD\E7e&\F9p-\F7$}L\09}\E7\E2%BQ\83\8AQ \B1U\C2)+\ACe\0C\A4>7s\99y]\DC\CDg|\06\14\A4)'\D2\88\064\A0\1A\15l^\BB\9BM\AC`)\CBX\CA\\c\C8v3~\E2\09\BE\F6\09\EB=\93a\8C\B3r\019\C4z\D6\DB\DC\98\89f\E4\0A\E9\A6\C8\1E{\83\BCV@\8F\B0+?\B5Z\C4#\AE\B5\F8\1Ez\B9\E4\E9\9E\C3J\16\F2\0B?3\97\\Jr\0A\A7\D2\96\13\A9\E4RK\DEa\9A\07#&8G\D6\F3\A8?\D6R\979\90\F7\14\E7\A1!$\A79\9C\BFY\ED\D8\AE\D7P\A3C\89<\C9\E9x\84\E5\B9\98\8B\F5\90\05\D1\8BU\A0\18eH\A38\85\D9\05\EC'\8Bml\8F\ED\18\B9\95\8Fy\87y>\1B\18\A7\F3f\9Es\B3\BA\89E\9C\A1k\8B]@c\A6X\86%;\CC2V\B0\85\DD\ECeO\C4\C7,A\A1\D0\BF:su\98}d\B3\93-lfM\94\01P\86\EAT\A7\1C\C5\C9\A0(%M;\90@\F4\ABHEH\89\A0\12\A4\06\0D\A8i9\D2?\E4rO\F2\A8\CF\E0d_\8D\DE\BF]qa:\C9\17>\FF\F1\A0\83Qq\E8*.\F6\1D5-\95\88g\AE[8\81\07X\E0x\A6\BD\AD\BC\CB\19I\0B\D1\91w\E6\F4R\1E\E6#f\B3\D9\B3\\\84\9B\99\CDG<\CC\A5IH\11T\86G\D9\13z\F3a~d4\9D|\9B\19\B0<\FDx\9AE\86\BEZ\C4%\9E\D5\E6%_d\AE\D4\8Fw\\ieY\0E\FA\AC\9D\D6\C7\C1$\CA\93\AE\F0]\EB\CB'\D6 7#\A2W\A3\17\BD\E8\92\B0\A2\E6 \7F\F2=\DF2/e\94}\C5\A8M\1DjR1\A8\FC(Oy\CA;J\FA\B2\D9\CEv\B6\B3\99\EDlg+kYe\13@\CC-\14\A2-\D5\116['*\F7!jp\02\A5\C9a\BE\A7a\153y\8Dn\1Ek\D0ui\C6\0C\86i9\86\1CF?\1Eu&q\AA\8B\D8\CC\EDLI\DA\DB\86k\B1\D4}\83j\89)\83\D2\92R\C5\F6\B4\A3\05\0D\A8\9D\07\C7\DB\CD,e\11s\98\C3\7F\D1bR\A4\18\CAS\8A\92\14\A38e(F1J\07\859\91Ym5\15H FG 4\F9A\0E\B2\9B\03\1Cd\1F{\F2\96\F7UAA\C1\17\B8\81\E7|V\A3:\89\89\BA\93\9B\93\A9\10\B5\A9GE*P\99\0A\14\A3(\19\A4S\98,r\D8K6\DB\D9\C6V\B6\B0\8Ee)\9B\E7ZAAA\C1\1A\CD\92\EA\F5\1E\0F\C6G\B7TRPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPH9\A4\A9.P\F0\1D\D2iC\0DJ\B3\85\FFX\A5\BACAAAA!\1ET\E7%\B6#\A1\E3_n\A0\B0\EA\16\05\05\05+\14\E016\F2\0D5\8E\F3~\A8\CBXf\B2\865\CCd,u\8E\D3^\18\CEA\03\F1\D0\8E\A54U\13EAA!\12C\82\8B\C4\94\E3\B8\0F\0A\F18\87MK\E6a\1E\A1\E0q\D7\0F\0FZ\10\8F\C0\B1\97.j\AA(((\84\E3\89\E0\12\B1\F6\B8\ED\81\22|g\B9hN=\CED7\97G%\1F\82\B0\95Zj\B2(((\98\F1dp\81XwL\B5\AA\13/\B1\80\AD\AC\E7gFS\C9\B6\EC\B8\A8\8B\E6\AB\B6\F7Uf43X\CFV\16\F0\12\1DS\BC\C7\CA\B1\DB\96\80\08\9F\1DW\F3\E2T\FE`=\13h\AC\96\08\05\85\E3\89\80\94gR\D8\D2\B7\8F\9B\A2\96nOn\D4%3\97\0EQ\EF\1B\C9\BE\B0\D2_P.\85{\ED\A1\18\E4C\C8\A5e\8A\8F\8C\0C\1Ee%\07\99\CDe\B6\F6\8F\85x\82\9C`\ABwPS-\12\0A\0A\C7\0B\01\A9\C6\0A\CB\E5\EF\95(\E5?\B4]4\DF\8Fr\D7k\96\A5\97S5e\FBmYL\02\22<\98\D2#\A3\00\BF\19\DA2\892Q\CA\15\E3+S\AB\7FQ\C6\F6\0A\0A:Z2?\C6B\B1\9DkR\B4m\85\F83j\AB\AC\B8\904v\D9\F6\C4N\CB\C5\E3\96\A8\E5\7FOQ\D5{\CD8\C8\87\F0kJ\8F\FB\E6a\ADYLE\8BRE\F99\A2\DD\9D\D5\A2\A1\A0\A0\E1\CF8\96\8A\\\EA\A5d\DB\AE\B3i\D3>*G\94/\1F\B3'\22\C5R\15\D9kS~xJ\F6[\C7\B8\08Hjs\A9\A7F\B4\E7/JGl(\C6[\B4\FB\05\B5h(\F8\95\AD\F6b\B7\19\1BiTO\C9\FE\BC\C1\E6\B7\12\\f!\AE\88\85\E2\11W\AE\A2\A4M\F9\1BS\B2\DF\8A;X\CA\AF(j\C1\8B\BF\15ve\14\E7[\DC\A9L\98\15\14Bx \8E\BD\E6?)i\C2Z7F\ABfD\DCQ\C4F\85.\089\16\FD0+\C6[j\A7`\CF5\89\8B\03Y\98\D2\E3\BE\AFe\9B\8C\C2\DA\16a\DE@\DA\91}\0C\18t\8F\B4\E1\9BWD\11\D2\95`\22\D9\B6#\22\9B\89\94\B0\BC\B7s\14]d\C0\ABhdJ\F6aaN\E7E~g=G9\C82~\E4.\9A\1D\8F$\A4\0F\B7\87\8E\19\C1\8F\BA\DBp\EDJ\DB=\B6\7F\D1#\C6\02\B8\DE\E2\9E?l\EF\F8\CD\E2\8E\8D1\DErZ\0A\F6\\\06\07\E2  \1F\1F\83\04\E4\A0a\09\F8\F9\98\DA\14\18\D10\C6Fi\B1\E5]c\E2\DAV\8C\B1\BCwq\0C\11y\C3\14\EB\C1\22\DCb\0A\F1c\14\84\F6>\9E\F9\91T\B2\C2J\8F\B1\13<3\C6P\DFaq\CF\CD\B6w\8C\B0\B8cG\8C\B7\9C\19c\17\93\EE\CB\BE\9D\18\C7RqQJ\8F\F4\D3\A3r\DB\E5\C9$\93\8BmZ\9E\EAj\F4\BE1u\9EVx;.\02\F2\B6\E5\BD\B91\EE\EA\9BR\FD\D7\95\D5\B6\AD\99\1A\C3\D7L\11\10\8F\D1\8AWYC6\C2\16\C6sF\94Rmb\0A\E6\AC\F6\DEk\A2\96_i!7\87\851\DE\D2:*y\FB\84\AD\08\D9\AC\E6\15\DF\F9T\9C\16s\A1XKFJ\8F\F4Fq-\87\D6\C7\7F\BC\CD=\0C\A6u\8AZ\D9\9D\19\B3\85N\13\10Ih\9B\E5/\\\15E\B4i\96n\B4U\04\C4\AF\CC\E3k!\B7.\ED\F8\C1\92\E2\17\8Aa\94\FB\92\E5\F3[G\11\DFd\D1\DE\B2\FC\AB\B6\EF\D8m\C9%U\E1\C7\08\ED\CA\CB\14\F1U?O\891E\06\A7\F8H/\10\93w\8C\E7\D8\CFt\EE\A7OT/\12E@\8E5\02rc\9C#c\1F\CD\15\01\F1#\F9\F8\D1\F2s\AD\A1\9AE\E9q\B6\9F8\9A5Mg6G\94\DDF\D7(\A5O\B1}\C7k\16w\D4`\ADe\D9\E9\BER\CE\96e\A9M\BB^<\06\C6\FA[\0E\10\10}\03\F0\13\D7Xz\92\A4&\01\C9\B48>\8A\AB'>\B2\BC\F7X! =9\1A\F7\98XE\05E@\FC\86\97\A3~\AE?,\B4\095m\94\C1\93m\DER\81g9d\E0=\9E\A6\BCM\E9\AFm\F6\A7\91\E6\CF\05m<o\FC\E5aP\87UQ\EA\F9\E11\11\9B\B8u\04'\9B\E7\A3\A3\8C\953\A5\A2n\85\F4=WEx\93\A4\22\01I\F6\91\1A\04$3\8A\E2<\DA1Q\11\10\7F\A1\B9\ED\94\BF\C2\E2\8E\01Q\D4w\ABc\EE\16\7F\0A\95\FD)F\C9\F2QL\14s\B9\C0R\82jg\06\E9\97L\1Bi\9Coc9\93\CB\04NL\F9\B1^ \86\88\D3\FA0mI\DE\90\00V\CAGr\B9\94\D1\84\17\CFS_\11\90c\90\80<\96\E7v\1Dw>C\FE& /\D8~\AC?,\EF\B9\C0\82\0B\99\17\D3}\B2\80\C1N~oL\07\CFZ\FCm\C1}\0C\B4,;\D7\B6\0D\CF\FA\A2\9F\BB1/\E6\D4\C8\E6-\AA\A4\F4X?=_K\9DA\84\91.[\C4\88C2I\06I\A1@\EF\BC\ED\E34d\8A\80\E4\07\95\C9\CAs\BB~>\9E\88GE\EE\0F)\16s\F8\806\BE\AB\E1\B2\18\C6\87\E5\A3,\EFo\99b\E5.\8CC\D7`v\A5\8B\BD\DB.\CC\22\93\02\ED\CD($\AAB\0C\83\C6%\9E\F7q\D5\18\01%\8D\C7\1EFR(e\C7\FB\94D\97\BD\93\C5\0Akd\84d\08\C2\11\9E\A4\94\22 \C7\0C\01\B9&\1F\ED\CAM\D1\18\1EyF!\1E\B1H_:\D5W\A9m\D3b\9A\CF\B5\8EzoQ>5(<c\B7\EAR\D3s\87\C4,_\CD\E0\A3\FB\89\A5\B9o\00mc\B4\E0\90\C7\B1^\07\E6\D96i>-Rr\C4\9F\92\F8\B2w\A9\EC\17k\AC\97k\A4\80 l\B4\14c*\02\92\8A\04\E4\9B|\B5,U\03\D1\E6\919\9B\195\F3\9C\7F<\A9\0B\C4\B4\808\C9\E6\EEWcz\CBF\17\96=\1F\B3\FC\9Dq\84\8A\07\E8\10S@R\C0\B3\FE-\CB\17\F9\9A\22Y\DC\94r!\CE\8B\C4\F4\DF\89\EB(*g\CBx9hIDfIc\CDc\BF\AC\22 \C7\00\019\90\AF\96\A5v\BC\86\B8P\DAB\82o\CC\07\DE\D375]\17\E3cU\B3\B9\F7MS\B4\9FX\0B\DE\EF\A6\E7\CE\8E\C9\1B\19\85ko\D8\94\AC\11\D3=\CF+\B4\8Ejs\15\CF\F1I\8A\85\BBy:\81\B6F\08!K\CA\E5\F2\97\05\09\C9\921R0\A0Ql\AF\08H\8A\13\90\CC|\B6l\E6\B1N>\0AF\E5>tI\B7_,n\DE\B3\AD\E7\B2<\DC{J\0C\81^V\D8\1E\BBP\1E\C4!\EF\D9\96]\9A\0F7\ACd\88\AE\B2\12\\\02\FEM\A1\\}\17\B9\B1\08\9E*\93,\88\C8\B7R: \9A\1C\AA\08HJ\13\90&\F9l\D9\8Ac\9D\80\C4\13\8D\F7o\9FxI\DB\87G\BC\D3\F6^sf\87\B7b\EC\C6\E3\D7\AE@\B8K\DAx\DB\B2w\DB\B6\A1\BB'\FDzS\E2\1E\11\08\1BRD\1B\D2&\9F\C2\888\8E\F62#\82\84,\95F\81_\FF\A7\08H\0A\13\90\96\F9lYR\EDY\93\EF\9E\D5\8C\D1q\94j\C1m\DC\EF\83\8F8\8D\A9\F4\8A*\DEz&\06Wa\DEq\DF\C8\BE\A8e\DBY\\\99\17\B5t\C90\83\DDB1\84'\C3\A3\8A\DA\BEb\BA\07\BD:\C6\A1\E4\B4U\F9\91\1E6\FD\E4\0F\D4\E2\AB\F0\BC/g\D0\9F\AD\BC\CB\F2\84\1F\FE\07\A7r>\CF\9B\\\90\1B\F0\0Bg3\0B\EE\A6\22\D7F\09T\98d\A4q\01\B5|\F19rY\C5\84(\B1S|\85\ED\F9\BCo\DB\B1\CD\7F|\1B\B7\FB\94?\C24T`e\94\FA\C5\0A^\F6e\D8\1Dv\22\85\C8\10(\E3lJ\0F\0D+\FBe\8C\9A\B4\B7\B0w\0B0\BB\E5=\E8\D1[\1D\DDI\EE\F0=\17b\CEp.\19\F2q\90S\D8,\F5\1D\EA\85\8A2%\8C\0B9 ]4\FD\98\1F\CC\0Dn\1C.~\C2pI\81\C4k\85\0D\B1)\947z>\D8\B2\FB}R\E7\AA\FCfQ\BB7b\DE75\EC\8EY6e\17X\18\ABF\C7/ae\BF\8DY\17\AB(L\BFx\E2\967(f\A0\ED\BC\1E\1B}\AD\0B\09\13\DE\142-\F5\CF;\D6\0Bi2B\B2M\8B\E4\0Ei\16\F8\EDi\1F\F4\C2\E57\FA\8A\80\DC(\\\9E\02\AB\E5\CF\F9\1A\0B\A3\92\CBY&\17Oqs\DCe\D7P\C7'\9Cf\01\86p-mM\BD\95M\07\E6\DA\DE\F5cD8\C4\13\A2$\CE)\C6\9E\08ab\0E\A59`Y\BA!\8B\C3\BE\DB\8F14\19-\98c\12s\09sx\89\F7<\10n\9C\CC4\17\028\CE\A7s\94\BE\F2\1AE\F8\D7\1Cd\E4\1E\EE3\FC5\81\F3\1C|Y\7F>2\C9\CA\B6rj`\C0\DD\E4y\BC\81\02\05\D7\0D\AB\EA\0F:\9F\CB*\DE\DA\98]\C3\1F\A2=[\DC\9D/-V+\FE>V\F9\8F\02l\C8\13-\F5W\1A\9D\F2\B42E\CD\9D\1BC\83\14\99z\F6\91(%;\E7\A9\F5\8FD\94\9Ce[\8F\82\A6`&\9BiE9\8Fz\B0b\BC\DF\BF\84<*_\C9\C5\F1\8F\94w|:\E2\C3r\EA5\95\C3\A6\9D\F0\1B\0E\AB\86;\CB\0E\D3\F3\97\07,\B2\B2\A3f\B0I\1E\0A\F1\B1o\14\E8\1F\A7H4\83\EAy\88\C4k\1F^\C9\B7\C8\A45}\B9\9C\DB\18\C6\F9\F4\E4D[\B7\B4\1Ay\EC\8C\11Q\9FT\9F\1E\9C\C7Pn\E1Z\CE\A1\0B\F5\92\C4K\99\1D\DF\EC\CD\01\22\93\D5n\8ABr\AC\B3\12\DE\14\85\1CD.\C2\BF\DB\D6\E3\0ES\D9\CF=\1B+i\F1{\D6\BE\19\\\00{\C7?V\06\FBr\01\D8o\AE\E5ga\A2\94\CB\1C_\1C\DB\C8>\D3\1B>\0B\\\DF\E5\8B\A4\B8\C38\E29\F18\9A\02\DA\0F}\CB\BA2\CF\ED{/5\\l\0B\D0\85\FB\F9\DD\C2\18s/?\F18=,\13\A7\E65\98\C3\D3\11KPg\1E`*;-=\D8\C7s5u]n\F7]aa@\EC\FCU\FE\8A\DBx\F0\03\CB\D6\BFoY\B6\9FEI;;\A4Fa\FE\16wz'\07\8F\FF\CB\AF\0A.\7F\8F\C6?V6\FB0\C5\D2\BB\E6:6\90\1C\D3\E2~P\CA\B9\B0Dv\0F\E3r\AE\D7v\A6~\C8\FDr2[=%\1F;}\14\E7\22\16\1A\C4\88\C4\17\DD\C5\B6\A8\BF\1BV\88kX\12\B3\19[x\91\93\C3\EE\1C\90\C7\AE\F8\D0poK\1E\B3I\FE\AA\FB\ECN\E7\\\17ip\9F\B0\F7\FDf\93a\DC*t\C5\04\CB\92K\F3\10\E6\F0sK\97\BA\E8\84>\DCi\B3\B7G\A3\A6\9C%\D9\8Fr\AC\0B.~O\E6e\B4<\E7\B3y\D2&|{5:\8C\FFx\DE\A5er\B0\E4\9A\22\F6\B6\09\\\7F\C0\17\BD\D2P\0F\DA\9F.\99I8\D2\F5\9EYL\83\94!\1F\ED\F2\98\09\C4l\1ES\CA\BF\0D\EBa&\1E%\A5\85\B4\916\D2F\1A\06\C2J\9B\8F\B9\0C0\08\B5\CE\CAcGh\92\ED.|\17\F9k\BA\D4\0D\BE\B9\95d\86[0\9D\EE\1AS\19^\8F\1B\A2\96]j\19\A6%2gX\E9(vI\B9\16{\EAr\96\A6}\D1#\EAF\A6\C3\F4*g\D93y\F9\F2\F9\22 \D9\B4\F2\D5L\89\B0\A11\9B\DA\EE\91\EA\AE\ED\B4\9F5\BDi\B1\14\0E\08o\FC\11\ED\BAT\C0\C0\BD\A7\ECM\8A\C5\D5^\E9\19\E8\95\EF\C9L\19\F2Q\9F-\09\8D\80\1F}\96\AE:$\7F\7FZ[\EC\DA\CB\FD2M\D6\9B>\D5\11Y*_\CAX\E9`\A4\FA\C2\7F\\\14\E4\09z\E5\B1\1B^\07:0\DD|\B5\B1\8C\94\09\F2\8F\1C2\BD{\AB\CC\90g\A5w`\AA\04\B8\17w\86\CB\DA\88,\1C\D1\C4f\D6\91\9En\B6 \C9\D1\DA\1F\C9n\8F\B4,\B72J\0Dj\19r\8Ch\89x\BDA\95\98q\8D\13' \F1\983'\0F\16\DC\B6\D9g|\A8\8B\A2\9A\22\F2\B7\E9]\B7k\A2\CE\82>YG^\D0\F5\\\EE\E3\CD@\EE\CD\D4\C9iY!\1F\BA\8F\F8\04\E0\9E\A2d\C0\09\B0\90\0C\93\851>\D9N\F9D\CE\0E\84u\D3(bc\A0E\1E;\E1!\9E1\8A\01Z\C8\F3\B22\C6\9B\B7\CA\13RU\CB\10\DC\CE\85^\88\8C\1F\FBC\14\91\99\B5\C5\D1?\11\E5\EE\88\DA\FEH%\FD|\CBr\EB\A3\D45\D2i\D3+\15\FA\BDy\FB\F2\F9$ \B94\F6\C9\\)l\C5\7F\BEo\18\A7\AFJ\9A\AB\D2\FE&\A6\88\BD\07\A4f\E0\FA\F5\BEYM\DE\EF \CBeg\12\8E\E5\D2!V\B0\1F\BF\E13G\C6\C0\10\7F5*#\90r\B5\9B,\89\9B\F2o\90\07\A4\B6\AEp\BE\8Fryt\22\DB\AA\EF\A8\06\CB\AC\B8\DF\9B%\8FI\F1\80\B7\B8\F3\11o\EE\B2\A8\A7\B5SR4ua8Y\9B\10\B5\FD\13\22\E4\A2\D1\FA\C9\0AVJ\EB\BB<\D2\9A\C54\DFM\97\EE20tl\0F~\C9)\86k'\C43b\9E\F5\C9l\19i\BD\A8\07\DA\95#O\9BytW\0E\B3\EB\DEG\81\AB\DB}#\C6\B9:\A9\CA\F3\ABS\88|\\\ECP\9Bw\FB\C9\C16\8D\CF\91\02\F2p\98\1DIl\1C\95\D7\A5\86\D6\A49l\CC\8F\8F\EDE!\AB\9C\F8\B1*\10\CA\E1(\E78\DC\13},?\95U\AC\A9\DDQZ\F4bX\B9uq\87Z\7F)J\B9]\16o\AFl\A9\B4\F6F\85>(\D67. \DF\C7\FC\A29rm\EC\D1\B2\D7\17\EA\C3\A8\06\03\0D\E4\0EyT\DA'e\D1, sM\FD\D75p\FDIE@|\8Db\F9Y#\A3\9A\F4\FA\06\B7!\85\E4\93\B0)\BD@^\91\9B\A4\97\B4\93\1E\D2C.\90\BB\E4=K\E1V\96<-\E55%r\1E;\A1\AB\CC\B1x\E2Z\F9X\EE\97\C1\D2Cz\C8Ir\9A\\#\CF\C9/a\A1\1C\8E\04\0C\18\0F9l\B8W\C1\B2\9E\93-J\1E\88\BA3(fZ\E8\ED\DAo\0C6R4\AA\1D\D3~\8B\B7[\F35\DE\C4\17\9B\1C\EB+w\8AkS\B0>\9E\11s\A1\0Ff\CBs\FEp\98\EBh\B2\C6\FA-p\F5\A0O\F2\CA+\02b\0D'#\C5es\82?\1A\D5\84\C3i\F2\9E\C94\F0Yi\18\A5\DA5d\A8|!G\C2&\FF6\B9(\CF\1DPB^1M\01\11\919r\9B\16\E3'\E2(/7\85\F1*c\03\E1\F6\9C\F5\0E\B1\E6\18\06F\94\8B\EEEz\91\A1T\BF\B8\83N\0F\8EZ\EAH\C4\BB\CF\F7Q\F2\A8\F4\A8\BCX\E8h\16\17\01Y\14\AF\E1\85\B7h\EC\03w\B9\E0\F1\81\A9\FF:\FB'6\96\22 \D1tg[\1Cm\B7O\224\CCDn3\0C\C4\19R7f\D5+\CBhY\1E\B6\00L\D6\D4\DBq\1D\9DdY\18\1F\F3\96\B4\8ByW!\B9\D9\E4\8B;*`}\E2\A4\13\95u\1A\D6ma\06\B2i6\B5\FC\DEP\EE\7F\B6\ED1\06N\9Af\A3<N\0B\13\A1l\B6,\E7\8D\0A\BD}<_\FB\B10\FE1\12;\E4\F4x\C6\CDr\CFg\CB\14\FFd\BD\A8f\CA\A1>Y\E3A*(\02\E2S\F4s\B8\DD\FB)\E1}\A3\FA\22\AD\0C\DE\AD\AF\1A\AD\ABbHa/\96\15a\D6Y}\E2\BCw\94iA\C9\967\A4Z\DC\DDV\DF`\C4\98#\E78\9DZ\E7\AE(\EF}7l/ag-\A4\F3D_\DB\B6\E5\ABP\B9Z\B6)\98\CC\B1}\DE\CBW\02,\B7p{|_-S\EA\86\8EM\A1XQ\FA\B5\C2\F1~\FF\DA\9E\CE\96\EE\FEJ\9C\F4\B0a\16\E5JS/M)\14\01\89\8D\0F\1Do\F9E\DE7\EA\0F\E4\E7\D0 |'\8F\E6\87\85\E4\1A\D9j\22\05\A3c>\A1\A0\BCb\22;\D3\A2\0A\AD\A2\1D%e\BA\81h\D5\14\8E8(\C6\EA\13\F5\BD\FD\0D\A5\8A\DB\D6pl\A8\DC\96\18vh\1A\EC\0Da\8B\C5U?oT\E8\EF\E7}\D8\E7\D3\8C7p\F4\F3p\AE\A41\DB_\04\A4\92\C9\9C\F7]-\93c!E@|\88\B4\BCDkH\15E\FA\A9H/\83\DA\BCh>\1AQ^>4\11\84\8F%\C3\A6t)\99j\B2`\BF>_\16\F3\C5dv\E8\19\13\05\89\91=0q5z`b\96\09\95\CA\B4\AD\DF\AA\A0\7F~\ED\98-\A9\15\1CZ+lK\E9\EF-\15\E1\EA\E8\B5\0A\FD\C7$\13\90a\1E\CE\96\F3\FCE>\10\E4U\93aI\A5\C0\D5A\8A\80\F8\10\0D]h\F9b\AF\1B5\9E\D0\F2\9F+'\E5\BB!\FDCb\89\00OQ,J\B9\E22\D3P\EEO-\BBs>\8E\8A\B21\C4\F5T\13v;\E8\DC\1F\DD\F0\F6\E5P\99\8A1\EA\17\C8\E010f;\02\09#N\8BQJ\97j\BF\12\B7Qp\B2\B08\C9\04d\ACgs\A5`~\DA\EA\F6Q\D7$\0C\1E\11\B8:U\11\10\1Fb\B0\0B-\CF\A5\B4\9BU.\10\E3\F7\92\9CY<$\99\F92F\DCp;L\A6\AD!T\FDiL\09O\13\0D@Q&\D2%\F4\D7\E7\9Cb\13\E6)\16\B6rM\F0,\9D\F3\A1\B4\83\F1\B1\A2'\92\1A\1E2\1A\8E\A5\B6\0F8\1F\C6\F6\95og(\1D\1D\85C\FC\E2\B0|\D4\DA]T>\C6\DF\A7\E32\1A\F9oUZ\C9\17\86\BF.\09\FC\D7\C3\D7Y\1C\8FW\B8\F1M\D2\A8\E1%\01\E9F\B1\FE\14\0F\09\B3\13\C1\06N5X\95u\E7\AB\08\12R\90O\E8\11\FA\EBq\06r0\A17NaC\F0\AC'@\AF$\10\904^\0FvW,)\F3\00\CA\C4M@J\C7t\87\0C\BC-\83\D7m\22\11\CFM\9D\99\94\15\FC\FFP~n\F6*\8Be\86\87\BC\8F-^0\9C\B7\A1I`\DE_\A2\D6k\DF\A1l\0A=5N\02r2!\8E`\1F_&\F8\B2C\\fHt\DE\95qa\AB\DD#\06\FD\E7\1D\DC\96p\CE\C9\DCPt\BD\93B\FF\B8L@\A0\0E\F7\C6E@2\18D\01Z\C7|W[\0Ap\91%\BB\16I@\EE\B7\0DW\ED\15\01\D9\93\F7[\02q\FC\0F\F3Y~\DE\B7\DB\A3v^Gu\7F\AEK3Yg\F8\EB\E2\C0\7F\E7\AB\F5\DAw(\E3\CAS=\0D^\F3-2-(=\FD\C1!\A9\DCX\83Dv\B4\E1\FA\B9\06\A7\C1\FB\1Dz\D7\B0\D0\13+I~\16\B2(\A8d\FB\D6\1C:\01Mc\D6\EEwN\88\AB\15\8D-r\1B\86\1FM\80\F6d\DB\96\F1J\B43??\E1k\CE\97\FFI\8B\FC}\F5\D1\9E\B4\B2\98\C3.`\8E\1E\8F\99\FC\F9\83q\B8\BC\CD\8D\A1t \91x\D9\95\B6\F7\F1\92\03\A9C(\C0\E9\12\87^y_p\8B\0E\F0 }\83g\0Dy+\C4\8F<\CB\DD\0E\BDkU\E8\AC\22\94\A2\A4C\8F\DD\125\FEm\A0O\C7Q$\0EC\C9\F6\0C\8D\EBm\97\C5!\E8*Da\DE\B0In\05\EB\D8\EC\D1\B4\D8\9E\1F)\D4'\DC\C3\FC\FC\BDo\87'\AD\1C\EE\91\8D[\1E8\BA\00\AA\D11pr\AE\DA\F2\FB\0C{\\y\EA^/\09H\11]'\B9\CA\B1\97\DE\17\D2\85\14\E0\1D*\02\05x7\14\05\EF\07nq\ECMY\A1\B3\A2\A1\7F\\\17b\C1\09\8C\8E\CB\D2\FE\86\B8\DEus\1Ce\0As\07MmK\CC\F3lZ$[t6\C7\836\16e\94\9FW\A6\BFYh\F8\ABg\E0\BF\FEj\C5\F6\19\B6\A4\D0S\E3$ \05\E0p\9CE\F3\C6\BF\CE\0E\9E\95\E3)`XHA\B1\9E\0B\C9q\EC=\FA\A6p\1B\E0\E0\83c-\8Aw\C5\A5q\89/\C0J<\A5Z3&F\89?=\9B\16\BF$\F5m\FB,2\AE\B8\8F+\A9\EA\EF\B5\E9c\C3y\D0\9A\E4\A4\14\CA\D0w|\E0?\17\9Ey0j\BA\B9d\11\90C\C6=\BCC8\C4\80\10a\1C\CC%<\18<\CF\E1\82\C0R\EF\10*\19\C9\F0Q\07\D5\AB\B1\08HA\83\B5@2\F0HL2\E3\1D\07\F2KR\ED\A2f;\B8M\88\17E\B8\DD\D5\E7\FF\90\F8#\8C\8E\1Fm(\07\90\EEZ\E2g\85\FCa\81\0B\CF\\\98\B0-RB\04d\03\EC\0C\9E:\1B\19x##B\E7\EF\84,\CD^\E6WG\DF\12\94\F6\B2\93,X\E1`W\C6\16\CB\94N\EA\D0\8B\FD6\EF\08\C8\F6\A4\F2 \93<h\E1\A5\AE\DA_\BD\C5\B4\C4\1F2\CF\904&]sV\EA\A9\D6l_a\13\FF:\FE\CC\EF\DD\ADr,\02\B2@\97}\9C\E4\F0\AB\C7\87\92h\A4\85\B8\84\BB\1Dn\9C\E6\FA\F13\C0,\07\1F\BD%\E4b\92\1AX\EF\99\0A\1D\CC\8E\08\EEboXH\CB\E4\C0\CDD\B1_0\CC\C0H\E7\1B9\CC0\FC\15\A4\1C]\D4\9A\ED3|\E5\F8\13\BFt\B7\C2q\10\10\CD\FB\BC6\CD\1D~\F9\0D\1C0\FD}\AB\C3&\FC=C:\90o\9D& )\E5\96\E7ym'$\8D\DC\BE\C3\BE\A4\B7\EET\9A\B9\F6\ECO\19D\B63\FA\95\E9\86\F3\E0\C6\AA\A1\D2\82\F8\0C\1F8\FC\BC\E5\09\04\0Fq\84\80\FCh\14\C0^\E9\F0\CB\D72\CE\F0\D7\0A\93\B1\A1\13\B8#\F8\7F._C\8Ei\06)\02\92Ld\F3XR\DEs\D0\C1\90\99\F1\E3:\D7\9E\FC\22\838\02\CE\04H\F9\D1p^=\105#\CDq\B1\82Bb\F8' ,q\0C/\BB\AB\01\89\07\F3\91?\82.H{\A5\8A\C3N.5\0D\99\0B\AFu\F8\D9=CO\9E \88\E3\B2\F1\BE\FEu\1B\B38\FAz<\8A\0A\F0K\12Zy\93\07-\ABb\CE?\98.g\CB}r\A5\96\C29\91 x\F7\06\DF\90\1659r\1E\9D3\B7\18\DC\09\CF\F1:\F0\A4r$\B4Fo\07[\BD5\C9\9AXK\8CF\86\87\86\DD8\C7?\ED\C7!\E2T\CC\D1\E7\16\97\95\A1Z\B7\11\C4\10d\CB\19TN)\02R\D9\F3q\D4\88\83.\B7q\A6\A3\96\E6\F1\E2.s*\82Y\C11\B7UNN\A4-G\B9\22\F4\86\13\9C\EA\A1/\0D\04\E4\81\C0\B5o\14\01\F1\1D\A6:\D6\EAk\FD\D0\9C\0A\EC\CD\905\A1\FC~=\1D\FE\B4O\04\9F\BC\C1\E1\E7\BE\18\9A*_\0A\C2|\9B \83\F9\C5\FA\94!\1F\EB}11\86\90\EBb\1B7z\94\89\D0\14\A8\E5e\C3\12\BD\D66\EB\8D\ED\B1\C3d`;\D4\A9>z\C8P\BBo\02\D7v\B90/\14\01I\0C\8D\9D\E18\F9\83\82\EEW6\F6+\B6\F1T\D6\D8;\82\DA\9D\02\BCK+69X\01\09\F1\E9Nbh\88\F8\1E\08\98\C8\DC\E4\82/\C2\\\AA)\0DH\1E\F0.\E5yB\FF\D0gr\86m\EC\15{\EC\E1u\96\E9\7Fn\A57\AB=hS\0D\B3e\89\1649\87tj\D0&\7Fv\1B\0B9\8B\15\86\BFOqN\C0\AE\A3m\E0\BF24t,F\91\823X\CC(^J\F8)\FB\19L\B6?\1AT\8A-i\F2Sh\EF2OJ\B9\10\E6m\93\83\CF\ECf\C8\E0~\A3 \8E\DB6\04p_\CAp \F7\F9fr\0C!+P\A7A\92(vHE=\EB\9AW\81\01M\9A\B0\02\B2_DrD\82aA\FB\E6\E7[}\11\16\B1\AD\80sA\1A\9B\9A\FA\AFF\E0\EA\C5\8A\03\F1\1D\D2x'\C1\F6\E6009U\8DGj\BC\97\AB\85\8BC1\EAZ11\94!\C4\8F\1CH\17&\87\DC\B2\BF\E6\05\D8\E2R\9C\A2\ED)3 \FDS\D3w9\89\BF\C1\89H~e950\80\C6\D1\D6\C8\8C$\15\B5\8C\7F\E4\F2KpJ\A5\01\87\F2\1E\94+\87{87\CC\10\B9\B3sA\1A\17\87\C2\12\01\B4\09\FC\D7\08\05\BF\A1\89y\\\E5\03\B9\9C\9A\1C\05z|R\B2/xg\FD\A5\9711(r\E8\C6\F7\F45x\B6\FA\89\80tc\12%\82\E7\8B\B8\88\DC\1C\06;*s\D3\91\B0_I\11*R\862\94\A14\C5\80tJ\01{\C9\01\0E\B2\9B\DD\ECa7[M\D3>_\98\E9\A3\C9\B1\80\8B\98K\C6\82\84\B7H\B9\81\00\81\BFp\1DG\FC\D2\B8\9B\F8=\C4@\8Cak\DEn\DE\C8`~\8A\B8z\99s\B5\CBf1-B\7F\B5d\22@C\B5^\FB\0A\05\B9\8B;\E2\8C\92g\F7\94\EB8\9B\E1.8&\E6\8B\80\C0\8D\B4\F9\B2\E9\8D\BC\18\FC\B3#\BFr\16K\1D\A8\80\16i\EB\A8#\CD\B9\987B}\BF\85\FE\EC\81\B1ND\12\8A\B2\A1\CB#\0AQ\9B\864\A2\015\A8A\E5\B8\B7\96[\D9\C4z\D6\B1\94%,cU^E\9B\92\F7\9A\BA\88\AA|O\06<F\F9\04u \8F\07b\CFu\E1\1D.\F2,\0Ba\96\F9\CFE\B4`\0C\ADY\C3\9Byu\01\9E\CE`\8Bh\01\99\CE&~\FA\C7@@\EA\06\FEk\80\82\9Ff\C7x\C7\E2\03Tc\0AO0\C6/\9A\90\DAl6'\83\DA%\17\E4K>WJ\EAH;\E9-\03e\A0\0C\96\87$GDD\A6J\7F\E9,'HE-\DDM\9E\8Fty\C4\90\92j\9B4\15\847\\\B52\F9'\9Ez\95\90Se\84\BC%\7F\19|^\12\C1a\99'o\CA\8Dr\8A\14\8F\AFg\E6\FBh\82\14\E17\17$\DC\B7{\D6\9E\01\8E\D4\FF\10\B7F\11&\8Fq\B6\A7\EE5\8C\A3\99\81k\FB<\B2\C3R:\90H\B4c\B3\E3-\9F\EER\9E\C3|\A0={\90[\0D\8B\B4\C8\87\92\19\C7\C2\DEH\06\CA=\F2\A6\FC +\0C\EA\ED\E8\D8$\B3e\BC<*\C3\A4\83\94\88\B3\A3\AA\CA\0F\86'l\09d\B3\9B\E8\B2!\9B\ED\F4\AE$\E7\C93\F2\A7\1C\15\B7pT\FE\90\A7e\80\AEL\B6>\EE\F0\D1\14y\CC\95\E5!;\8E\94[\EE\A0\8D\03\B5_\105FP&\DB\9C\ED\A9\ABL\99\09\83W\AB(\02\E2\0B\F4f\9F+m_\E0\9FT\03\1D\D8\8D\\&\87L\C3\F0\BC(\15\AF&\17\CA\0B\F2\87\1CHh\91\CC\91e\F2\89\8C\90\D6\B6\9C\C9\C5\B2\D3p\CF\12\A9'\08\93\1D\8D@o\85J\EC\B0\22\98m\E4^\F93\C8Y%\07\0B\E5\11\E9!\85\AD\FAf\BB\8F2\E55\E2\B0K\0B\C4o\1E\ED\A33\13\AE\F93\14\89\FA\F4\17\9D\EE\A7>\861\93+E\03WOU\04\C4\07\E8g\8Eh\E0\E8\B1\DC?\0E\07\ED\D9\8At\92\8D\A6\E5\EB'ik\A8nQ\E9+\AF\19\FC\C0\9D\C2\1E\F9R\86K\D5\88\EE\A9,\13\C3jSN\10\DE\8B+'`\A2\B8\CCX\93\0C9G\DE\97\DDqpX3\E5cyZF\CAE\D2[:Hc\A9,\99\92)i\C1\90\13\99\92)\95\A5\B1t\90\DE2Xn\91\A7e\BC\CC\92\CD1\9F\BB[\DE\97s\C2\DD\D7\86\F8h\92|\E1\E2\12q\A1GmZ\9A@\9D\F7p\9E\CD\93\9Bp\D4\E9^jf\1A/\8D\03W\AFR\04\C4s\9C\AE\99\B7\BBt,\F2\CF6\B2\1EK\90\F22\C14\14s\E5EA\0A\C9\B9\F2\99\ECsu\AF\9D+\BF\CB\ADR9\D81\85e\A4\EC2\FD\FA\B8\14\14\84\C7\92\16\D6\E2)mj\8E\97\FD\B6D\E3\1ByX.\92\B6\09x\D1\94\96\B6r\91<,\DF\C8&\9B7\ED\97\F1\D2L\BB\E7I\1FM\92\8A\CE/\88\86c\9AG\ADz=\DF5^fk\01U\98\DF\9D\EF\A5L\D3H\E9\13\B8\FA\98\22 \1E\A3%\FB]\EF\819d\F8\A5\B9\99|\8E C\C2\F6\DA\EF\9B\82\B5\85\E3\88,\97\1F\E4M\19+W\CB\00\E9*\CD\A5\AE\D4\95\CC\E0Q]\EAJc\E9$\FD\E42\19%\CF\C9d\99/{l\9F\F6\85\9C)\03d\89\E9\EAF\E9\17PI&s\D7]\80qH\A6\EC\88\A2\F0\FEE\1E\95~!\82\E7\DCQY\FA\CBc\F2K\14\9D\D2\8E\80n\EAu\CF\02UXa\84\AB\13$\C7#6\FD\F4|\8B\15j\D8>\F7\19w\FA\C9\B8\BD\BB.p\ED\13E@<E%\D6$\A5\0F>vc5\C8\8F\92y\17\E7r\1DO\BC[t:\8Fra\A8V\83-\8Af\F1\07sX\C0\02\FE\B35\D4\B5\F6)\A9Es\9A\D3\8AN\11z\BEB\9C\CD\D9a\D7>\E4\06v\C2\12\06'5tG.\C3\A0\D5\D0\B2\A6\8B\C2|\A62\95\DFBf\CANc3\93\99\0Cd\D0\91^\F4\A2\B9it\94\A5\15\D3_\E7j\CF\CC[\ADp\8E\CB\84\FC,\07\02@\E4\1D?\B0\9C\FAy\BEk-\DDYg\F3\FBy\86\84\9D\8Eb\83\C1s\B0\B6\B6\80y\81\F4\22\0C\A1l\12^\B4\93w9\9C\8E_\91\CE'\81\D8\FA\AE\E3\02\E6\F2\B8\D3\0F\CD?Mj\C9\87\9C\00\03x\CDb\18d3\83\EF\98\C9\9F\0E\F9x5\A0\0B\DD9#\EA\80\DB\CCu|\0E\F0\1A#\C3\B2T%\85\0B\A95\FE\DF\F3\02\EE\8B\87\F9\81\09|\9D\F4\04\80U8\83s\E9\11\F4\82\D9O\B3OV_\E8}.\00\E3H\AB\B9\F7\EE\12\B5]\A3\E2?\F2\D4\9BG\86z\D2\B2\01|\96\C7;\0E\D2\85\BFl~o\CB\8F!oX\C7\E9]\F7\D0\F9;\01/\C5\C5\0Eg\AB\8E\0F_<x\F6\98$\BD\EA!\EE\FC\C2\81\D0\07\EE\E0.\EEO\DA\BB\8E\D2\85?\FC\D3\F4\22\DC\9D\9E\B54Bh\F3\B9\\,e]a\C2\0AJWy:L\81/\22\F2A@\AF\B0\8D\B3<\EB\8B\A2=\16}.\1F\C9\C5R\DA\D3\A8W\A5\E5b\F9H>\97\1E\0Bml{<A\E9\CC\7F\\\B6D{a\99g\8D\FB8\8F\DFi\90\ED\D3\EA\BB\E0\0D\10:>7\F4\D8\E4\C0\B5\9D\1E\F4Xu\0E=\924\1B\C5G\84\C3\09\07\07q\07\ED\\\B4\BD\B2:\16S\CC/\1C\08\00\17\9D\FB\C1\04\FD\AFE\8C\E3=\B6\B9\DC\E7\059\83+\E9c\90\BE\DD\C5\83\C2;\DC\E6\FA\AB\ED\D0\82\B9\F8\85Q\CE\A6\B5)\F4\AA\1Ff\CAe\7F\BC\E5\EE\1B~\CE\EEZ*\DC3<Y\DB\07&ii\C6\E3\C0\CB\B6y\1A\AA1\93:\EEU\F5m.\0D\9D\FFJg\00\A1h\D2\83\C1|\C2\C0\0C\AEL\8A\DAj\03\E3\C8\82O\9D\F5\E9wh)\9B\EBx\9E\F0Xx\C4W~a\E5N\D08\90\D9\D27h\86\9A\9C\A3\AE\8C\0Bzv\E7J\CF5\81\99\E01\9E\F7M\F4\DD\E7\FD\B7\D5*0\CEm\0Ed\AC\98\B2h$\17\E9\DC\13\A7%\CD\1C[\EF\A4\1A,swl<o\E8\B1\C5\DA\D5\EAI\EE\AD\1E\9E\CC\8A\1E\BE\9B\14#=\E8\85\C3\CE\0A,\13\D5\CB7\AC\B3\E4n\8A\F1&\DF\C5xM5jS\9BZT\A7\22\E5(K92(\10\0A\18\99\C5!r\D8\C1Nv\B0\83\8D\ACa5kX\15#\8C`Mn\A0\11\EF0\E1A\EE\F2\C1p(\C1|\EAB%\9AyT\81\7F\D8\02\B0\92\16\EC\F7\DDd\F9\AC\C6\80{\\\CB\F9\94\CB\8F<A\F6\F9|\EAa\0B+1\88\D3iHI\8A\B0\9F\1D\08\AD\22\CAl\A4=\1Bl\06\F4t\EA\B9[\C9\07\D15\0F\DB4\E7\80\B6I5;)\CC\DF\9Eh]\96\D1,\F1\B8\A4\0E\A2\0AK\C2B\F7'\07\D3\9C\DCh%\1C\EAc\95!\F7f\E4\C3[\D2\86\964\A7Y\8C\9E\CA \03(\1F!\89Y\CA?\CC\E7o~e\8F\C5]k\B9\D5OK\E4~.aF\EF\F4\CF=3\B8\CE\E2\\\BE\CD\E5\0A\1F\92\0F(\B6\CE}\8F5o-\DD\B7\F0,\CF\1A\FE.\C5\FA\B0a\BF\86~6\E4\A3\1E\D3\DD\B7\C71\C6\8A\CF$-`\A6\97\\'\B3\9B3N\B8.b\AE\BB\8D\ED\BC\D8 k\84G>/\D6\B8\C3\13\F2\01=\E8\CEt\BFtBC+6\A9\80\9C$w\CBT\D9\EB\98x\22G\FE\96\E7d\80\94\B4f\CB\1E\F0\CD\A0xi\96x\89Y\C2\0B\F8\13o'\81=\EF\ED\B36\0F\0F\0Bkg\B7P7`]2D\18\D7\9A\C6K\99\C0\D5\CB\92\D6#\A73\83\9C\FFy27\FE'\E40\C3C1\A7\19\D5]\F6=\B7;f9\D7\0C\87\83\0D\16\A6\07g\D1\9F\CA\0E\F7v\01Z\D0\82\1B8\CCt&1)\E9F\B2q\E3/oSS\1C\81y>\ED\99d\C4\04^\E0\B36\BF\CA>\06P\91\03,b\92E\AE\0F\E3F\EC\C7\E4\84\BC3g\AB*\CBn\80\0AI\EA\8F\1AL\A1\08\1C\F4\E4c\1C\84\02\9C\CC\14\1A\D8z\E0$\8F\FF(\EA\D9\BB;s:\DF\FB\8E\80\9C\C8P.\891\16\B3\D9\C0fv\B0\83\9D\1Cb\9F!T})\0A\05u#\E5\A8\155\E3a\11\FA\D0\87\17\F8\9Aq|\E3\97@\F7F\D4\BE\93\C9Ig\CFu6\FDN\DC\B4\E0I\08S]\7F\C3\7Fl\F4]\AB?\E4\C3\B8\16\D6\A9\C9\8A\98\BA'\8C\80\AC\04\1CL0j\8F\B6\01\E3\F2\C7Y\93$\DF9\1Dk5\87\FB\22\B4\F5\01\01)c0\86\F3\02#|F@\FA2:j\1E\94\9D\CCg\01\FF\B0\8C5l\88s\D1\AF@-j\D3\94\E6\B4\A0N\84\A6\BF \FD\E9\CFF\9E\E7\C5\B0\1D\95\E7h\F5\1B5h\E4r\14yk\1Cb\05\87\B0P\DC\FA\03\FF\F17-]\16\92\A5&*\F1\BDk\D6\05\11\C8\0A\DB\90\018\ED\1B\10k\B5\C9\E1#/\FB\BB\A0\0F\BE\F9\E5I#\DA\D6\E8C=V\F8a\F07D\CE\92?-e\8E\8Be\9C\0C\91\BA\0E8\C7\F5\91\87d\A6)\88\BC\1E\F3\E9n)\ED'\1D\C8f\CFMx}+\DD\A3\0CS]ku.\F7&-|\A6\B3(\CE\DF\C9\1C\1F=L\F3\A7k\E0j\B2\F4f\03}a\E4>\D0\F3o\9E\E6\B6\B1v\1C\C7\13\FE\18\FE\0D_\B3Hs\F4\83\8C\90\DA\8E7\B9\84\0C\90we{\C4\FB\D6H\93g|\B2\18\9C\E8\8B\09\E2\DF,\D7\05y\CC\15\CF\DB\0D\F4KQ\EE#\8D\8F\92;:N3\CD\9D\1E\81\ABo(\02\92Tt\F6A/l\F2\85\DB\F3\15\1DsM\03\F2_\B9Y\CA\BB\DA\F0\82\D2O&\86e\F9{\E3{_,\06\ED\D8\EE\8B\09b\8C\97\E7?\D4g<9\0E\B6v\17c\92&\82q\1E\B7%{tt\B3\0A\E8\FE\B1\22 I\C5\D3\BE\E8\87\AEN4%A\B6\7F\ED!\CD3'\97\CF\E9DS\9Ef\BB\AB}\9F\CD\14\CE\A6&\F7\19\22\F8\EE9\EC\8B\85\F1\CBF\E5\06\B8\ED\07\16\03\F5\18@\A3\AA|\EA\9F\D8\FF\11X\CE\05\D4\E5^V'\FC\A4\\~b\08\D5x\C8#\B3\9E\C4\D1\82\07\93\FDJs|\CD`\CE\B5\0C\14\92\C9u\0E\F0E=\1C\09\ED\92\A0Bi\DA\81\11<C!&\F0\00\FF\C6\D1s\95\A9I\F9\A0\ADU!JS\00(\C4Q`\1F\D9\ECb\07;\D8\C1&\D6\C6p\19\DD\C4\BD<\C5\F5\8C\A0\22_r\DF\BF\9E\7F\8Ct>:\BB\E2\A7\14\04\162\89I\FC\99\D4P\B8\05h\C7Y\F4\A7\09\90\CD\C0f\13o\E7^\1FO\A15\DC\C7}4\A3\17=iG\99<\DF\BF\8A_\F8\96\EF\D9\9A\D2\0BI\01^J\BEBW\14\01\F1^RQ\C3\17\F58\87\EB\BCO\F7\D0\10)\22\C5l\18\A5\0Ci+C\E5Y\F9N\96X\AA\C1\A3\E5\1D\DC \BF\C8;2JN\97J6OO\0F\B8\16z\AFD\BF\1E\F9\D9\D4\82\AD\F2\B1\\)u\\gD\EB\C8U2^\B6\99\DE\FD\B3\B0\D5C+\F3\BC\EE\C7\EA1\84W\F8\8D-d\DB\B44\8BU|\C3\A3\9CA\E61\B2\90\\\ED\85\E0\A2\8Bi\A4\0C\0A\\\FDE\89\B0\92\88;|\133\AF\89\E7\1C\08\10\85W\A8\CA\C9t\E1\14\9A\E4KW\93FU\AA\D2)\C4o\FC\C2Lf\F0\0F9a\E5r\FCa\C6[\90Q\B0\C3t\A9\02\17p\01\B0\8E\DF\F8\8D\D9\FC\EDhj\A9\0CZ\D2\81\8Et\B4\8C\83\B7\03*\D0\C1\D6q-9\C8\04\0A\07\0D\16\03\CB~1\8A\90N)2)I)JR\85\1A\D4\8CkGV\94\DA\D4\A67\B7\B1\91\95\ACd\13\FB\D8\CB>\F6\B27\C8\C0\C2\91`.\98]\86s\BF\A2d\F2\C5W\8A\03\F1\05\BA\FB\A8&\0B}@@\22\85)g\D3\9F\13\1D|f\15\CE\E3<`\17_1\89\A9~\F3\FD\80\93\A8\05\A39\D1B{]\83\1A\9C\0Fd\B3\8C\05\CCg\09+X\9E\AF\B5\AD\04\F5\A8GcZ\D0\9C\066dy\09\A3\01Z%\9D\80\14\A7=-iHm\CAR\96L\CA\BA\94P\B7*U\A3:\1D\99w6\BB\D8\C9N\B6\B3\8C\A5\FC\CEB_%\D8\BA:)\E9\F8\22`\A9\03I\9A\11B\19\FE\E7x\94\8A\BC`3\F7\04|\EF\BDC\E1\D0\BE\D8{tK<n\B7\A3\04\A4\09C\19\14\91~\D6\1A\FB\D8\CBa\E0 G(\03\A4Q&\A8\13\B1\DB\D0^\CC\C5\1C\E6;\DE\E0+?\F9\A1\9F\06\B0\94\13h\CB\D9\F4\A7\A9eG\9F\C0\09\\\10\1A\C8k\D8\CC\066\B3\8D=\ECa\0F\87\0C[\E6\12\14\A2(\A5)Mi*R\89\EAT\A2V\1C\13\EF\DF\A0\F6E\80P\A0c\F7\91\CE)\0C\E0\14N\F0\85\8B\96\8E\22T6u\DAn\A6\F0\1C\7F\FADpw\AD7/\16\AB\E9\EF\D6w\EB\C7\A3\A6/Px$7x\DC\F1\BB\B9\E7-^5\D1\94\DB\99\92\C4\0A\B4\F2\91\CD`G'\84/\0E\91\D5\8B\B9\8A\0EQ\7F\DF\CB?\AC`\15kX\C3\16v\B03J\06\9B\B2\94\A3<5\A9E-\EA\D0\D4R\B6Q\84~\F4c\13\EF\F0\92/\82\DAP\94\F3\B4\C99\879\DCI=zq\1A\DDl\84\F5\95\1D\DD\87\ED\E4G~`j ,\85\F5V\D3-\14\E2J\EELJ^ '\B6\BF\97p\09\DF2\D6\07i=OM\9E\EFy\F8L5\E2\88\15Uq\0Ae\19\1F.\1C[\E6y\C7/\83\E2&/\F0L\C6S=\89Y\19[\F8hFT\A6R \03\84\A7\04\A4(C\B9\DDr\A9\CFb\0E?3\8F\F9\AC\8Es\8C\EEd'\CB\F8\CD\F0u[\D0\82.t\89Xp\AB0\9A\91\BC\C5#\0E\D8\83&\881\E1\09@V\F0\12/\91Nk\BA\D0\89\8E\AE\AD\AF\EB\F9\8D\DF\98\C9<+jq#o\B9N_O\E0}Z\93Z\E8MO^\E0N\8FC\DE{\96\A1\DB\BC\A2\1Fvs\B3\D1 R\B7\F2\1E\8B<\0D\D6\B6\CA\8A\01\CD\A0\01\BF'\AD\0A\CD|5\1B\9A\E3\B1\0F]\C3^\B2\DE\C2\8A\EAo\F9\9Ft\96\C2\0EZ\0C4\94\E1\F2\95dE\BC\E9\88<%\05\1F\F4\B0\07J\B27V\DDk\C892V&\C8r\C9q \B0\FD2\F9L\EE\91\B3\A5z\AC>{\DA\E5\96\F7\E5\80o\ECI\F2z\AC\C9C\0AZ7\B0\C4\AB\96\9Fe\1AM\E7h\99\B2\DD\11\90\A4\CAh\E8\98\C4/\FF\B3\AFZ~\8B\C7\22\AC\D6E\C7\87\09\DB\FF\E5-\BE`\95\E3\FD\BE\94\A5\BCJ\09z1\9835\E5\1FP\88\9B\D9w\C2X/\85\11%\A1#\9D\F8\9D_\A3l\E5\D6\B1\8E/\82\DCZ}\EAS\9F\DAT\0F\EA6\0A\C5x\FC\11\B6\B2\9E-\ACg\15\CBY\1E\08\98h\8B\02t\E2$~\E5\B7K\19\E3b\8E\F0\0Bx/f\E5\FD\8B\9A|\C3\9D<\EA\91\1D|%\EF\C2\CD\14\B5\E2@\04\85d\A1\FE\B1U\9B\04\09\C8\C9\A5J\1B\04V\EF\F3\86\CB\BC\E0~&0\81\CA\0Ca8uu6\C8\CB\C8\96\E5`\10\1F\92\06l\E0S>a\B6\CD|<\C4\BFa\0E\97%)MiJQ\1C(Na\E00\07\81\03A\E5z^$-it\E0|\06R\0D\10.\CA\FC\B8\06K]jug\DEMa\F2\11\A0\B3\0FS\9Bk=\B1\CC\F2P\EC\A7\08\88\A7(H%_\D5\C7s\EDe\F9\9F\F6\8B\88\EC\97'\A5rR\99\AF\82r\A9,\11\11\91}\B9\8Fz\99e\AC\1B\F2\9DI,\B0V^\963m\9D+\9D?\8AI?yE\D6\9A\EA\F1\9D\D0\CE\B5a\B7)e\85W\E6\E3\0D\97L\8D\EDq\8Bw-\BE\DA4F\BA\04\AE.t\A5\95J\84\15\89\1A>k\F9\\\8F9\10\B6/\AC\FC\CF\B8\A5g}\\t[\92\E7`6\EF\F0>\FD\E8\B0\E8\E8\F5w{\99\E1w\01\07\D6\147\8F\91\AB\B9\9A,~b:3\99\EB\AA\B9qA\DAr\0A\DD\E8j\E1x\BEVX\EE\D2k\EF\F3\D4\98\DFI\\\C1\A7|\9B\F4\B7z\18\CABq \C7\F7\8E\DF\E9\FA$l\85u\DD~\06Q\99\87\B84\F9\F9\18r\FE\99x\CBD\AF#\F1\EE\E0\85;o\AFE\8F\B0\ADl\06}\E8\03\EC\E7W~c.s\1DM\97W\8D6\B4\A1#\9D\A2\E4\A5\11\A6q\EF\EF\86x\93\CE\A2\E614\A5\BDX\CC\ABz\D7\\E@<E\85c\AD>\CE\F8\81l\E6\0A\9Ef\14\83\C2\CC\CC\DD\C4\9F<\CE\84\88\D8&^\E0\7F[\BB\F6<\A9\16\03\B9\80\B6\11?\96\A0g\D0\E0g3\7F\B3\88%,eI\BE\88I5\1A\D2\90F\9C@K[\06`\0E\9F\F0)k\84Q\AE\B5x\1C\EE\0A\0D\F72\93\C9\FC\C5\D9\9CN+W\DD\13\B71\C9\83\11SJ\11\90\E3\14E|V\9F\02\14LLD\E2\DC\E4\FC\87K\19\C3\8D\\\E1zJ\F0l\BE\E6i\1FDz\D2p\90\BE|\B6\A6\EB\13<A=\CE\E5\0C\BAXvkez\D3;4q7\B0\815la\17\BB\D8\CD.\8E\92\1D\0A\D1R\92\82\14\22\93L\CA\90IejR\8Dj1\C7\DEQf\F15\9Fk\EE\84c\\\0C\91\F7\09m\B8-\E6W\DAcJ\C0\9DN)\A0 %#J\EE\E7({\C8b3\1BX\C3\7F\FC\17\0Az6\87;)I\1B\1A\D3\88\9AT\A6\12\19d\04m\0DL\AC({\81\A3&\8B\83\82\94\8E\E9\8D\7F\90s=\89\E8\EBa\EC)E@<\85\FF\0CO\8A\F8)\A4G`\A1\E8\C1\BB\ECwI\E9\B3\90\DB})\7FO\E7&\F6\E9Ix\07\CA[\B2J\92\85U\F2\A6\0C\94\D2z/\ED\E3\0A\D7[|}\C47\DE\CBT\EE\E1<ZP5\8E\8C\CF\01\0A\99\DF\A5\B4\14\99q\85\81\CF\A46\9D\B9\9C\E7\98\1B\11\EBw\89\CB9\DA\A3c\AAwj\D3\97L#'\98\FCm\96+\ADl\9A2J\F4\A6I\FB\F2\97\FA\AE\EDe\12k\90[6(\A58\9D^\F4rLZ~\80\9F\F8\96o\FC\91\08>*;\D8\8D!\F4\D1\E5\8A59\95S\E8D#W\B2G\E6\B0\98_\99\C1\CFF\87\F3m|\C3\BB\FC\98\14\E3\D4\0A\0C\E5T\AAR\98\F5\CCa*\BFr\D4\D7\BB\BFr\F4\A0'\8D\A8\CC.\16\F1\15\9Fy&\00=\9B\09^ep\1Fi\088$\0CB@\18\CCG.\BC*\8D\1F\E8\96\02\\\C1\8F\9C\964\1E\ECJ^\F7Y\EB+'\16\CC\C4m#\C6\13\E9L{\DAsb>\85e\EB\99\C3\1Cf\F3+\87I\0D\A4\D1\86\DE\F4\E6$\BD\C5\C5iI\1BZs\22\0D\13\8Eq\B8\87\A5\FC\C7<\E6\F2\B71\A6o6\B3\99\CA\B7\CCU\E2\88\94@\B3\A4z?\DBc\0E\7F\B9\F4\E4\C2\9C\E5\FB\EC-\BB\98\14%0\9F\1B\B8\96\17}\D6\FE\9A\89\05<J\96\15|qN\A4\01\0DhH\1D*S1\AA\88\E3(\DB\D9\C6\1A\96\B2\8Ce\FC\C7\E6\94]\22\CAp\1A\A7\D2\85\E6f\F6\A3\0A\8D\A8G\0D\AAS\8D\1A\94#\D3V\B7q\98]\EC`-\1BX\CF:V\B28\BCCr\98\CF,~f\BA\D7Q\AA\15\14\14b\E2j\1E\F2Y\8D\DA$\166$\CD\A3j\17\A3\02\A5(\1CL7\14P\7F\EEbOXV\A6c\01%\E9\C8I\B4\A4U\B4(r\C5\C8\A4\0CE\09d[\D2<\D1\B3\D8\C3\AE\E8\C9\BEW\F2\17\7F\F3;\B3\FD\97\1CEAA\E1xA\9A\EA\82$\F2$-hH\03\1A\D0\80\DA\E45\FC\CA~V\B3\8Ce,c)\0B\14\BF\A1\A0\A0\A0\08\C8\F1\8BRT\A7*\95(M\19\CAP:\C8\8B\15F8J\C0\B4u7{\D8\CDn\B6\B0\91\F5\8A\D3PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP8\06\F1\7F\F9Fg\00e\9Ad\B3\00\00\00%tEXtdate:create\002017-08-09T15:20:47+00:00R\DB\A9\04\00\00\00%tEXtdate:modify\002017-08-09T15:20:47+00:00#\86\11\B8\00\00\00\00IEND\AEB`\82\00", align 1
@fen.DEFAULT = external constant %"char[]", align 8
@.__const.12 = private unnamed_addr constant %Ctx { i32 500, i32 500, i32 8, i32 8 }, align 4
@std.core.mem.allocator.thread_allocator = extern_weak thread_local global %any, align 8
@"$sel.acquire" = linkonce_odr constant [8 x i8] c"acquire\00", comdat, align 1
@.panic_msg.13 = internal constant [66 x i8] c"@require \22!alignment || math::is_power_of_2(alignment)\22 violated.\00", align 1
@.file.14 = internal constant [17 x i8] c"mem_allocator.c3\00", align 1
@.func.15 = internal constant [7 x i8] c"_$main\00", align 1
@.panic_msg.16 = internal constant [81 x i8] c"@require \22alignment <= mem::MAX_MEMORY_ALIGNMENT\22 violated: 'alignment too big'.\00", align 1
@.panic_msg.17 = internal constant [60 x i8] c"@require \22size > 0\22 violated: 'The size must be 1 or more'.\00", align 1
@.panic_msg.18 = internal constant [45 x i8] c"No method 'acquire' could be found on target\00", align 1
@"$ct.ulong" = linkonce global %.introspect { i8 3, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.19 = internal constant [44 x i8] c"Negative value (%d) given for slice length.\00", align 1
@"$ct.fault" = linkonce global %.introspect { i8 6, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.20 = internal constant [37 x i8] c"Unexpected fault '%s' was unwrapped!\00", align 1
@"$ct.long" = linkonce global %.introspect { i8 2, i64 0, ptr null, i64 8, i64 0, i64 0, [0 x i64] zeroinitializer }, comdat, align 8
@.panic_msg.21 = internal constant [39 x i8] c"Negative array indexing (index was %d)\00", align 1
@.file.22 = internal constant [13 x i8] c"main_stub.c3\00", align 1
@.panic_msg.23 = internal constant [60 x i8] c"Array index out of bounds (array had size %d, index was %d)\00", align 1

; Function Attrs: nounwind ssp uwtable
define i32 @chess.getColor(i32 %0, i32 %1) #0 !dbg !128 {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %result = alloca %Color, align 1
  %result2 = alloca %Color, align 1
  store i32 %0, ptr %x, align 4
    #dbg_declare(ptr %x, !138, !DIExpression(), !139)
  store i32 %1, ptr %y, align 4
    #dbg_declare(ptr %y, !140, !DIExpression(), !141)
  %2 = load i32, ptr %x, align 4, !dbg !142
  %and = and i32 %2, 1, !dbg !142
  %3 = load i32, ptr %y, align 4, !dbg !143
  %and1 = and i32 %3, 1, !dbg !143
  %eq = icmp eq i32 %and, %and1, !dbg !142
  br i1 %eq, label %if.then, label %if.else, !dbg !142

if.then:                                          ; preds = %entry
  %4 = call i32 @GetColor(i32 -304697089), !dbg !144
  store i32 %4, ptr %result, align 1
  %5 = load i32, ptr %result, align 1
  ret i32 %5

if.else:                                          ; preds = %entry
  %6 = call i32 @GetColor(i32 -1199086849), !dbg !146
  store i32 %6, ptr %result2, align 1
  %7 = load i32, ptr %result2, align 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define void @chess.createTile(i64 %0, i64 %1, ptr byval(%Texture) align 8 %2, i64 %3, i64 %4, double %5, i32 %6, i32 %7) #0 !dbg !148 {
entry:
  %context = alloca %Ctx, align 8
  %texContext = alloca %Ctx, align 8
  %size = alloca <2 x i32>, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %drawX = alloca i32, align 4
  %drawY = alloca i32, align 4
  %pos = alloca <2 x i32>, align 8
  %taddr = alloca <2 x i32>, align 8
  %result = alloca <2 x i32>, align 8
  %result4 = alloca %Color, align 1
  %s = alloca <2 x i32>, align 8
  %result6 = alloca <2 x i32>, align 8
  %result9 = alloca %Color, align 1
  %s12 = alloca i32, align 4
  %result13 = alloca %BoardRow, align 8
  %result14 = alloca %Piece, align 4
  %.anon = alloca i64, align 8
  %p = alloca %Move, align 8
  %self = alloca ptr, align 8
  %index = alloca i64, align 8
  %result31 = alloca %Color, align 1
  %result33 = alloca %BoardRow, align 8
  %result34 = alloca %Piece, align 4
  %indirectarg = alloca %Texture, align 8
  store i64 %0, ptr %context, align 8
  %ptradd = getelementptr inbounds i8, ptr %context, i64 8
  store i64 %1, ptr %ptradd, align 8
    #dbg_declare(ptr %context, !157, !DIExpression(), !158)
    #dbg_declare(ptr %2, !159, !DIExpression(), !161)
  store i64 %3, ptr %texContext, align 8
  %ptradd1 = getelementptr inbounds i8, ptr %texContext, i64 8
  store i64 %4, ptr %ptradd1, align 8
    #dbg_declare(ptr %texContext, !162, !DIExpression(), !163)
  store double %5, ptr %size, align 8
    #dbg_declare(ptr %size, !164, !DIExpression(), !165)
  store i32 %6, ptr %x, align 4
    #dbg_declare(ptr %x, !166, !DIExpression(), !167)
  store i32 %7, ptr %y, align 4
    #dbg_declare(ptr %y, !168, !DIExpression(), !169)
    #dbg_declare(ptr %drawX, !170, !DIExpression(), !171)
  %8 = load i32, ptr %x, align 4, !dbg !172
  store i32 %8, ptr %drawX, align 4, !dbg !172
    #dbg_declare(ptr %drawY, !173, !DIExpression(), !174)
  %9 = load i32, ptr %y, align 4, !dbg !175
  store i32 %9, ptr %drawY, align 4, !dbg !175
  %10 = load i8, ptr @chess.flip, align 1, !dbg !176
  %11 = trunc i8 %10 to i1, !dbg !176
  br i1 %11, label %if.then, label %if.exit, !dbg !176

if.then:                                          ; preds = %entry
  %12 = load i32, ptr %x, align 4, !dbg !177
  %sub = sub i32 7, %12, !dbg !179
  store i32 %sub, ptr %drawX, align 4, !dbg !179
  %13 = load i32, ptr %y, align 4, !dbg !180
  %sub2 = sub i32 7, %13, !dbg !181
  store i32 %sub2, ptr %drawY, align 4, !dbg !181
  br label %if.exit, !dbg !181

if.exit:                                          ; preds = %if.then, %entry
    #dbg_declare(ptr %pos, !182, !DIExpression(), !183)
  %14 = load i32, ptr %drawX, align 4, !dbg !184
  %15 = insertelement <2 x i32> undef, i32 %14, i64 0, !dbg !184
  %16 = load i32, ptr %drawY, align 4, !dbg !185
  %17 = insertelement <2 x i32> %15, i32 %16, i64 1, !dbg !185
  store <2 x i32> %17, ptr %taddr, align 8
  %18 = load double, ptr %taddr, align 8
  %lo = load i64, ptr %context, align 8
  %ptradd3 = getelementptr inbounds i8, ptr %context, i64 8
  %hi = load i64, ptr %ptradd3, align 8
  %19 = call double @grids.getPos(double %18, i64 %lo, i64 %hi), !dbg !186
  store double %19, ptr %result, align 8
  %20 = load <2 x i32>, ptr %result, align 8
  store <2 x i32> %20, ptr %pos, align 8
  %21 = load <2 x i32>, ptr %pos, align 8, !dbg !187
  %22 = extractelement <2 x i32> %21, i64 0, !dbg !187
  %23 = load <2 x i32>, ptr %pos, align 8, !dbg !188
  %24 = extractelement <2 x i32> %23, i64 1, !dbg !188
  %25 = load <2 x i32>, ptr %size, align 8, !dbg !189
  %26 = extractelement <2 x i32> %25, i64 0, !dbg !189
  %27 = load <2 x i32>, ptr %size, align 8, !dbg !190
  %28 = extractelement <2 x i32> %27, i64 1, !dbg !190
  %29 = load i32, ptr %x, align 4, !dbg !191
  %30 = load i32, ptr %y, align 4, !dbg !191
  %31 = call i32 @chess.getColor(i32 %29, i32 %30), !dbg !192
  store i32 %31, ptr %result4, align 1
  %32 = load i32, ptr %result4, align 1
  call void @DrawRectangle(i32 %22, i32 %24, i32 %26, i32 %28, i32 %32), !dbg !193
  %33 = call i8 @"option$v2$int$.Option.isSome"(ptr @chess.selected), !dbg !194
  %34 = trunc i8 %33 to i1, !dbg !194
  br i1 %34, label %if.then5, label %if.exit11, !dbg !194

if.then5:                                         ; preds = %if.exit
    #dbg_declare(ptr %s, !195, !DIExpression(), !197)
  %35 = call double @"option$v2$int$.Option.unwrap"(ptr @chess.selected), !dbg !198
  store double %35, ptr %result6, align 8
  %36 = load <2 x i32>, ptr %result6, align 8
  store <2 x i32> %36, ptr %s, align 8
  %37 = load <2 x i32>, ptr %s, align 8, !dbg !199
  %38 = extractelement <2 x i32> %37, i64 0, !dbg !199
  %39 = load i32, ptr %x, align 4, !dbg !200
  %eq = icmp eq i32 %38, %39, !dbg !199
  br i1 %eq, label %and.rhs, label %and.phi, !dbg !199

and.rhs:                                          ; preds = %if.then5
  %40 = load <2 x i32>, ptr %s, align 8, !dbg !201
  %41 = extractelement <2 x i32> %40, i64 1, !dbg !201
  %42 = load i32, ptr %y, align 4, !dbg !202
  %eq7 = icmp eq i32 %41, %42, !dbg !201
  br label %and.phi, !dbg !201

and.phi:                                          ; preds = %and.rhs, %if.then5
  %val = phi i1 [ false, %if.then5 ], [ %eq7, %and.rhs ], !dbg !201
  br i1 %val, label %if.then8, label %if.exit10, !dbg !201

if.then8:                                         ; preds = %and.phi
  %43 = load <2 x i32>, ptr %pos, align 8, !dbg !203
  %44 = extractelement <2 x i32> %43, i64 0, !dbg !203
  %45 = load <2 x i32>, ptr %pos, align 8, !dbg !205
  %46 = extractelement <2 x i32> %45, i64 1, !dbg !205
  %47 = load <2 x i32>, ptr %size, align 8, !dbg !206
  %48 = extractelement <2 x i32> %47, i64 0, !dbg !206
  %49 = load <2 x i32>, ptr %size, align 8, !dbg !207
  %50 = extractelement <2 x i32> %49, i64 1, !dbg !207
  %51 = call i32 @GetColor(i32 -16777166), !dbg !208
  store i32 %51, ptr %result9, align 1
  %52 = load i32, ptr %result9, align 1
  call void @DrawRectangle(i32 %44, i32 %46, i32 %48, i32 %50, i32 %52), !dbg !209
  br label %if.exit10, !dbg !209

if.exit10:                                        ; preds = %if.then8, %and.phi
  br label %if.exit11, !dbg !209

if.exit11:                                        ; preds = %if.exit10, %if.exit
    #dbg_declare(ptr %s12, !210, !DIExpression(), !211)
  store i32 4, ptr %s12, align 4, !dbg !212
  %53 = load i32, ptr %x, align 4, !dbg !213
  %54 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %53), !dbg !214
  store { ptr, i64 } %54, ptr %result13, align 8
  %55 = load i32, ptr %y, align 4, !dbg !215
  %56 = call i64 @fen.BoardRow.get(ptr %result13, i32 %55), !dbg !214
  store i64 %56, ptr %result14, align 4
  %57 = load i32, ptr %result14, align 4
  %neq = icmp ne i32 %57, 0, !dbg !214
  br i1 %neq, label %if.then15, label %if.exit16, !dbg !214

if.then15:                                        ; preds = %if.exit11
  store i32 2, ptr %s12, align 4, !dbg !216
  br label %if.exit16, !dbg !216

if.exit16:                                        ; preds = %if.then15, %if.exit11
  %58 = call i64 @"std_collections_list$piece.Move$.List.len"(ptr @chess.possible) #5, !dbg !218
    #dbg_declare(ptr %.anon, !220, !DIExpression(), !218)
  store i64 0, ptr %.anon, align 8, !dbg !218
  br label %loop.cond, !dbg !218

loop.cond:                                        ; preds = %if.exit32, %if.exit16
  %59 = load i64, ptr %.anon, align 8, !dbg !218
  %lt = icmp ult i64 %59, %58, !dbg !218
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !218

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %p, !221, !DIExpression(), !223)
  store ptr @chess.possible, ptr %self, align 8
  %60 = load i64, ptr %.anon, align 8
  store i64 %60, ptr %index, align 8
  %61 = load ptr, ptr %self, align 8, !dbg !224
  %neq17 = icmp ne ptr %61, null, !dbg !224
  br i1 %neq17, label %assert_ok, label %assert_fail, !dbg !224

assert_fail:                                      ; preds = %loop.body
  %62 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !224
  call void %62(ptr @.panic_msg, i64 32, ptr @.file, i64 7, ptr @.func, i64 10, i32 378) #6, !dbg !224
  unreachable, !dbg !224

assert_ok:                                        ; preds = %loop.body
  %63 = load i64, ptr %index, align 8, !dbg !228
  %64 = load ptr, ptr %self, align 8, !dbg !229
  %65 = load i64, ptr %64, align 8, !dbg !229
  %lt18 = icmp ult i64 %63, %65, !dbg !230
  br i1 %lt18, label %assert_ok20, label %assert_fail19, !dbg !230

assert_fail19:                                    ; preds = %assert_ok
  %66 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !230
  call void %66(ptr @.panic_msg.6, i64 62, ptr @.file.7, i64 7, ptr @.func, i64 10, i32 42) #6, !dbg !230
  unreachable, !dbg !230

assert_ok20:                                      ; preds = %assert_ok
  %67 = load ptr, ptr %self, align 8, !dbg !231
  %ptradd21 = getelementptr inbounds i8, ptr %67, i64 32, !dbg !231
  %68 = load ptr, ptr %ptradd21, align 8, !dbg !231
  %69 = load i64, ptr %index, align 8, !dbg !232
  %ptroffset = getelementptr inbounds [24 x i8], ptr %68, i64 %69, !dbg !232
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %p, ptr align 8 %ptroffset, i32 24, i1 false), !dbg !232
  %70 = load <2 x i32>, ptr %p, align 8, !dbg !233
  %71 = extractelement <2 x i32> %70, i64 0, !dbg !233
  %72 = load i32, ptr %x, align 4, !dbg !235
  %eq22 = icmp eq i32 %71, %72, !dbg !233
  br i1 %eq22, label %and.rhs23, label %and.phi25, !dbg !233

and.rhs23:                                        ; preds = %assert_ok20
  %73 = load <2 x i32>, ptr %p, align 8, !dbg !236
  %74 = extractelement <2 x i32> %73, i64 1, !dbg !236
  %75 = load i32, ptr %y, align 4, !dbg !237
  %eq24 = icmp eq i32 %74, %75, !dbg !236
  br label %and.phi25, !dbg !236

and.phi25:                                        ; preds = %and.rhs23, %assert_ok20
  %val26 = phi i1 [ false, %assert_ok20 ], [ %eq24, %and.rhs23 ], !dbg !236
  br i1 %val26, label %if.then27, label %if.exit32, !dbg !236

if.then27:                                        ; preds = %and.phi25
  %76 = load <2 x i32>, ptr %pos, align 8, !dbg !238
  %77 = extractelement <2 x i32> %76, i64 0, !dbg !238
  %78 = load <2 x i32>, ptr %size, align 8, !dbg !240
  %79 = extractelement <2 x i32> %78, i64 0, !dbg !240
  %sdiv = sdiv i32 %79, 2, !dbg !240
  %add = add i32 %77, %sdiv, !dbg !238
  %80 = load <2 x i32>, ptr %pos, align 8, !dbg !241
  %81 = extractelement <2 x i32> %80, i64 1, !dbg !241
  %82 = load <2 x i32>, ptr %size, align 8, !dbg !242
  %83 = extractelement <2 x i32> %82, i64 1, !dbg !242
  %sdiv28 = sdiv i32 %83, 2, !dbg !242
  %add29 = add i32 %81, %sdiv28, !dbg !241
  %84 = load <2 x i32>, ptr %size, align 8, !dbg !243
  %85 = extractelement <2 x i32> %84, i64 0, !dbg !243
  %sifp = sitofp i32 %85 to float, !dbg !243
  %86 = load i32, ptr %s12, align 4, !dbg !244
  %sifp30 = sitofp i32 %86 to float, !dbg !244
  %zero = fcmp ueq float %sifp30, 0.000000e+00, !dbg !245
  %87 = call i1 @llvm.expect.i1(i1 %zero, i1 false), !dbg !245
  br i1 %87, label %panic, label %checkok, !dbg !245

checkok:                                          ; preds = %if.then27
  %fdiv = fdiv float %sifp, %sifp30, !dbg !245
  %88 = call i32 @GetColor(i32 -16777166), !dbg !246
  store i32 %88, ptr %result31, align 1
  %89 = load i32, ptr %result31, align 1
  call void @DrawCircle(i32 %add, i32 %add29, float %fdiv, i32 %89), !dbg !247
  br label %loop.exit, !dbg !248

if.exit32:                                        ; preds = %and.phi25
  %90 = load i64, ptr %.anon, align 8, !dbg !218
  %addnuw = add nuw i64 %90, 1, !dbg !218
  store i64 %addnuw, ptr %.anon, align 8, !dbg !218
  br label %loop.cond, !dbg !218

loop.exit:                                        ; preds = %checkok, %loop.cond
  %91 = load i32, ptr %x, align 4, !dbg !249
  %92 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %91), !dbg !250
  store { ptr, i64 } %92, ptr %result33, align 8
  %93 = load i32, ptr %y, align 4, !dbg !251
  %94 = call i64 @fen.BoardRow.get(ptr %result33, i32 %93), !dbg !250
  store i64 %94, ptr %result34, align 4
  %95 = load i64, ptr %result34, align 4, !dbg !252
  %96 = load i32, ptr %drawX, align 4, !dbg !252
  %97 = load i32, ptr %drawY, align 4, !dbg !252
  %lo35 = load i64, ptr %context, align 8, !dbg !252
  %ptradd36 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !252
  %hi37 = load i64, ptr %ptradd36, align 8, !dbg !252
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 4 %2, i32 20, i1 false)
  call void @chess.drawPiece(i64 %95, i32 %96, i32 %97, i64 %lo35, i64 %hi37, ptr byval(%Texture) align 8 %indirectarg, ptr byval(%Ctx) align 8 %texContext), !dbg !253
  ret void, !dbg !253

panic:                                            ; preds = %if.then27
  %98 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !245
  call void %98(ptr @.panic_msg.8, i64 17, ptr @.file.7, i64 7, ptr @.func, i64 10, i32 44) #6, !dbg !245
  unreachable, !dbg !245
}

; Function Attrs: nounwind ssp uwtable
define void @chess.createTiles(i64 %0, i64 %1, ptr byval(%Texture) align 8 %2, i64 %3, i64 %4) #0 !dbg !254 {
entry:
  %context = alloca %Ctx, align 8
  %texContext = alloca %Ctx, align 8
  %size = alloca <2 x i32>, align 8
  %result = alloca <2 x i32>, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %indirectarg = alloca %Texture, align 8
  store i64 %0, ptr %context, align 8
  %ptradd = getelementptr inbounds i8, ptr %context, i64 8
  store i64 %1, ptr %ptradd, align 8
    #dbg_declare(ptr %context, !257, !DIExpression(), !258)
    #dbg_declare(ptr %2, !259, !DIExpression(), !260)
  store i64 %3, ptr %texContext, align 8
  %ptradd1 = getelementptr inbounds i8, ptr %texContext, i64 8
  store i64 %4, ptr %ptradd1, align 8
    #dbg_declare(ptr %texContext, !261, !DIExpression(), !262)
    #dbg_declare(ptr %size, !263, !DIExpression(), !264)
  %lo = load i64, ptr %context, align 8, !dbg !265
  %ptradd2 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !265
  %hi = load i64, ptr %ptradd2, align 8, !dbg !265
  %5 = call double @grids.getTileSize(i64 %lo, i64 %hi), !dbg !266
  store double %5, ptr %result, align 8
  %6 = load <2 x i32>, ptr %result, align 8
  store <2 x i32> %6, ptr %size, align 8
    #dbg_declare(ptr %x, !267, !DIExpression(), !269)
  store i32 0, ptr %x, align 4, !dbg !270
  br label %loop.cond, !dbg !270

loop.cond:                                        ; preds = %loop.exit, %entry
  %7 = load i32, ptr %x, align 4, !dbg !271
  %ptradd3 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !272
  %8 = load i32, ptr %ptradd3, align 8, !dbg !272
  %lt = icmp slt i32 %7, %8, !dbg !271
  br i1 %lt, label %loop.body, label %loop.exit15, !dbg !271

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %y, !273, !DIExpression(), !276)
  store i32 0, ptr %y, align 4, !dbg !277
  br label %loop.cond4, !dbg !277

loop.cond4:                                       ; preds = %loop.body7, %loop.body
  %9 = load i32, ptr %y, align 4, !dbg !278
  %ptradd5 = getelementptr inbounds i8, ptr %context, i64 12, !dbg !279
  %10 = load i32, ptr %ptradd5, align 4, !dbg !279
  %lt6 = icmp slt i32 %9, %10, !dbg !278
  br i1 %lt6, label %loop.body7, label %loop.exit, !dbg !278

loop.body7:                                       ; preds = %loop.cond4
  %lo8 = load i64, ptr %context, align 8, !dbg !280
  %ptradd9 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !280
  %hi10 = load i64, ptr %ptradd9, align 8, !dbg !280
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 4 %2, i32 20, i1 false)
  %lo11 = load i64, ptr %texContext, align 8
  %ptradd12 = getelementptr inbounds i8, ptr %texContext, i64 8
  %hi13 = load i64, ptr %ptradd12, align 8
  %11 = load double, ptr %size, align 8
  %12 = load i32, ptr %x, align 4
  %13 = load i32, ptr %y, align 4
  call void @chess.createTile(i64 %lo8, i64 %hi10, ptr byval(%Texture) align 8 %indirectarg, i64 %lo11, i64 %hi13, double %11, i32 %12, i32 %13), !dbg !282
  %14 = load i32, ptr %y, align 4, !dbg !283
  %add = add i32 %14, 1, !dbg !283
  store i32 %add, ptr %y, align 4, !dbg !283
  br label %loop.cond4, !dbg !283

loop.exit:                                        ; preds = %loop.cond4
  %15 = load i32, ptr %x, align 4, !dbg !284
  %add14 = add i32 %15, 1, !dbg !284
  store i32 %add14, ptr %x, align 4, !dbg !284
  br label %loop.cond, !dbg !284

loop.exit15:                                      ; preds = %loop.cond
  ret void, !dbg !284
}

; Function Attrs: nounwind ssp uwtable
define { i64, i64 } @chess.getContextFromTexture(ptr byval(%Texture) align 8 %0) #0 !dbg !285 {
entry:
  %literal = alloca %Ctx, align 4
    #dbg_declare(ptr %0, !288, !DIExpression(), !289)
  store i32 0, ptr %literal, align 4
  %ptradd = getelementptr inbounds i8, ptr %literal, i64 4
  store i32 0, ptr %ptradd, align 4
  %ptradd1 = getelementptr inbounds i8, ptr %literal, i64 8
  store i32 0, ptr %ptradd1, align 4
  %ptradd2 = getelementptr inbounds i8, ptr %literal, i64 12
  store i32 0, ptr %ptradd2, align 4
  %ptradd3 = getelementptr inbounds i8, ptr %literal, i64 8
  store i32 6, ptr %ptradd3, align 4, !dbg !290
  %ptradd4 = getelementptr inbounds i8, ptr %literal, i64 12, !dbg !290
  store i32 2, ptr %ptradd4, align 4, !dbg !291
  %ptradd5 = getelementptr inbounds i8, ptr %0, i64 4, !dbg !292
  %1 = load i32, ptr %ptradd5, align 4, !dbg !292
  store i32 %1, ptr %literal, align 4, !dbg !292
  %ptradd6 = getelementptr inbounds i8, ptr %literal, i64 4, !dbg !292
  %ptradd7 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !293
  %2 = load i32, ptr %ptradd7, align 4, !dbg !293
  store i32 %2, ptr %ptradd6, align 4, !dbg !293
  %3 = load { i64, i64 }, ptr %literal, align 4, !dbg !293
  ret { i64, i64 } %3, !dbg !293
}

; Function Attrs: nounwind ssp uwtable
define { <2 x float>, <2 x float> } @chess.getSpriteSrc(i64 %0, ptr byval(%Texture) align 8 %1, i64 %2, i64 %3) #0 !dbg !294 {
entry:
  %piece = alloca %Piece, align 4
  %context = alloca %Ctx, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %literal = alloca %Rectangle, align 4
  store i64 %0, ptr %piece, align 4
    #dbg_declare(ptr %piece, !303, !DIExpression(), !304)
    #dbg_declare(ptr %1, !305, !DIExpression(), !306)
  store i64 %2, ptr %context, align 8
  %ptradd = getelementptr inbounds i8, ptr %context, i64 8
  store i64 %3, ptr %ptradd, align 8
    #dbg_declare(ptr %context, !307, !DIExpression(), !308)
    #dbg_declare(ptr %x, !309, !DIExpression(), !310)
  %4 = load i32, ptr %piece, align 4, !dbg !311
  %ptroffset = getelementptr inbounds [4 x i8], ptr @"fen.PieceType$xpos", i32 %4, !dbg !311
  %5 = load i32, ptr %ptroffset, align 4, !dbg !311
  store i32 %5, ptr %x, align 4, !dbg !311
    #dbg_declare(ptr %y, !312, !DIExpression(), !313)
  %ptradd1 = getelementptr inbounds i8, ptr %piece, i64 4, !dbg !314
  %6 = load i32, ptr %ptradd1, align 4, !dbg !314
  %ptroffset2 = getelementptr inbounds [4 x i8], ptr @"fen.Color$ypos", i32 %6, !dbg !314
  %7 = load i32, ptr %ptroffset2, align 4, !dbg !314
  store i32 %7, ptr %y, align 4, !dbg !314
  store float 0.000000e+00, ptr %literal, align 4
  %ptradd3 = getelementptr inbounds i8, ptr %literal, i64 4
  store float 0.000000e+00, ptr %ptradd3, align 4
  %ptradd4 = getelementptr inbounds i8, ptr %literal, i64 8
  store float 0.000000e+00, ptr %ptradd4, align 4
  %ptradd5 = getelementptr inbounds i8, ptr %literal, i64 12
  store float 0.000000e+00, ptr %ptradd5, align 4
  %8 = load i32, ptr %x, align 4, !dbg !315
  %lo = load i64, ptr %context, align 8, !dbg !315
  %ptradd6 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !315
  %hi = load i64, ptr %ptradd6, align 8, !dbg !315
  %9 = call i32 @grids.getX(i32 %8, i64 %lo, i64 %hi), !dbg !316
  %sifp = sitofp i32 %9 to float, !dbg !316
  store float %sifp, ptr %literal, align 4, !dbg !316
  %ptradd7 = getelementptr inbounds i8, ptr %literal, i64 4, !dbg !316
  %10 = load i32, ptr %y, align 4, !dbg !317
  %lo8 = load i64, ptr %context, align 8, !dbg !317
  %ptradd9 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !317
  %hi10 = load i64, ptr %ptradd9, align 8, !dbg !317
  %11 = call i32 @grids.getY(i32 %10, i64 %lo8, i64 %hi10), !dbg !318
  %sifp11 = sitofp i32 %11 to float, !dbg !318
  store float %sifp11, ptr %ptradd7, align 4, !dbg !318
  %ptradd12 = getelementptr inbounds i8, ptr %literal, i64 8, !dbg !318
  %lo13 = load i64, ptr %context, align 8, !dbg !319
  %ptradd14 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !319
  %hi15 = load i64, ptr %ptradd14, align 8, !dbg !319
  %12 = call i32 @grids.getTileWidth(i64 %lo13, i64 %hi15), !dbg !320
  %sifp16 = sitofp i32 %12 to float, !dbg !320
  store float %sifp16, ptr %ptradd12, align 4, !dbg !320
  %ptradd17 = getelementptr inbounds i8, ptr %literal, i64 12, !dbg !320
  %lo18 = load i64, ptr %context, align 8, !dbg !321
  %ptradd19 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !321
  %hi20 = load i64, ptr %ptradd19, align 8, !dbg !321
  %13 = call i32 @grids.getTileHeight(i64 %lo18, i64 %hi20), !dbg !322
  %sifp21 = sitofp i32 %13 to float, !dbg !322
  store float %sifp21, ptr %ptradd17, align 4, !dbg !322
  %14 = load { <2 x float>, <2 x float> }, ptr %literal, align 4, !dbg !322
  ret { <2 x float>, <2 x float> } %14, !dbg !322
}

; Function Attrs: nounwind ssp uwtable
define void @chess.drawPiece(i64 %0, i32 %1, i32 %2, i64 %3, i64 %4, ptr byval(%Texture) align 8 %5, ptr byval(%Ctx) align 8 %6) #0 !dbg !323 {
entry:
  %piece = alloca %Piece, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %context = alloca %Ctx, align 8
  %pos = alloca <2 x i32>, align 8
  %taddr = alloca <2 x i32>, align 8
  %result = alloca <2 x i32>, align 8
  %size = alloca <2 x i32>, align 8
  %result7 = alloca <2 x i32>, align 8
  %src = alloca %Rectangle, align 4
  %indirectarg = alloca %Texture, align 8
  %coerce = alloca %Ctx, align 8
  %result11 = alloca %Rectangle, align 4
  %dest = alloca %Rectangle, align 4
  %literal = alloca %Vector2, align 4
  %indirectarg21 = alloca %Texture, align 8
  %coerce22 = alloca %Rectangle, align 8
  %coerce26 = alloca %Rectangle, align 8
  store i64 %0, ptr %piece, align 4
    #dbg_declare(ptr %piece, !326, !DIExpression(), !327)
  store i32 %1, ptr %x, align 4
    #dbg_declare(ptr %x, !328, !DIExpression(), !329)
  store i32 %2, ptr %y, align 4
    #dbg_declare(ptr %y, !330, !DIExpression(), !331)
  store i64 %3, ptr %context, align 8
  %ptradd = getelementptr inbounds i8, ptr %context, i64 8
  store i64 %4, ptr %ptradd, align 8
    #dbg_declare(ptr %context, !332, !DIExpression(), !333)
    #dbg_declare(ptr %5, !334, !DIExpression(), !335)
    #dbg_declare(ptr %6, !336, !DIExpression(), !337)
  %7 = load i32, ptr %piece, align 4, !dbg !338
  %eq = icmp eq i32 %7, 0, !dbg !338
  br i1 %eq, label %or.phi, label %or.rhs, !dbg !338

or.rhs:                                           ; preds = %entry
  %ptradd1 = getelementptr inbounds i8, ptr %piece, i64 4, !dbg !339
  %8 = load i32, ptr %ptradd1, align 4, !dbg !339
  %eq2 = icmp eq i32 %8, 0, !dbg !339
  br label %or.phi, !dbg !339

or.phi:                                           ; preds = %or.rhs, %entry
  %val = phi i1 [ true, %entry ], [ %eq2, %or.rhs ], !dbg !339
  br i1 %val, label %if.then, label %if.exit, !dbg !339

if.then:                                          ; preds = %or.phi
  ret void, !dbg !340

if.exit:                                          ; preds = %or.phi
    #dbg_declare(ptr %pos, !341, !DIExpression(), !342)
  %9 = load i32, ptr %x, align 4, !dbg !343
  %10 = insertelement <2 x i32> undef, i32 %9, i64 0, !dbg !343
  %11 = load i32, ptr %y, align 4, !dbg !344
  %12 = insertelement <2 x i32> %10, i32 %11, i64 1, !dbg !344
  store <2 x i32> %12, ptr %taddr, align 8
  %13 = load double, ptr %taddr, align 8
  %lo = load i64, ptr %context, align 8
  %ptradd3 = getelementptr inbounds i8, ptr %context, i64 8
  %hi = load i64, ptr %ptradd3, align 8
  %14 = call double @grids.getPos(double %13, i64 %lo, i64 %hi), !dbg !345
  store double %14, ptr %result, align 8
  %15 = load <2 x i32>, ptr %result, align 8
  store <2 x i32> %15, ptr %pos, align 8
    #dbg_declare(ptr %size, !346, !DIExpression(), !347)
  %lo4 = load i64, ptr %context, align 8, !dbg !348
  %ptradd5 = getelementptr inbounds i8, ptr %context, i64 8, !dbg !348
  %hi6 = load i64, ptr %ptradd5, align 8, !dbg !348
  %16 = call double @grids.getTileSize(i64 %lo4, i64 %hi6), !dbg !349
  store double %16, ptr %result7, align 8
  %17 = load <2 x i32>, ptr %result7, align 8
  store <2 x i32> %17, ptr %size, align 8
    #dbg_declare(ptr %src, !350, !DIExpression(), !351)
  %18 = load i64, ptr %piece, align 4, !dbg !352
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 4 %5, i32 20, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce, ptr align 4 %6, i32 16, i1 false)
  %lo8 = load i64, ptr %coerce, align 8
  %ptradd9 = getelementptr inbounds i8, ptr %coerce, i64 8
  %hi10 = load i64, ptr %ptradd9, align 8
  %19 = call { <2 x float>, <2 x float> } @chess.getSpriteSrc(i64 %18, ptr byval(%Texture) align 8 %indirectarg, i64 %lo8, i64 %hi10), !dbg !353
  store { <2 x float>, <2 x float> } %19, ptr %result11, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %src, ptr align 4 %result11, i32 16, i1 false)
    #dbg_declare(ptr %dest, !354, !DIExpression(), !355)
  store float 0.000000e+00, ptr %dest, align 4, !dbg !355
  %ptradd12 = getelementptr inbounds i8, ptr %dest, i64 4, !dbg !355
  store float 0.000000e+00, ptr %ptradd12, align 4, !dbg !355
  %ptradd13 = getelementptr inbounds i8, ptr %dest, i64 8, !dbg !355
  store float 0.000000e+00, ptr %ptradd13, align 4, !dbg !355
  %ptradd14 = getelementptr inbounds i8, ptr %dest, i64 12, !dbg !355
  store float 0.000000e+00, ptr %ptradd14, align 4, !dbg !355
  %20 = load <2 x i32>, ptr %pos, align 8, !dbg !356
  %21 = extractelement <2 x i32> %20, i64 0, !dbg !356
  %sifp = sitofp i32 %21 to float, !dbg !356
  store float %sifp, ptr %dest, align 4, !dbg !356
  %ptradd15 = getelementptr inbounds i8, ptr %dest, i64 4, !dbg !356
  %22 = load <2 x i32>, ptr %pos, align 8, !dbg !357
  %23 = extractelement <2 x i32> %22, i64 1, !dbg !357
  %sifp16 = sitofp i32 %23 to float, !dbg !357
  store float %sifp16, ptr %ptradd15, align 4, !dbg !357
  %ptradd17 = getelementptr inbounds i8, ptr %dest, i64 8, !dbg !357
  %24 = load <2 x i32>, ptr %size, align 8, !dbg !358
  %25 = extractelement <2 x i32> %24, i64 0, !dbg !358
  %sifp18 = sitofp i32 %25 to float, !dbg !358
  store float %sifp18, ptr %ptradd17, align 4, !dbg !358
  %ptradd19 = getelementptr inbounds i8, ptr %dest, i64 12, !dbg !358
  %26 = load <2 x i32>, ptr %size, align 8, !dbg !359
  %27 = extractelement <2 x i32> %26, i64 1, !dbg !359
  %sifp20 = sitofp i32 %27 to float, !dbg !359
  store float %sifp20, ptr %ptradd19, align 4, !dbg !359
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %literal, ptr align 4 @.__const, i32 8, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg21, ptr align 4 %5, i32 20, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce22, ptr align 4 %src, i32 16, i1 false)
  %lo23 = load <2 x float>, ptr %coerce22, align 8
  %ptradd24 = getelementptr inbounds i8, ptr %coerce22, i64 8
  %hi25 = load <2 x float>, ptr %ptradd24, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce26, ptr align 4 %dest, i32 16, i1 false)
  %lo27 = load <2 x float>, ptr %coerce26, align 8
  %ptradd28 = getelementptr inbounds i8, ptr %coerce26, i64 8
  %hi29 = load <2 x float>, ptr %ptradd28, align 8
  %28 = load <2 x float>, ptr %literal, align 4
  %29 = load i32, ptr @raylib5.rl.WHITE, align 1
  call void @DrawTexturePro(ptr byval(%Texture) align 8 %indirectarg21, <2 x float> %lo23, <2 x float> %hi25, <2 x float> %lo27, <2 x float> %hi29, <2 x float> %28, float 0.000000e+00, i32 %29), !dbg !360
  ret void, !dbg !360
}

; Function Attrs: nounwind ssp uwtable
define void @chess.place(double %0) #0 !dbg !361 {
entry:
  %n = alloca <2 x i32>, align 8
  %result = alloca %BoardRow, align 8
  %result1 = alloca %Piece, align 4
  %result2 = alloca %Option.0, align 8
  store double %0, ptr %n, align 8
    #dbg_declare(ptr %n, !364, !DIExpression(), !365)
  %1 = load <2 x i32>, ptr %n, align 8, !dbg !366
  %2 = extractelement <2 x i32> %1, i64 0, !dbg !366
  %3 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %2), !dbg !367
  store { ptr, i64 } %3, ptr %result, align 8
  %4 = load <2 x i32>, ptr %n, align 8, !dbg !368
  %5 = extractelement <2 x i32> %4, i64 1, !dbg !368
  %6 = call i64 @fen.BoardRow.get(ptr %result, i32 %5), !dbg !367
  store i64 %6, ptr %result1, align 4
  %7 = load i32, ptr %result1, align 4
  %eq = icmp eq i32 %7, 0, !dbg !367
  br i1 %eq, label %if.then, label %if.exit, !dbg !367

if.then:                                          ; preds = %entry
  store <2 x i32> zeroinitializer, ptr @chess.selected, align 8, !dbg !369
  store i8 0, ptr getelementptr inbounds (i8, ptr @chess.selected, i64 8), align 8, !dbg !369
  call void @llvm.memset.p0.i64(ptr align 8 @chess.possible, i8 0, i64 40, i1 false), !dbg !371
  ret void, !dbg !372

if.exit:                                          ; preds = %entry
  %8 = load double, ptr %n, align 8, !dbg !373
  %9 = call { double, i8 } @"option$v2$int$.some"(double %8), !dbg !374
  store { double, i8 } %9, ptr %result2, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 @chess.selected, ptr align 8 %result2, i32 16, i1 false)
  %10 = load double, ptr %n, align 8, !dbg !375
  call void @piece.getPossible(ptr sret(%List) align 8 @chess.possible, ptr byval(%Fen) align 8 @chess.fen, double %10), !dbg !376
  ret void, !dbg !376
}

; Function Attrs: nounwind ssp uwtable
define void @chess.contains(ptr noalias sret(%Option) align 8 %0, ptr byval(%List) align 8 %1, ptr byval(%Move) align 8 %2) #0 !dbg !377 {
entry:
  %.anon = alloca i64, align 8
  %p = alloca %Move, align 8
  %self = alloca ptr, align 8
  %index = alloca i64, align 8
  %sretparam = alloca %Option, align 8
  %literal = alloca %Option, align 8
    #dbg_declare(ptr %1, !385, !DIExpression(), !386)
    #dbg_declare(ptr %2, !387, !DIExpression(), !388)
  %3 = call i64 @"std_collections_list$piece.Move$.List.len"(ptr %1) #5, !dbg !389
    #dbg_declare(ptr %.anon, !391, !DIExpression(), !389)
  store i64 0, ptr %.anon, align 8, !dbg !389
  br label %loop.cond, !dbg !389

loop.cond:                                        ; preds = %if.exit, %entry
  %4 = load i64, ptr %.anon, align 8, !dbg !389
  %lt = icmp ult i64 %4, %3, !dbg !389
  br i1 %lt, label %loop.body, label %loop.exit, !dbg !389

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %p, !392, !DIExpression(), !394)
  store ptr %1, ptr %self, align 8
  %5 = load i64, ptr %.anon, align 8
  store i64 %5, ptr %index, align 8
  %6 = load ptr, ptr %self, align 8, !dbg !395
  %neq = icmp ne ptr %6, null, !dbg !395
  br i1 %neq, label %assert_ok, label %assert_fail, !dbg !395

assert_fail:                                      ; preds = %loop.body
  %7 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !395
  call void %7(ptr @.panic_msg, i64 32, ptr @.file, i64 7, ptr @.func.9, i64 8, i32 378) #6, !dbg !395
  unreachable, !dbg !395

assert_ok:                                        ; preds = %loop.body
  %8 = load i64, ptr %index, align 8, !dbg !398
  %9 = load ptr, ptr %self, align 8, !dbg !399
  %10 = load i64, ptr %9, align 8, !dbg !399
  %lt1 = icmp ult i64 %8, %10, !dbg !400
  br i1 %lt1, label %assert_ok3, label %assert_fail2, !dbg !400

assert_fail2:                                     ; preds = %assert_ok
  %11 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !400
  call void %11(ptr @.panic_msg.6, i64 62, ptr @.file.7, i64 7, ptr @.func.9, i64 8, i32 117) #6, !dbg !400
  unreachable, !dbg !400

assert_ok3:                                       ; preds = %assert_ok
  %12 = load ptr, ptr %self, align 8, !dbg !401
  %ptradd = getelementptr inbounds i8, ptr %12, i64 32, !dbg !401
  %13 = load ptr, ptr %ptradd, align 8, !dbg !401
  %14 = load i64, ptr %index, align 8, !dbg !402
  %ptroffset = getelementptr inbounds [24 x i8], ptr %13, i64 %14, !dbg !402
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %p, ptr align 8 %ptroffset, i32 24, i1 false), !dbg !402
  %15 = call i8 @piece.Move.add_self(ptr %p, ptr byval(%Move) align 8 %2), !dbg !403
  %16 = trunc i8 %15 to i1, !dbg !403
  br i1 %16, label %if.then, label %if.exit, !dbg !403

if.then:                                          ; preds = %assert_ok3
  call void @"option$piece.Move$.some"(ptr sret(%Option) align 8 %sretparam, ptr byval(%Move) align 8 %p), !dbg !405
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %sretparam, i32 32, i1 false), !dbg !405
  ret void, !dbg !405

if.exit:                                          ; preds = %assert_ok3
  %17 = load i64, ptr %.anon, align 8, !dbg !389
  %addnuw = add nuw i64 %17, 1, !dbg !389
  store i64 %addnuw, ptr %.anon, align 8, !dbg !389
  br label %loop.cond, !dbg !389

loop.exit:                                        ; preds = %loop.cond
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %0, ptr align 8 %literal, i32 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @chess.handle_move(double %0, double %1) #0 !dbg !407 {
entry:
  %from = alloca <2 x i32>, align 8
  %to = alloca <2 x i32>, align 8
  %m = alloca %Option, align 8
  %literal = alloca %Move, align 8
  %move = alloca %Move, align 8
  %np = alloca <2 x i32>, align 8
  %result = alloca <2 x i32>, align 8
  %result3 = alloca %BoardRow, align 8
  %literal4 = alloca %Piece, align 4
  %result6 = alloca %BoardRow, align 8
  %result7 = alloca %BoardRow, align 8
  %result8 = alloca %Piece, align 4
  %result9 = alloca %BoardRow, align 8
  %literal10 = alloca %Piece, align 4
  store double %0, ptr %from, align 8
    #dbg_declare(ptr %from, !410, !DIExpression(), !411)
  store double %1, ptr %to, align 8
    #dbg_declare(ptr %to, !412, !DIExpression(), !413)
    #dbg_declare(ptr %m, !414, !DIExpression(), !415)
  call void @llvm.memset.p0.i64(ptr align 8 %literal, i8 0, i64 24, i1 false)
  %2 = load <2 x i32>, ptr %to, align 8, !dbg !416
  store <2 x i32> %2, ptr %literal, align 8, !dbg !416
  call void @chess.contains(ptr sret(%Option) align 8 %m, ptr byval(%List) align 8 @chess.possible, ptr byval(%Move) align 8 %literal), !dbg !417
  %3 = load <2 x i32>, ptr %to, align 8, !dbg !418
  %4 = load <2 x i32>, ptr %from, align 8, !dbg !419
  %neq = icmp ne <2 x i32> %3, %4, !dbg !418
  %5 = call i1 @llvm.vector.reduce.or.v2i1(<2 x i1> %neq), !dbg !418
  br i1 %5, label %and.rhs, label %and.phi, !dbg !418

and.rhs:                                          ; preds = %entry
  %6 = call i8 @"option$piece.Move$.Option.isSome"(ptr %m), !dbg !420
  %7 = trunc i8 %6 to i1, !dbg !420
  br label %and.phi, !dbg !420

and.phi:                                          ; preds = %and.rhs, %entry
  %val = phi i1 [ false, %entry ], [ %7, %and.rhs ], !dbg !420
  br i1 %val, label %if.then, label %if.exit12, !dbg !420

if.then:                                          ; preds = %and.phi
    #dbg_declare(ptr %move, !421, !DIExpression(), !423)
  call void @"option$piece.Move$.Option.unwrap"(ptr sret(%Move) align 8 %move, ptr %m), !dbg !424
  %ptradd = getelementptr inbounds i8, ptr %move, i64 8, !dbg !425
  %8 = call i8 @"option$v2$int$.Option.isSome"(ptr %ptradd), !dbg !425
  %9 = trunc i8 %8 to i1, !dbg !425
  br i1 %9, label %if.then1, label %if.exit, !dbg !425

if.then1:                                         ; preds = %if.then
    #dbg_declare(ptr %np, !426, !DIExpression(), !428)
  %ptradd2 = getelementptr inbounds i8, ptr %move, i64 8, !dbg !429
  %10 = call double @"option$v2$int$.Option.unwrap"(ptr %ptradd2), !dbg !429
  store double %10, ptr %result, align 8
  %11 = load <2 x i32>, ptr %result, align 8
  store <2 x i32> %11, ptr %np, align 8
  %12 = load <2 x i32>, ptr %np, align 8, !dbg !430
  %13 = extractelement <2 x i32> %12, i64 0, !dbg !430
  %14 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %13), !dbg !431
  store { ptr, i64 } %14, ptr %result3, align 8
  %15 = load <2 x i32>, ptr %np, align 8, !dbg !432
  %16 = extractelement <2 x i32> %15, i64 1, !dbg !432
  store i32 0, ptr %literal4, align 4
  %ptradd5 = getelementptr inbounds i8, ptr %literal4, i64 4
  store i32 0, ptr %ptradd5, align 4
  %17 = load i64, ptr %literal4, align 4
  call void @fen.BoardRow.set(ptr %result3, i32 %16, i64 %17), !dbg !431
  br label %if.exit, !dbg !431

if.exit:                                          ; preds = %if.then1, %if.then
  %18 = load <2 x i32>, ptr %to, align 8, !dbg !433
  %19 = extractelement <2 x i32> %18, i64 0, !dbg !433
  %20 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %19), !dbg !434
  store { ptr, i64 } %20, ptr %result6, align 8
  %21 = load <2 x i32>, ptr %to, align 8, !dbg !435
  %22 = extractelement <2 x i32> %21, i64 1, !dbg !435
  %23 = load <2 x i32>, ptr %from, align 8, !dbg !436
  %24 = extractelement <2 x i32> %23, i64 0, !dbg !436
  %25 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %24), !dbg !437
  store { ptr, i64 } %25, ptr %result7, align 8
  %26 = load <2 x i32>, ptr %from, align 8, !dbg !438
  %27 = extractelement <2 x i32> %26, i64 1, !dbg !438
  %28 = call i64 @fen.BoardRow.get(ptr %result7, i32 %27), !dbg !437
  store i64 %28, ptr %result8, align 4
  %29 = load i64, ptr %result8, align 4
  call void @fen.BoardRow.set(ptr %result6, i32 %22, i64 %29), !dbg !434
  %30 = load <2 x i32>, ptr %from, align 8, !dbg !439
  %31 = extractelement <2 x i32> %30, i64 0, !dbg !439
  %32 = call { ptr, i64 } @fen.Board.get(ptr @chess.fen, i32 %31), !dbg !440
  store { ptr, i64 } %32, ptr %result9, align 8
  %33 = load <2 x i32>, ptr %from, align 8, !dbg !441
  %34 = extractelement <2 x i32> %33, i64 1, !dbg !441
  store i32 0, ptr %literal10, align 4
  %ptradd11 = getelementptr inbounds i8, ptr %literal10, i64 4
  store i32 0, ptr %ptradd11, align 4
  %35 = load i64, ptr %literal10, align 4
  call void @fen.BoardRow.set(ptr %result9, i32 %34, i64 %35), !dbg !440
  br label %if.exit12, !dbg !440

if.exit12:                                        ; preds = %if.exit, %and.phi
  store <2 x i32> zeroinitializer, ptr @chess.selected, align 8, !dbg !442
  store i8 0, ptr getelementptr inbounds (i8, ptr @chess.selected, i64 8), align 8, !dbg !442
  call void @llvm.memset.p0.i64(ptr align 8 @chess.possible, i8 0, i64 40, i1 false), !dbg !443
  ret void, !dbg !443
}

; Function Attrs: nounwind ssp uwtable
define i32 @chess.main(ptr %0, i64 %1) #0 !dbg !444 {
entry:
  %args = alloca %"char[][]", align 8
  %img = alloca %Image, align 8
  %tex = alloca %Texture, align 4
  %texContext = alloca %Ctx, align 4
  %indirectarg = alloca %Texture, align 8
  %result = alloca %Ctx, align 4
  %context = alloca %Ctx, align 4
  %result1 = alloca %Vector2, align 4
  %n = alloca <2 x i32>, align 8
  %taddr = alloca <2 x i32>, align 8
  %coerce = alloca %Ctx, align 8
  %result6 = alloca <2 x i32>, align 8
  %o = alloca <2 x i32>, align 8
  %result11 = alloca <2 x i32>, align 8
  %coerce14 = alloca %Ctx, align 8
  %indirectarg18 = alloca %Texture, align 8
  %coerce19 = alloca %Ctx, align 8
  store ptr %0, ptr %args, align 8
  %ptradd = getelementptr inbounds i8, ptr %args, i64 8
  store i64 %1, ptr %ptradd, align 8
    #dbg_declare(ptr %args, !453, !DIExpression(), !454)
  call void @InitWindow(i32 500, i32 500, ptr @.str), !dbg !455
    #dbg_declare(ptr %img, !456, !DIExpression(), !464)
  %2 = load ptr, ptr @chess.ATLAS, align 8, !dbg !465
  call void @LoadImageFromMemory(ptr sret(%Image) align 8 %img, ptr @.str.10, ptr %2, i32 26837), !dbg !466
    #dbg_declare(ptr %tex, !467, !DIExpression(), !468)
  call void @LoadTextureFromImage(ptr sret(%Texture) align 4 %tex, ptr byval(%Image) align 8 %img), !dbg !469
    #dbg_declare(ptr %texContext, !470, !DIExpression(), !471)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg, ptr align 4 %tex, i32 20, i1 false)
  %3 = call { i64, i64 } @chess.getContextFromTexture(ptr byval(%Texture) align 8 %indirectarg), !dbg !472
  store { i64, i64 } %3, ptr %result, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %texContext, ptr align 4 %result, i32 16, i1 false)
  %lo = load ptr, ptr @fen.DEFAULT, align 8, !dbg !473
  %hi = load i64, ptr getelementptr inbounds (i8, ptr @fen.DEFAULT, i64 8), align 8, !dbg !473
  call void @fen.loadFen(ptr sret(%Fen) align 8 @chess.fen, ptr %lo, i64 %hi), !dbg !474
  call void @UnloadImage(ptr byval(%Image) align 8 %img), !dbg !475
    #dbg_declare(ptr %context, !476, !DIExpression(), !477)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %context, ptr align 4 @.__const.12, i32 16, i1 false), !dbg !477
  br label %loop.cond, !dbg !478

loop.cond:                                        ; preds = %if.exit13, %entry
  %4 = call i8 @WindowShouldClose(), !dbg !479
  %5 = trunc i8 %4 to i1, !dbg !479
  %not = xor i1 %5, true, !dbg !479
  br i1 %not, label %loop.body, label %loop.exit, !dbg !479

loop.body:                                        ; preds = %loop.cond
  call void @BeginDrawing(), !dbg !481
  %6 = call <2 x float> @GetMousePosition(), !dbg !483
  store <2 x float> %6, ptr %result1, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 @chess.mousePos, ptr align 4 %result1, i32 8, i1 false)
  %7 = call i8 @IsMouseButtonPressed(i32 0), !dbg !484
  %8 = trunc i8 %7 to i1, !dbg !484
  br i1 %8, label %if.then, label %if.exit13, !dbg !484

if.then:                                          ; preds = %loop.body
    #dbg_declare(ptr %n, !485, !DIExpression(), !487)
  %9 = load float, ptr @chess.mousePos, align 4, !dbg !488
  %10 = call float @llvm.round.f32(float %9), !dbg !488
  %fpsi = fptosi float %10 to i32, !dbg !488
  %11 = insertelement <2 x i32> undef, i32 %fpsi, i64 0, !dbg !488
  %12 = load float, ptr getelementptr inbounds (i8, ptr @chess.mousePos, i64 4), align 4, !dbg !489
  %13 = call float @llvm.round.f32(float %12), !dbg !489
  %fpsi2 = fptosi float %13 to i32, !dbg !489
  %14 = insertelement <2 x i32> %11, i32 %fpsi2, i64 1, !dbg !489
  store <2 x i32> %14, ptr %taddr, align 8
  %15 = load double, ptr %taddr, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce, ptr align 4 %context, i32 16, i1 false)
  %lo3 = load i64, ptr %coerce, align 8
  %ptradd4 = getelementptr inbounds i8, ptr %coerce, i64 8
  %hi5 = load i64, ptr %ptradd4, align 8
  %16 = call double @grids.getGridPos(double %15, i64 %lo3, i64 %hi5), !dbg !490
  store double %16, ptr %result6, align 8
  %17 = load <2 x i32>, ptr %result6, align 8
  store <2 x i32> %17, ptr %n, align 8
  %18 = load i8, ptr @chess.flip, align 1, !dbg !491
  %19 = trunc i8 %18 to i1, !dbg !491
  br i1 %19, label %if.then7, label %if.exit, !dbg !491

if.then7:                                         ; preds = %if.then
  %20 = load <2 x i32>, ptr %n, align 8, !dbg !492
  %21 = load <2 x i32>, ptr %n, align 8, !dbg !494
  %22 = extractelement <2 x i32> %21, i64 0, !dbg !494
  %sub = sub i32 7, %22, !dbg !495
  %elemset = insertelement <2 x i32> %20, i32 %sub, i64 0, !dbg !495
  store <2 x i32> %elemset, ptr %n, align 8, !dbg !495
  %23 = load <2 x i32>, ptr %n, align 8, !dbg !496
  %24 = load <2 x i32>, ptr %n, align 8, !dbg !497
  %25 = extractelement <2 x i32> %24, i64 1, !dbg !497
  %sub8 = sub i32 7, %25, !dbg !498
  %elemset9 = insertelement <2 x i32> %23, i32 %sub8, i64 1, !dbg !498
  store <2 x i32> %elemset9, ptr %n, align 8, !dbg !498
  br label %if.exit, !dbg !498

if.exit:                                          ; preds = %if.then7, %if.then
  %26 = call i8 @"option$v2$int$.Option.isSome"(ptr @chess.selected), !dbg !499
  %27 = trunc i8 %26 to i1, !dbg !499
  br i1 %27, label %if.then10, label %if.else, !dbg !499

if.then10:                                        ; preds = %if.exit
    #dbg_declare(ptr %o, !500, !DIExpression(), !502)
  %28 = call double @"option$v2$int$.Option.unwrap"(ptr @chess.selected), !dbg !503
  store double %28, ptr %result11, align 8
  %29 = load <2 x i32>, ptr %result11, align 8
  store <2 x i32> %29, ptr %o, align 8
  %30 = load double, ptr %o, align 8, !dbg !504
  %31 = load double, ptr %n, align 8, !dbg !504
  call void @chess.handle_move(double %30, double %31), !dbg !505
  br label %if.exit12, !dbg !505

if.else:                                          ; preds = %if.exit
  %32 = load double, ptr %n, align 8, !dbg !506
  call void @chess.place(double %32), !dbg !508
  br label %if.exit12, !dbg !508

if.exit12:                                        ; preds = %if.else, %if.then10
  br label %if.exit13, !dbg !508

if.exit13:                                        ; preds = %if.exit12, %loop.body
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce14, ptr align 4 %context, i32 16, i1 false)
  %lo15 = load i64, ptr %coerce14, align 8
  %ptradd16 = getelementptr inbounds i8, ptr %coerce14, i64 8
  %hi17 = load i64, ptr %ptradd16, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %indirectarg18, ptr align 4 %tex, i32 20, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %coerce19, ptr align 4 %texContext, i32 16, i1 false)
  %lo20 = load i64, ptr %coerce19, align 8
  %ptradd21 = getelementptr inbounds i8, ptr %coerce19, i64 8
  %hi22 = load i64, ptr %ptradd21, align 8
  call void @chess.createTiles(i64 %lo15, i64 %hi17, ptr byval(%Texture) align 8 %indirectarg18, i64 %lo20, i64 %hi22), !dbg !509
  call void @EndDrawing(), !dbg !510
  br label %loop.cond, !dbg !510

loop.exit:                                        ; preds = %loop.cond
  call void @CloseWindow(), !dbg !511
  ret i32 0, !dbg !512
}

; Function Attrs: nounwind ssp uwtable
define i32 @main(i32 %0, ptr %1) #0 !dbg !513 {
entry:
  %.anon = alloca i32, align 4
  %.anon1 = alloca ptr, align 8
  %argc = alloca i32, align 4
  %argv = alloca ptr, align 8
  %blockret = alloca i32, align 4
  %list = alloca %"char[][]", align 8
  %argc2 = alloca i32, align 4
  %argv3 = alloca ptr, align 8
  %list5 = alloca %"char[][]", align 8
  %elements = alloca i64, align 8
  %allocator = alloca %any, align 8
  %elements6 = alloca i64, align 8
  %error_var = alloca i64, align 8
  %allocator7 = alloca %any, align 8
  %elements8 = alloca i64, align 8
  %allocator10 = alloca %any, align 8
  %size = alloca i64, align 8
  %blockret11 = alloca ptr, align 8
  %x = alloca i64, align 8
  %.inlinecache = alloca ptr, align 8
  %.cachedtype = alloca ptr, align 8
  %retparam = alloca ptr, align 8
  %taddr = alloca ptr, align 8
  %taddr19 = alloca i64, align 8
  %varargslots = alloca [1 x %any], align 16
  %indirectarg = alloca %"any[]", align 8
  %varargslots21 = alloca [1 x %any], align 16
  %indirectarg23 = alloca %"any[]", align 8
  %i = alloca i32, align 4
  %arg = alloca ptr, align 8
  %len = alloca i64, align 8
  %taddr30 = alloca i64, align 8
  %varargslots31 = alloca [1 x %any], align 16
  %indirectarg33 = alloca %"any[]", align 8
  %taddr36 = alloca i64, align 8
  %taddr37 = alloca i64, align 8
  %varargslots38 = alloca [2 x %any], align 16
  %indirectarg41 = alloca %"any[]", align 8
  %ptr = alloca ptr, align 8
  %len45 = alloca i64, align 8
  %taddr54 = alloca i64, align 8
  %varargslots55 = alloca [1 x %any], align 16
  %indirectarg57 = alloca %"any[]", align 8
  store ptr null, ptr %.cachedtype, align 8
  store i32 %0, ptr %.anon, align 4
    #dbg_declare(ptr %.anon, !517, !DIExpression(), !518)
  store ptr %1, ptr %.anon1, align 8
    #dbg_declare(ptr %.anon1, !519, !DIExpression(), !518)
  %2 = load i32, ptr %.anon, align 4
  store i32 %2, ptr %argc, align 4
  %3 = load ptr, ptr %.anon1, align 8
  store ptr %3, ptr %argv, align 8
    #dbg_declare(ptr %list, !520, !DIExpression(), !523)
  %4 = load i32, ptr %argc, align 4
  store i32 %4, ptr %argc2, align 4
  %5 = load ptr, ptr %argv, align 8
  store ptr %5, ptr %argv3, align 8
    #dbg_declare(ptr %list5, !524, !DIExpression(), !526)
  %6 = load i32, ptr %argc2, align 4, !dbg !528
  %sext = sext i32 %6 to i64, !dbg !528
  store i64 %sext, ptr %elements, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator, ptr align 8 @std.core.mem.allocator.thread_allocator, i32 16, i1 false)
  %7 = load i64, ptr %elements, align 8
  store i64 %7, ptr %elements6, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator7, ptr align 8 %allocator, i32 16, i1 false)
  %8 = load i64, ptr %elements6, align 8
  store i64 %8, ptr %elements8, align 8
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %allocator10, ptr align 8 %allocator7, i32 16, i1 false)
  %9 = load i64, ptr %elements8, align 8, !dbg !529
  %mul = mul i64 16, %9, !dbg !538
  store i64 %mul, ptr %size, align 8
  %10 = load i64, ptr %size, align 8, !dbg !539
  %i2nb = icmp eq i64 %10, 0, !dbg !539
  br i1 %i2nb, label %if.then, label %if.exit, !dbg !539

if.then:                                          ; preds = %entry
  store ptr null, ptr %blockret11, align 8, !dbg !542
  br label %expr_block.exit, !dbg !542

if.exit:                                          ; preds = %entry
  %11 = load i64, ptr %size, align 8, !dbg !543
  br i1 true, label %or.phi, label %or.rhs, !dbg !544

or.rhs:                                           ; preds = %if.exit
  store i64 0, ptr %x, align 8
  %12 = load i64, ptr %x, align 8, !dbg !545
  %neq = icmp ne i64 0, %12, !dbg !545
  br i1 %neq, label %and.rhs, label %and.phi, !dbg !545

and.rhs:                                          ; preds = %or.rhs
  %13 = load i64, ptr %x, align 8, !dbg !549
  %14 = load i64, ptr %x, align 8, !dbg !550
  %sub = sub i64 %14, 1, !dbg !550
  %and = and i64 %13, %sub, !dbg !549
  %eq = icmp eq i64 %and, 0, !dbg !549
  br label %and.phi, !dbg !549

and.phi:                                          ; preds = %and.rhs, %or.rhs
  %val = phi i1 [ false, %or.rhs ], [ %eq, %and.rhs ], !dbg !549
  br label %or.phi, !dbg !549

or.phi:                                           ; preds = %and.phi, %if.exit
  %val12 = phi i1 [ true, %if.exit ], [ %val, %and.phi ], !dbg !549
  br i1 %val12, label %assert_ok, label %assert_fail, !dbg !549

assert_fail:                                      ; preds = %or.phi
  %15 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !551
  call void %15(ptr @.panic_msg.13, i64 65, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 85) #6, !dbg !551
  unreachable, !dbg !551

assert_ok:                                        ; preds = %or.phi
  br i1 true, label %assert_ok14, label %assert_fail13, !dbg !551

assert_fail13:                                    ; preds = %assert_ok
  %16 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !551
  call void %16(ptr @.panic_msg.16, i64 80, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 85) #6, !dbg !551
  unreachable, !dbg !551

assert_ok14:                                      ; preds = %assert_ok
  %lt = icmp ult i64 0, %11, !dbg !551
  br i1 %lt, label %assert_ok16, label %assert_fail15, !dbg !551

assert_fail15:                                    ; preds = %assert_ok14
  %17 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !551
  call void %17(ptr @.panic_msg.17, i64 59, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 85) #6, !dbg !551
  unreachable, !dbg !551

assert_ok16:                                      ; preds = %assert_ok14
  %ptradd = getelementptr inbounds i8, ptr %allocator10, i64 8, !dbg !551
  %18 = load i64, ptr %ptradd, align 8, !dbg !551
  %19 = inttoptr i64 %18 to ptr, !dbg !551
  %type = load ptr, ptr %.cachedtype, align 8
  %20 = icmp eq ptr %19, %type
  br i1 %20, label %cache_hit, label %cache_miss

cache_miss:                                       ; preds = %assert_ok16
  %ptradd17 = getelementptr inbounds i8, ptr %19, i64 16
  %21 = load ptr, ptr %ptradd17, align 8
  %22 = call ptr @.dyn_search(ptr %21, ptr @"$sel.acquire")
  store ptr %22, ptr %.inlinecache, align 8
  store ptr %19, ptr %.cachedtype, align 8
  br label %23

cache_hit:                                        ; preds = %assert_ok16
  %cache_hit_fn = load ptr, ptr %.inlinecache, align 8
  br label %23

23:                                               ; preds = %cache_hit, %cache_miss
  %fn_phi = phi ptr [ %cache_hit_fn, %cache_hit ], [ %22, %cache_miss ]
  %24 = icmp eq ptr %fn_phi, null
  br i1 %24, label %missing_function, label %match

missing_function:                                 ; preds = %23
  %25 = load ptr, ptr @std.core.builtin.panic, align 8, !dbg !551
  call void %25(ptr @.panic_msg.18, i64 44, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 85) #6, !dbg !551
  unreachable, !dbg !551

match:                                            ; preds = %23
  %26 = load ptr, ptr %allocator10, align 8
  %27 = call i64 %fn_phi(ptr %retparam, ptr %26, i64 %11, i32 0, i64 0), !dbg !551
  %not_err = icmp eq i64 %27, 0, !dbg !551
  %28 = call i1 @llvm.expect.i1(i1 %not_err, i1 true), !dbg !551
  br i1 %28, label %after_check, label %assign_optional, !dbg !551

assign_optional:                                  ; preds = %match
  store i64 %27, ptr %error_var, align 8, !dbg !551
  br label %panic_block, !dbg !551

after_check:                                      ; preds = %match
  %29 = load ptr, ptr %retparam, align 8, !dbg !551
  store ptr %29, ptr %blockret11, align 8, !dbg !551
  br label %expr_block.exit, !dbg !551

expr_block.exit:                                  ; preds = %after_check, %if.then
  %30 = load ptr, ptr %blockret11, align 8, !dbg !551
  store ptr %30, ptr %taddr, align 8
  %31 = load ptr, ptr %taddr, align 8
  %32 = load i64, ptr %elements8, align 8, !dbg !552
  %add = add i64 0, %32, !dbg !552
  %gt = icmp ugt i64 0, %add, !dbg !552
  %sub18 = sub i64 %add, 0, !dbg !552
  %33 = call i1 @llvm.expect.i1(i1 %gt, i1 false), !dbg !552
  br i1 %33, label %panic, label %checkok, !dbg !552

checkok:                                          ; preds = %expr_block.exit
  %size20 = sub i64 %add, 0, !dbg !553
  %34 = insertvalue %"char[][]" undef, ptr %31, 0, !dbg !553
  %35 = insertvalue %"char[][]" %34, i64 %size20, 1, !dbg !553
  br label %noerr_block, !dbg !553

panic_block:                                      ; preds = %assign_optional
  %36 = insertvalue %any undef, ptr %error_var, 0, !dbg !553
  %37 = insertvalue %any %36, i64 ptrtoint (ptr @"$ct.fault" to i64), 1, !dbg !553
  store %any %37, ptr %varargslots21, align 16
  %38 = insertvalue %"any[]" undef, ptr %varargslots21, 0
  %"$$temp22" = insertvalue %"any[]" %38, i64 1, 1
  store %"any[]" %"$$temp22", ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.20, i64 36, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 286, ptr byval(%"any[]") align 8 %indirectarg23) #6, !dbg !532
  unreachable, !dbg !532

noerr_block:                                      ; preds = %checkok
  store %"char[][]" %35, ptr %list5, align 8, !dbg !532
    #dbg_declare(ptr %i, !554, !DIExpression(), !556)
  store i32 0, ptr %i, align 4, !dbg !557
  br label %loop.cond, !dbg !557

loop.cond:                                        ; preds = %checkok58, %noerr_block
  %39 = load i32, ptr %i, align 4, !dbg !558
  %40 = load i32, ptr %argc2, align 4, !dbg !559
  %lt24 = icmp slt i32 %39, %40, !dbg !558
  br i1 %lt24, label %loop.body, label %loop.exit61, !dbg !558

loop.body:                                        ; preds = %loop.cond
    #dbg_declare(ptr %arg, !560, !DIExpression(), !562)
  %41 = load ptr, ptr %argv3, align 8, !dbg !563
  %42 = load i32, ptr %i, align 4, !dbg !564
  %sext25 = sext i32 %42 to i64, !dbg !564
  %ptroffset = getelementptr inbounds [8 x i8], ptr %41, i64 %sext25, !dbg !564
  %43 = load ptr, ptr %ptroffset, align 8, !dbg !564
  store ptr %43, ptr %arg, align 8, !dbg !564
    #dbg_declare(ptr %len, !565, !DIExpression(), !566)
  store i64 0, ptr %len, align 8, !dbg !567
  %ptradd26 = getelementptr inbounds i8, ptr %list5, i64 8, !dbg !568
  %44 = load i64, ptr %ptradd26, align 8, !dbg !568
  %45 = load ptr, ptr %list5, align 8, !dbg !568
  %46 = load i32, ptr %i, align 4, !dbg !569
  %sext27 = sext i32 %46 to i64, !dbg !569
  %lt28 = icmp slt i64 %sext27, 0, !dbg !569
  %47 = call i1 @llvm.expect.i1(i1 %lt28, i1 false), !dbg !569
  br i1 %47, label %panic29, label %checkok34, !dbg !569

checkok34:                                        ; preds = %loop.body
  %ge = icmp sge i64 %sext27, %44, !dbg !569
  %48 = call i1 @llvm.expect.i1(i1 %ge, i1 false), !dbg !569
  br i1 %48, label %panic35, label %checkok42, !dbg !569

checkok42:                                        ; preds = %checkok34
  %ptroffset43 = getelementptr inbounds [16 x i8], ptr %45, i64 %sext27, !dbg !569
  %49 = load ptr, ptr %arg, align 8, !dbg !570
  %50 = load ptr, ptr %arg, align 8
  store ptr %50, ptr %ptr, align 8
    #dbg_declare(ptr %len45, !571, !DIExpression(), !573)
  store i64 0, ptr %len45, align 8, !dbg !575
  br label %loop.cond46, !dbg !576

loop.cond46:                                      ; preds = %loop.body48, %checkok42
  %51 = load ptr, ptr %ptr, align 8, !dbg !577
  %52 = load i64, ptr %len45, align 8, !dbg !579
  %ptradd47 = getelementptr inbounds i8, ptr %51, i64 %52, !dbg !579
  %53 = load i8, ptr %ptradd47, align 1, !dbg !579
  %i2b = icmp ne i8 %53, 0, !dbg !579
  br i1 %i2b, label %loop.body48, label %loop.exit, !dbg !579

loop.body48:                                      ; preds = %loop.cond46
  %54 = load i64, ptr %len45, align 8, !dbg !580
  %add49 = add i64 %54, 1, !dbg !580
  store i64 %add49, ptr %len45, align 8, !dbg !580
  br label %loop.cond46, !dbg !580

loop.exit:                                        ; preds = %loop.cond46
  %55 = load i64, ptr %len45, align 8, !dbg !581
  %add50 = add i64 0, %55, !dbg !581
  %gt51 = icmp ugt i64 0, %add50, !dbg !581
  %sub52 = sub i64 %add50, 0, !dbg !581
  %56 = call i1 @llvm.expect.i1(i1 %gt51, i1 false), !dbg !581
  br i1 %56, label %panic53, label %checkok58, !dbg !581

checkok58:                                        ; preds = %loop.exit
  %size59 = sub i64 %add50, 0, !dbg !582
  %57 = insertvalue %"char[]" undef, ptr %49, 0, !dbg !582
  %58 = insertvalue %"char[]" %57, i64 %size59, 1, !dbg !582
  store %"char[]" %58, ptr %ptroffset43, align 8, !dbg !582
  %59 = load i32, ptr %i, align 4, !dbg !583
  %add60 = add i32 %59, 1, !dbg !583
  store i32 %add60, ptr %i, align 4, !dbg !583
  br label %loop.cond, !dbg !583

loop.exit61:                                      ; preds = %loop.cond
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %list, ptr align 8 %list5, i32 16, i1 false), !dbg !584
  %lo = load ptr, ptr %list, align 8, !dbg !585
  %ptradd62 = getelementptr inbounds i8, ptr %list, i64 8, !dbg !585
  %hi = load i64, ptr %ptradd62, align 8, !dbg !585
  %60 = call i32 @chess.main(ptr %lo, i64 %hi), !dbg !586
  store i32 %60, ptr %blockret, align 4, !dbg !586
  %61 = load ptr, ptr %list, align 8, !dbg !587
  call void @std.core.mem.free(ptr %61) #5, !dbg !589
  br label %expr_block.exit63, !dbg !589

expr_block.exit63:                                ; preds = %loop.exit61
  %62 = load i32, ptr %blockret, align 4, !dbg !589
  ret i32 %62, !dbg !589

panic:                                            ; preds = %expr_block.exit
  store i64 %sub18, ptr %taddr19, align 8
  %63 = insertvalue %any undef, ptr %taddr19, 0
  %64 = insertvalue %any %63, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %any %64, ptr %varargslots, align 16
  %65 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %"$$temp" = insertvalue %"any[]" %65, i64 1, 1
  store %"any[]" %"$$temp", ptr %indirectarg, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.19, i64 43, ptr @.file.14, i64 16, ptr @.func.15, i64 6, i32 303, ptr byval(%"any[]") align 8 %indirectarg) #6, !dbg !553
  unreachable, !dbg !553

panic29:                                          ; preds = %loop.body
  store i64 %sext27, ptr %taddr30, align 8
  %66 = insertvalue %any undef, ptr %taddr30, 0
  %67 = insertvalue %any %66, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %any %67, ptr %varargslots31, align 16
  %68 = insertvalue %"any[]" undef, ptr %varargslots31, 0
  %"$$temp32" = insertvalue %"any[]" %68, i64 1, 1
  store %"any[]" %"$$temp32", ptr %indirectarg33, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.21, i64 38, ptr @.file.22, i64 12, ptr @.func.15, i64 6, i32 29, ptr byval(%"any[]") align 8 %indirectarg33) #6, !dbg !569
  unreachable, !dbg !569

panic35:                                          ; preds = %checkok34
  store i64 %44, ptr %taddr36, align 8
  %69 = insertvalue %any undef, ptr %taddr36, 0
  %70 = insertvalue %any %69, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store i64 %sext27, ptr %taddr37, align 8
  %71 = insertvalue %any undef, ptr %taddr37, 0
  %72 = insertvalue %any %71, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  store %any %70, ptr %varargslots38, align 16
  %ptradd39 = getelementptr inbounds i8, ptr %varargslots38, i64 16
  store %any %72, ptr %ptradd39, align 16
  %73 = insertvalue %"any[]" undef, ptr %varargslots38, 0
  %"$$temp40" = insertvalue %"any[]" %73, i64 2, 1
  store %"any[]" %"$$temp40", ptr %indirectarg41, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.23, i64 59, ptr @.file.22, i64 12, ptr @.func.15, i64 6, i32 29, ptr byval(%"any[]") align 8 %indirectarg41) #6, !dbg !569
  unreachable, !dbg !569

panic53:                                          ; preds = %loop.exit
  store i64 %sub52, ptr %taddr54, align 8
  %74 = insertvalue %any undef, ptr %taddr54, 0
  %75 = insertvalue %any %74, i64 ptrtoint (ptr @"$ct.ulong" to i64), 1
  store %any %75, ptr %varargslots55, align 16
  %76 = insertvalue %"any[]" undef, ptr %varargslots55, 0
  %"$$temp56" = insertvalue %"any[]" %76, i64 1, 1
  store %"any[]" %"$$temp56", ptr %indirectarg57, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.19, i64 43, ptr @.file.22, i64 12, ptr @.func.15, i64 6, i32 29, ptr byval(%"any[]") align 8 %indirectarg57) #6, !dbg !582
  unreachable, !dbg !582
}

; Function Attrs: nounwind ssp uwtable
declare i32 @GetColor(i32) #0

; Function Attrs: nounwind ssp uwtable
declare double @grids.getPos(double, i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @DrawRectangle(i32, i32, i32, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak zeroext i8 @"option$v2$int$.Option.isSome"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak double @"option$v2$int$.Option.unwrap"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare i64 @fen.BoardRow.get(ptr, i32) #0

; Function Attrs: nounwind ssp uwtable
declare { ptr, i64 } @fen.Board.get(ptr, i32) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak i64 @"std_collections_list$piece.Move$.List.len"(ptr) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
declare void @DrawCircle(i32, i32, float, i32) #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #2

; Function Attrs: nounwind ssp uwtable
declare double @grids.getTileSize(i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare i32 @grids.getX(i32, i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare i32 @grids.getY(i32, i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare i32 @grids.getTileWidth(i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare i32 @grids.getTileHeight(i64, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @DrawTexturePro(ptr byval(%Texture) align 8, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, float, i32) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
declare extern_weak { double, i8 } @"option$v2$int$.some"(double) #0

; Function Attrs: nounwind ssp uwtable
declare void @piece.getPossible(ptr noalias sret(%List) align 8, ptr byval(%Fen) align 8, double) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @piece.Move.add_self(ptr, ptr byval(%Move) align 8) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak void @"option$piece.Move$.some"(ptr noalias sret(%Option) align 8, ptr byval(%Move) align 8) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i1 @llvm.vector.reduce.or.v2i1(<2 x i1>) #4

; Function Attrs: nounwind ssp uwtable
declare extern_weak zeroext i8 @"option$piece.Move$.Option.isSome"(ptr) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak void @"option$piece.Move$.Option.unwrap"(ptr noalias sret(%Move) align 8, ptr) #0

; Function Attrs: nounwind ssp uwtable
declare void @fen.BoardRow.set(ptr, i32, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @InitWindow(i32, i32, ptr) #0

; Function Attrs: nounwind ssp uwtable
declare void @LoadImageFromMemory(ptr noalias sret(%Image) align 8, ptr, ptr, i32) #0

; Function Attrs: nounwind ssp uwtable
declare void @LoadTextureFromImage(ptr noalias sret(%Texture) align 4, ptr byval(%Image) align 8) #0

; Function Attrs: nounwind ssp uwtable
declare void @fen.loadFen(ptr noalias sret(%Fen) align 8, ptr, i64) #0

; Function Attrs: nounwind ssp uwtable
declare void @UnloadImage(ptr byval(%Image) align 8) #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @WindowShouldClose() #0

; Function Attrs: nounwind ssp uwtable
declare void @BeginDrawing() #0

; Function Attrs: nounwind ssp uwtable
declare <2 x float> @GetMousePosition() #0

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @IsMouseButtonPressed(i32) #0

; Function Attrs: nounwind ssp uwtable
declare double @grids.getGridPos(double, i64, i64) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.round.f32(float) #4

; Function Attrs: nounwind ssp uwtable
declare void @EndDrawing() #0

; Function Attrs: nounwind ssp uwtable
declare void @CloseWindow() #0

define weak ptr @.dyn_search(ptr %0, ptr %1) unnamed_addr comdat {
entry:
  br label %check

check:                                            ; preds = %no_match, %entry
  %2 = phi ptr [ %0, %entry ], [ %9, %no_match ]
  %3 = icmp eq ptr %2, null
  br i1 %3, label %missing_function, label %compare

missing_function:                                 ; preds = %check
  ret ptr null

compare:                                          ; preds = %check
  %4 = getelementptr inbounds nuw { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %match, label %no_match

match:                                            ; preds = %compare
  %7 = load ptr, ptr %2, align 8
  ret ptr %7

no_match:                                         ; preds = %compare
  %8 = getelementptr inbounds nuw { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  br label %check
}

; Function Attrs: nounwind ssp uwtable
declare extern_weak void @std.core.builtin.panicf(ptr, i64, ptr, i64, ptr, i64, i32, ptr byval(%"any[]") align 8) #0

; Function Attrs: nounwind ssp uwtable
declare extern_weak void @std.core.mem.free(ptr) #0

attributes #0 = { nounwind ssp uwtable "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { alwaysinline }
attributes #6 = { noreturn }

!llvm.module.flags = !{!87, !88, !89, !90, !91, !92, !93}
!llvm.dbg.cu = !{!94}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "fen", linkageName: "chess.fen", scope: !2, file: !2, line: 9, type: !3, isLocal: false, isDefinition: true, align: 8)
!2 = !DIFile(filename: "main.c3", directory: "/mnt/wwn-0x50014ee26a7ba406-part1/programming/Other Projects/chess/src")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "Fen", scope: !2, file: !2, line: 63, size: 4288, align: 64, elements: !4, identifier: "fen.Fen")
!4 = !{!5, !30, !44, !45, !46, !47, !48}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "board", scope: !3, file: !2, line: 64, baseType: !6, size: 4096, align: 32)
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "Board", scope: !3, file: !2, line: 46, size: 4096, align: 32, elements: !7, identifier: "fen.Board")
!7 = !{!8}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6, file: !2, line: 47, baseType: !9, size: 4096, align: 32)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 4096, align: 32, elements: !28)
!10 = !DICompositeType(tag: DW_TAG_structure_type, name: "Piece", scope: !2, file: !2, line: 21, size: 64, align: 32, elements: !11, identifier: "fen.Piece")
!11 = !{!12, !23}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "piece", scope: !10, file: !2, line: 22, baseType: !13, size: 32, align: 32)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PieceType", scope: !10, file: !2, line: 5, baseType: !14, size: 32, align: 32, elements: !15)
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{!16, !17, !18, !19, !20, !21, !22}
!16 = !DIEnumerator(name: "NONE", value: 0)
!17 = !DIEnumerator(name: "KING", value: 1)
!18 = !DIEnumerator(name: "QUEEN", value: 2)
!19 = !DIEnumerator(name: "BISHOP", value: 3)
!20 = !DIEnumerator(name: "KNIGHT", value: 4)
!21 = !DIEnumerator(name: "ROOK", value: 5)
!22 = !DIEnumerator(name: "PAWN", value: 6)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !10, file: !2, line: 23, baseType: !24, size: 32, align: 32, offset: 32)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Color", scope: !10, file: !2, line: 15, baseType: !14, size: 32, align: 32, elements: !25)
!25 = !{!16, !26, !27}
!26 = !DIEnumerator(name: "WHITE", value: 1)
!27 = !DIEnumerator(name: "BLACK", value: 2)
!28 = !{!29, !29}
!29 = !DISubrange(count: 8, lowerBound: 0)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "en_passant_target", scope: !3, file: !2, line: 65, baseType: !31, size: 128, align: 64, offset: 4096)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option", scope: !32, file: !2, line: 5, size: 128, align: 64, elements: !39, identifier: "option$v2$int$.Option")
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "Move", scope: !2, file: !2, line: 6, size: 192, align: 64, elements: !33, identifier: "piece.Move")
!33 = !{!34, !38}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !32, file: !2, line: 7, baseType: !35, size: 64, align: 64)
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, align: 32, flags: DIFlagVector, elements: !36)
!36 = !{!37}
!37 = !DISubrange(count: 2, lowerBound: 0)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "capture", scope: !32, file: !2, line: 8, baseType: !31, size: 128, align: 64, offset: 64)
!39 = !{!40, !42}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !31, file: !2, line: 6, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 65, baseType: !35, align: 8)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "has", scope: !31, file: !2, line: 7, baseType: !43, size: 8, align: 8, offset: 64)
!43 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "turn", scope: !3, file: !2, line: 66, baseType: !24, size: 32, align: 32, offset: 4224)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "white_king", scope: !3, file: !2, line: 68, baseType: !43, size: 8, align: 8, offset: 4256)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "white_queen", scope: !3, file: !2, line: 69, baseType: !43, size: 8, align: 8, offset: 4264)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "black_king", scope: !3, file: !2, line: 70, baseType: !43, size: 8, align: 8, offset: 4272)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "black_queen", scope: !3, file: !2, line: 71, baseType: !43, size: 8, align: 8, offset: 4280)
!49 = !DIGlobalVariableExpression(var: !50, expr: !DIExpression())
!50 = distinct !DIGlobalVariable(name: "flip", linkageName: "chess.flip", scope: !2, file: !2, line: 11, type: !43, isLocal: false, isDefinition: true, align: 1)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "ATLAS", linkageName: "chess.ATLAS", scope: !2, file: !2, line: 21, type: !53, isLocal: false, isDefinition: true, align: 8)
!53 = !DICompositeType(tag: DW_TAG_structure_type, name: "char[]", size: 128, align: 64, elements: !54, identifier: "char[]")
!54 = !{!55, !58}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !53, baseType: !56, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char*", baseType: !57, size: 64, align: 64, dwarfAddressSpace: 0)
!57 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !53, baseType: !59, size: 64, align: 64, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "usz", baseType: !60)
!60 = !DIBasicType(name: "ulong", size: 64, encoding: DW_ATE_unsigned)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "mousePos", linkageName: "chess.mousePos", scope: !2, file: !2, line: 101, type: !63, isLocal: false, isDefinition: true, align: 4)
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vector2", scope: !2, file: !2, line: 38, size: 64, align: 32, elements: !64, identifier: "raylib5.rl.Vector2")
!64 = !{!65, !67}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !63, file: !2, line: 40, baseType: !66, size: 32, align: 32)
!66 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !63, file: !2, line: 41, baseType: !66, size: 32, align: 32, offset: 32)
!68 = !DIGlobalVariableExpression(var: !69, expr: !DIExpression())
!69 = distinct !DIGlobalVariable(name: "selected", linkageName: "chess.selected", scope: !2, file: !2, line: 102, type: !31, isLocal: false, isDefinition: true, align: 8)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "possible", linkageName: "chess.possible", scope: !2, file: !2, line: 103, type: !72, isLocal: false, isDefinition: true, align: 8)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "Possible", scope: !2, file: !2, line: 15, baseType: !73, align: 8)
!73 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", scope: !2, file: !2, line: 18, size: 320, align: 64, elements: !74, identifier: "std_collections_list$piece.Move$.List")
!74 = !{!75, !76, !77, !84}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !73, file: !2, line: 20, baseType: !59, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !73, file: !2, line: 21, baseType: !59, size: 64, align: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !73, file: !2, line: 22, baseType: !78, size: 128, align: 64, offset: 128)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "Allocator", size: 128, align: 64, elements: !79, identifier: "Allocator")
!79 = !{!80, !82}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !78, baseType: !81, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "void*", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !78, baseType: !83, size: 64, align: 64, offset: 64)
!83 = !DIBasicType(name: "typeid", size: 64, encoding: DW_ATE_address)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !73, file: !2, line: 23, baseType: !85, size: 64, align: 64, offset: 256)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Type*", baseType: !86, size: 64, align: 64, dwarfAddressSpace: 0)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 15, baseType: !32, align: 8)
!87 = !{i32 2, !"Dwarf Version", i32 4}
!88 = !{i32 2, !"Debug Info Version", i32 3}
!89 = !{i32 2, !"wchar_size", i32 4}
!90 = !{i32 4, !"PIE Level", i32 2}
!91 = !{i32 4, !"PIC Level", i32 2}
!92 = !{i32 1, !"uwtable", i32 2}
!93 = !{i32 2, !"frame-pointer", i32 2}
!94 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "c3c", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !95, globals: !127, splitDebugInlining: false)
!95 = !{!96, !13, !24}
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PixelFormat", scope: !97, file: !2, line: 568, baseType: !14, size: 32, align: 32, elements: !105)
!97 = !DICompositeType(tag: DW_TAG_structure_type, name: "Texture", scope: !2, file: !2, line: 102, size: 160, align: 32, elements: !98, identifier: "raylib5.rl.Texture")
!98 = !{!99, !101, !102, !103, !104}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !97, file: !2, line: 104, baseType: !100, size: 32, align: 32)
!100 = !DIBasicType(name: "uint", size: 32, encoding: DW_ATE_unsigned)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !97, file: !2, line: 105, baseType: !14, size: 32, align: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !97, file: !2, line: 106, baseType: !14, size: 32, align: 32, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "mipmaps", scope: !97, file: !2, line: 107, baseType: !14, size: 32, align: 32, offset: 96)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !97, file: !2, line: 108, baseType: !96, size: 32, align: 32, offset: 128)
!105 = !{!16, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126}
!106 = !DIEnumerator(name: "UNCOMPRESSED_GRAYSCALE", value: 1)
!107 = !DIEnumerator(name: "UNCOMPRESSED_GRAY_ALPHA", value: 2)
!108 = !DIEnumerator(name: "UNCOMPRESSED_R5G6B5", value: 3)
!109 = !DIEnumerator(name: "UNCOMPRESSED_R8G8B8", value: 4)
!110 = !DIEnumerator(name: "UNCOMPRESSED_R5G5B5A1", value: 5)
!111 = !DIEnumerator(name: "UNCOMPRESSED_R4G4B4A4", value: 6)
!112 = !DIEnumerator(name: "UNCOMPRESSED_R8G8B8A8", value: 7)
!113 = !DIEnumerator(name: "UNCOMPRESSED_R32", value: 8)
!114 = !DIEnumerator(name: "UNCOMPRESSED_R32G32B32", value: 9)
!115 = !DIEnumerator(name: "UNCOMPRESSED_R32G32B32A32", value: 10)
!116 = !DIEnumerator(name: "COMPRESSED_DXT1_RGB", value: 11)
!117 = !DIEnumerator(name: "COMPRESSED_DXT1_RGBA", value: 12)
!118 = !DIEnumerator(name: "COMPRESSED_DXT3_RGBA", value: 13)
!119 = !DIEnumerator(name: "COMPRESSED_DXT5_RGBA", value: 14)
!120 = !DIEnumerator(name: "COMPRESSED_ETC1_RGB", value: 15)
!121 = !DIEnumerator(name: "COMPRESSED_ETC2_RGB", value: 16)
!122 = !DIEnumerator(name: "COMPRESSED_ETC2_EAC_RGBA", value: 17)
!123 = !DIEnumerator(name: "COMPRESSED_PVRT_RGB", value: 18)
!124 = !DIEnumerator(name: "COMPRESSED_PVRT_RGBA", value: 19)
!125 = !DIEnumerator(name: "COMPRESSED_ASTC_4X4_RGBA", value: 20)
!126 = !DIEnumerator(name: "COMPRESSED_ASTC_8X8_RGBA", value: 21)
!127 = !{!0, !49, !51, !61, !68, !70}
!128 = distinct !DISubprogram(name: "getColor", linkageName: "chess.getColor", scope: !2, file: !2, line: 13, type: !129, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !14, !14}
!131 = !DICompositeType(tag: DW_TAG_structure_type, name: "Color", scope: !2, file: !2, line: 74, size: 32, align: 8, elements: !132, identifier: "raylib5.rl.Color")
!132 = !{!133, !134, !135, !136}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !131, file: !2, line: 76, baseType: !57, size: 8, align: 8)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !131, file: !2, line: 77, baseType: !57, size: 8, align: 8, offset: 8)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !131, file: !2, line: 78, baseType: !57, size: 8, align: 8, offset: 16)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !131, file: !2, line: 79, baseType: !57, size: 8, align: 8, offset: 24)
!137 = !{}
!138 = !DILocalVariable(name: "x", arg: 1, scope: !128, file: !2, line: 13, type: !14)
!139 = !DILocation(line: 13, column: 27, scope: !128)
!140 = !DILocalVariable(name: "y", arg: 2, scope: !128, file: !2, line: 13, type: !14)
!141 = !DILocation(line: 13, column: 34, scope: !128)
!142 = !DILocation(line: 14, column: 9, scope: !128)
!143 = !DILocation(line: 14, column: 18, scope: !128)
!144 = !DILocation(line: 15, column: 16, scope: !145)
!145 = distinct !DILexicalBlock(scope: !128, file: !2, line: 14, column: 25)
!146 = !DILocation(line: 17, column: 16, scope: !147)
!147 = distinct !DILexicalBlock(scope: !128, file: !2, line: 16, column: 12)
!148 = distinct !DISubprogram(name: "createTile", linkageName: "chess.createTile", scope: !2, file: !2, line: 23, type: !149, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!149 = !DISubroutineType(types: !150)
!150 = !{null, !151, !97, !151, !35, !14, !14}
!151 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ctx", scope: !2, file: !2, line: 2, size: 128, align: 32, elements: !152, identifier: "grids.Ctx")
!152 = !{!153, !154, !155, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "global_width", scope: !151, file: !2, line: 3, baseType: !14, size: 32, align: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "global_height", scope: !151, file: !2, line: 4, baseType: !14, size: 32, align: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !151, file: !2, line: 5, baseType: !14, size: 32, align: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !151, file: !2, line: 6, baseType: !14, size: 32, align: 32, offset: 96)
!157 = !DILocalVariable(name: "context", arg: 1, scope: !148, file: !2, line: 23, type: !151)
!158 = !DILocation(line: 23, column: 31, scope: !148)
!159 = !DILocalVariable(name: "tex", arg: 2, scope: !148, file: !2, line: 23, type: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "Texture2D", scope: !2, file: !2, line: 112, baseType: !97, align: 4)
!161 = !DILocation(line: 23, column: 54, scope: !148)
!162 = !DILocalVariable(name: "texContext", arg: 3, scope: !148, file: !2, line: 23, type: !151)
!163 = !DILocation(line: 23, column: 70, scope: !148)
!164 = !DILocalVariable(name: "size", arg: 4, scope: !148, file: !2, line: 23, type: !35)
!165 = !DILocation(line: 23, column: 91, scope: !148)
!166 = !DILocalVariable(name: "x", arg: 5, scope: !148, file: !2, line: 23, type: !14)
!167 = !DILocation(line: 23, column: 101, scope: !148)
!168 = !DILocalVariable(name: "y", arg: 6, scope: !148, file: !2, line: 23, type: !14)
!169 = !DILocation(line: 23, column: 108, scope: !148)
!170 = !DILocalVariable(name: "drawX", scope: !148, file: !2, line: 24, type: !14, align: 4)
!171 = !DILocation(line: 24, column: 9, scope: !148)
!172 = !DILocation(line: 24, column: 17, scope: !148)
!173 = !DILocalVariable(name: "drawY", scope: !148, file: !2, line: 25, type: !14, align: 4)
!174 = !DILocation(line: 25, column: 9, scope: !148)
!175 = !DILocation(line: 25, column: 17, scope: !148)
!176 = !DILocation(line: 26, column: 8, scope: !148)
!177 = !DILocation(line: 27, column: 19, scope: !178)
!178 = distinct !DILexicalBlock(scope: !148, file: !2, line: 26, column: 14)
!179 = !DILocation(line: 27, column: 17, scope: !178)
!180 = !DILocation(line: 28, column: 19, scope: !178)
!181 = !DILocation(line: 28, column: 17, scope: !178)
!182 = !DILocalVariable(name: "pos", scope: !148, file: !2, line: 30, type: !35, align: 8)
!183 = !DILocation(line: 30, column: 14, scope: !148)
!184 = !DILocation(line: 30, column: 35, scope: !148)
!185 = !DILocation(line: 30, column: 42, scope: !148)
!186 = !DILocation(line: 30, column: 20, scope: !148)
!187 = !DILocation(line: 31, column: 23, scope: !148)
!188 = !DILocation(line: 31, column: 30, scope: !148)
!189 = !DILocation(line: 31, column: 37, scope: !148)
!190 = !DILocation(line: 31, column: 45, scope: !148)
!191 = !DILocation(line: 31, column: 65, scope: !148)
!192 = !DILocation(line: 31, column: 53, scope: !148)
!193 = !DILocation(line: 31, column: 5, scope: !148)
!194 = !DILocation(line: 32, column: 8, scope: !148)
!195 = !DILocalVariable(name: "s", scope: !196, file: !2, line: 33, type: !35, align: 8)
!196 = distinct !DILexicalBlock(scope: !148, file: !2, line: 32, column: 27)
!197 = !DILocation(line: 33, column: 18, scope: !196)
!198 = !DILocation(line: 33, column: 22, scope: !196)
!199 = !DILocation(line: 34, column: 12, scope: !196)
!200 = !DILocation(line: 34, column: 19, scope: !196)
!201 = !DILocation(line: 34, column: 24, scope: !196)
!202 = !DILocation(line: 34, column: 31, scope: !196)
!203 = !DILocation(line: 35, column: 31, scope: !204)
!204 = distinct !DILexicalBlock(scope: !196, file: !2, line: 34, column: 34)
!205 = !DILocation(line: 35, column: 38, scope: !204)
!206 = !DILocation(line: 35, column: 45, scope: !204)
!207 = !DILocation(line: 35, column: 53, scope: !204)
!208 = !DILocation(line: 35, column: 61, scope: !204)
!209 = !DILocation(line: 35, column: 13, scope: !204)
!210 = !DILocalVariable(name: "s", scope: !148, file: !2, line: 38, type: !14, align: 4)
!211 = !DILocation(line: 38, column: 9, scope: !148)
!212 = !DILocation(line: 38, column: 13, scope: !148)
!213 = !DILocation(line: 39, column: 18, scope: !148)
!214 = !DILocation(line: 39, column: 8, scope: !148)
!215 = !DILocation(line: 39, column: 21, scope: !148)
!216 = !DILocation(line: 40, column: 13, scope: !217)
!217 = distinct !DILexicalBlock(scope: !148, file: !2, line: 39, column: 39)
!218 = !DILocation(line: 42, column: 16, scope: !219)
!219 = distinct !DILexicalBlock(scope: !148, file: !2, line: 42, column: 5)
!220 = !DILocalVariable(name: ".temp", scope: !219, file: !2, line: 42, type: !59, align: 8)
!221 = !DILocalVariable(name: "p", scope: !222, file: !2, line: 42, type: !86, align: 8)
!222 = distinct !DILexicalBlock(scope: !219, file: !2, line: 42, column: 26)
!223 = !DILocation(line: 42, column: 13, scope: !222)
!224 = !DILocation(line: 378, column: 26, scope: !225, inlinedAt: !223)
!225 = distinct !DILexicalBlock(scope: !227, file: !226, line: 379, column: 1)
!226 = !DIFile(filename: "list.c3", directory: "/usr/lib/c3c/lib/std/collections")
!227 = distinct !DISubprogram(name: "@item_at", linkageName: "@item_at", scope: !226, file: !226, line: 378, scopeLine: 378, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!228 = !DILocation(line: 376, column: 11, scope: !225, inlinedAt: !223)
!229 = !DILocation(line: 376, column: 19, scope: !225, inlinedAt: !223)
!230 = !DILocation(line: 42, column: 13, scope: !225, inlinedAt: !223)
!231 = !DILocation(line: 380, column: 9, scope: !227, inlinedAt: !223)
!232 = !DILocation(line: 380, column: 22, scope: !227, inlinedAt: !223)
!233 = !DILocation(line: 43, column: 12, scope: !234)
!234 = distinct !DILexicalBlock(scope: !222, file: !2, line: 42, column: 26)
!235 = !DILocation(line: 43, column: 23, scope: !234)
!236 = !DILocation(line: 43, column: 28, scope: !234)
!237 = !DILocation(line: 43, column: 39, scope: !234)
!238 = !DILocation(line: 44, column: 28, scope: !239)
!239 = distinct !DILexicalBlock(scope: !234, file: !2, line: 43, column: 42)
!240 = !DILocation(line: 44, column: 36, scope: !239)
!241 = !DILocation(line: 44, column: 48, scope: !239)
!242 = !DILocation(line: 44, column: 56, scope: !239)
!243 = !DILocation(line: 44, column: 74, scope: !239)
!244 = !DILocation(line: 44, column: 81, scope: !239)
!245 = !DILocation(line: 44, column: 66, scope: !239)
!246 = !DILocation(line: 44, column: 84, scope: !239)
!247 = !DILocation(line: 44, column: 13, scope: !239)
!248 = !DILocation(line: 45, column: 13, scope: !239)
!249 = !DILocation(line: 48, column: 25, scope: !148)
!250 = !DILocation(line: 48, column: 15, scope: !148)
!251 = !DILocation(line: 48, column: 28, scope: !148)
!252 = !DILocation(line: 48, column: 60, scope: !148)
!253 = !DILocation(line: 48, column: 5, scope: !148)
!254 = distinct !DISubprogram(name: "createTiles", linkageName: "chess.createTiles", scope: !2, file: !2, line: 51, type: !255, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!255 = !DISubroutineType(types: !256)
!256 = !{null, !151, !97, !151}
!257 = !DILocalVariable(name: "context", arg: 1, scope: !254, file: !2, line: 51, type: !151)
!258 = !DILocation(line: 51, column: 32, scope: !254)
!259 = !DILocalVariable(name: "tex", arg: 2, scope: !254, file: !2, line: 51, type: !160)
!260 = !DILocation(line: 51, column: 55, scope: !254)
!261 = !DILocalVariable(name: "texContext", arg: 3, scope: !254, file: !2, line: 51, type: !151)
!262 = !DILocation(line: 51, column: 71, scope: !254)
!263 = !DILocalVariable(name: "size", scope: !254, file: !2, line: 52, type: !35, align: 8)
!264 = !DILocation(line: 52, column: 14, scope: !254)
!265 = !DILocation(line: 52, column: 40, scope: !254)
!266 = !DILocation(line: 52, column: 21, scope: !254)
!267 = !DILocalVariable(name: "x", scope: !268, file: !2, line: 53, type: !14, align: 4)
!268 = distinct !DILexicalBlock(scope: !254, file: !2, line: 53, column: 5)
!269 = !DILocation(line: 53, column: 13, scope: !268)
!270 = !DILocation(line: 53, column: 17, scope: !268)
!271 = !DILocation(line: 53, column: 20, scope: !268)
!272 = !DILocation(line: 53, column: 24, scope: !268)
!273 = !DILocalVariable(name: "y", scope: !274, file: !2, line: 54, type: !14, align: 4)
!274 = distinct !DILexicalBlock(scope: !275, file: !2, line: 54, column: 9)
!275 = distinct !DILexicalBlock(scope: !268, file: !2, line: 53, column: 44)
!276 = !DILocation(line: 54, column: 17, scope: !274)
!277 = !DILocation(line: 54, column: 21, scope: !274)
!278 = !DILocation(line: 54, column: 24, scope: !274)
!279 = !DILocation(line: 54, column: 28, scope: !274)
!280 = !DILocation(line: 55, column: 59, scope: !281)
!281 = distinct !DILexicalBlock(scope: !274, file: !2, line: 54, column: 49)
!282 = !DILocation(line: 55, column: 13, scope: !281)
!283 = !DILocation(line: 54, column: 44, scope: !274)
!284 = !DILocation(line: 53, column: 39, scope: !268)
!285 = distinct !DISubprogram(name: "getContextFromTexture", linkageName: "chess.getContextFromTexture", scope: !2, file: !2, line: 60, type: !286, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!286 = !DISubroutineType(types: !287)
!287 = !{!151, !97}
!288 = !DILocalVariable(name: "tex", arg: 1, scope: !285, file: !2, line: 60, type: !160)
!289 = !DILocation(line: 60, column: 51, scope: !285)
!290 = !DILocation(line: 62, column: 18, scope: !285)
!291 = !DILocation(line: 63, column: 19, scope: !285)
!292 = !DILocation(line: 64, column: 25, scope: !285)
!293 = !DILocation(line: 65, column: 26, scope: !285)
!294 = distinct !DISubprogram(name: "getSpriteSrc", linkageName: "chess.getSpriteSrc", scope: !2, file: !2, line: 69, type: !295, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!295 = !DISubroutineType(types: !296)
!296 = !{!297, !10, !97, !151}
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rectangle", scope: !2, file: !2, line: 83, size: 128, align: 32, elements: !298, identifier: "raylib5.rl.Rectangle")
!298 = !{!299, !300, !301, !302}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !297, file: !2, line: 85, baseType: !66, size: 32, align: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !297, file: !2, line: 86, baseType: !66, size: 32, align: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !297, file: !2, line: 87, baseType: !66, size: 32, align: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !297, file: !2, line: 88, baseType: !66, size: 32, align: 32, offset: 96)
!303 = !DILocalVariable(name: "piece", arg: 1, scope: !294, file: !2, line: 69, type: !10)
!304 = !DILocation(line: 69, column: 37, scope: !294)
!305 = !DILocalVariable(name: "tex", arg: 2, scope: !294, file: !2, line: 69, type: !160)
!306 = !DILocation(line: 69, column: 58, scope: !294)
!307 = !DILocalVariable(name: "context", arg: 3, scope: !294, file: !2, line: 69, type: !151)
!308 = !DILocation(line: 69, column: 74, scope: !294)
!309 = !DILocalVariable(name: "x", scope: !294, file: !2, line: 70, type: !14, align: 4)
!310 = !DILocation(line: 70, column: 9, scope: !294)
!311 = !DILocation(line: 70, column: 13, scope: !294)
!312 = !DILocalVariable(name: "y", scope: !294, file: !2, line: 71, type: !14, align: 4)
!313 = !DILocation(line: 71, column: 9, scope: !294)
!314 = !DILocation(line: 71, column: 13, scope: !294)
!315 = !DILocation(line: 73, column: 29, scope: !294)
!316 = !DILocation(line: 73, column: 14, scope: !294)
!317 = !DILocation(line: 74, column: 29, scope: !294)
!318 = !DILocation(line: 74, column: 14, scope: !294)
!319 = !DILocation(line: 75, column: 38, scope: !294)
!320 = !DILocation(line: 75, column: 18, scope: !294)
!321 = !DILocation(line: 76, column: 40, scope: !294)
!322 = !DILocation(line: 76, column: 19, scope: !294)
!323 = distinct !DISubprogram(name: "drawPiece", linkageName: "chess.drawPiece", scope: !2, file: !2, line: 80, type: !324, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!324 = !DISubroutineType(types: !325)
!325 = !{null, !10, !14, !14, !151, !97, !151}
!326 = !DILocalVariable(name: "piece", arg: 1, scope: !323, file: !2, line: 80, type: !10)
!327 = !DILocation(line: 80, column: 30, scope: !323)
!328 = !DILocalVariable(name: "x", arg: 2, scope: !323, file: !2, line: 80, type: !14)
!329 = !DILocation(line: 80, column: 41, scope: !323)
!330 = !DILocalVariable(name: "y", arg: 3, scope: !323, file: !2, line: 80, type: !14)
!331 = !DILocation(line: 80, column: 48, scope: !323)
!332 = !DILocalVariable(name: "context", arg: 4, scope: !323, file: !2, line: 80, type: !151)
!333 = !DILocation(line: 80, column: 62, scope: !323)
!334 = !DILocalVariable(name: "tex", arg: 5, scope: !323, file: !2, line: 80, type: !160)
!335 = !DILocation(line: 80, column: 85, scope: !323)
!336 = !DILocalVariable(name: "texContext", arg: 6, scope: !323, file: !2, line: 80, type: !151)
!337 = !DILocation(line: 80, column: 101, scope: !323)
!338 = !DILocation(line: 81, column: 9, scope: !323)
!339 = !DILocation(line: 81, column: 47, scope: !323)
!340 = !DILocation(line: 81, column: 85, scope: !323)
!341 = !DILocalVariable(name: "pos", scope: !323, file: !2, line: 82, type: !35, align: 8)
!342 = !DILocation(line: 82, column: 14, scope: !323)
!343 = !DILocation(line: 82, column: 35, scope: !323)
!344 = !DILocation(line: 82, column: 38, scope: !323)
!345 = !DILocation(line: 82, column: 20, scope: !323)
!346 = !DILocalVariable(name: "size", scope: !323, file: !2, line: 83, type: !35, align: 8)
!347 = !DILocation(line: 83, column: 14, scope: !323)
!348 = !DILocation(line: 83, column: 40, scope: !323)
!349 = !DILocation(line: 83, column: 21, scope: !323)
!350 = !DILocalVariable(name: "src", scope: !323, file: !2, line: 84, type: !297, align: 4)
!351 = !DILocation(line: 84, column: 19, scope: !323)
!352 = !DILocation(line: 84, column: 50, scope: !323)
!353 = !DILocation(line: 84, column: 25, scope: !323)
!354 = !DILocalVariable(name: "dest", scope: !323, file: !2, line: 85, type: !297, align: 4)
!355 = !DILocation(line: 85, column: 19, scope: !323)
!356 = !DILocation(line: 86, column: 14, scope: !323)
!357 = !DILocation(line: 87, column: 14, scope: !323)
!358 = !DILocation(line: 88, column: 18, scope: !323)
!359 = !DILocation(line: 89, column: 19, scope: !323)
!360 = !DILocation(line: 91, column: 5, scope: !323)
!361 = distinct !DISubprogram(name: "place", linkageName: "chess.place", scope: !2, file: !2, line: 105, type: !362, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!362 = !DISubroutineType(types: !363)
!363 = !{null, !35}
!364 = !DILocalVariable(name: "n", arg: 1, scope: !361, file: !2, line: 105, type: !35)
!365 = !DILocation(line: 105, column: 24, scope: !361)
!366 = !DILocation(line: 106, column: 18, scope: !361)
!367 = !DILocation(line: 106, column: 8, scope: !361)
!368 = !DILocation(line: 106, column: 23, scope: !361)
!369 = !DILocation(line: 107, column: 9, scope: !370)
!370 = distinct !DILexicalBlock(scope: !361, file: !2, line: 106, column: 58)
!371 = !DILocation(line: 108, column: 9, scope: !370)
!372 = !DILocation(line: 109, column: 15, scope: !370)
!373 = !DILocation(line: 111, column: 39, scope: !361)
!374 = !DILocation(line: 111, column: 16, scope: !361)
!375 = !DILocation(line: 112, column: 40, scope: !361)
!376 = !DILocation(line: 112, column: 16, scope: !361)
!377 = distinct !DISubprogram(name: "contains", linkageName: "chess.contains", scope: !2, file: !2, line: 116, type: !378, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!378 = !DISubroutineType(types: !379)
!379 = !{!380, !73, !32}
!380 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option", scope: !2, file: !2, line: 5, size: 256, align: 64, elements: !381, identifier: "option$piece.Move$.Option")
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !380, file: !2, line: 6, baseType: !383, size: 192, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "Type", scope: !2, file: !2, line: 116, baseType: !32, align: 8)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "has", scope: !380, file: !2, line: 7, baseType: !43, size: 8, align: 8, offset: 192)
!385 = !DILocalVariable(name: "possible", arg: 1, scope: !377, file: !2, line: 116, type: !72)
!386 = !DILocation(line: 116, column: 57, scope: !377)
!387 = !DILocalVariable(name: "move", arg: 2, scope: !377, file: !2, line: 116, type: !32)
!388 = !DILocation(line: 116, column: 79, scope: !377)
!389 = !DILocation(line: 117, column: 16, scope: !390)
!390 = distinct !DILexicalBlock(scope: !377, file: !2, line: 117, column: 5)
!391 = !DILocalVariable(name: ".temp", scope: !390, file: !2, line: 117, type: !59, align: 8)
!392 = !DILocalVariable(name: "p", scope: !393, file: !2, line: 117, type: !86, align: 8)
!393 = distinct !DILexicalBlock(scope: !390, file: !2, line: 117, column: 26)
!394 = !DILocation(line: 117, column: 13, scope: !393)
!395 = !DILocation(line: 378, column: 26, scope: !396, inlinedAt: !394)
!396 = distinct !DILexicalBlock(scope: !397, file: !226, line: 379, column: 1)
!397 = distinct !DISubprogram(name: "@item_at", linkageName: "@item_at", scope: !226, file: !226, line: 378, scopeLine: 378, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!398 = !DILocation(line: 376, column: 11, scope: !396, inlinedAt: !394)
!399 = !DILocation(line: 376, column: 19, scope: !396, inlinedAt: !394)
!400 = !DILocation(line: 117, column: 13, scope: !396, inlinedAt: !394)
!401 = !DILocation(line: 380, column: 9, scope: !397, inlinedAt: !394)
!402 = !DILocation(line: 380, column: 22, scope: !397, inlinedAt: !394)
!403 = !DILocation(line: 118, column: 12, scope: !404)
!404 = distinct !DILexicalBlock(scope: !393, file: !2, line: 117, column: 26)
!405 = !DILocation(line: 119, column: 20, scope: !406)
!406 = distinct !DILexicalBlock(scope: !404, file: !2, line: 118, column: 23)
!407 = distinct !DISubprogram(name: "handle_move", linkageName: "chess.handle_move", scope: !2, file: !2, line: 125, type: !408, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!408 = !DISubroutineType(types: !409)
!409 = !{null, !35, !35}
!410 = !DILocalVariable(name: "from", arg: 1, scope: !407, file: !2, line: 125, type: !35)
!411 = !DILocation(line: 125, column: 30, scope: !407)
!412 = !DILocalVariable(name: "to", arg: 2, scope: !407, file: !2, line: 125, type: !35)
!413 = !DILocation(line: 125, column: 45, scope: !407)
!414 = !DILocalVariable(name: "m", scope: !407, file: !2, line: 126, type: !380, align: 8)
!415 = !DILocation(line: 126, column: 33, scope: !407)
!416 = !DILocation(line: 127, column: 20, scope: !407)
!417 = !DILocation(line: 126, column: 37, scope: !407)
!418 = !DILocation(line: 129, column: 8, scope: !407)
!419 = !DILocation(line: 129, column: 14, scope: !407)
!420 = !DILocation(line: 129, column: 22, scope: !407)
!421 = !DILocalVariable(name: "move", scope: !422, file: !2, line: 130, type: !32, align: 8)
!422 = distinct !DILexicalBlock(scope: !407, file: !2, line: 129, column: 34)
!423 = !DILocation(line: 130, column: 21, scope: !422)
!424 = !DILocation(line: 130, column: 28, scope: !422)
!425 = !DILocation(line: 131, column: 12, scope: !422)
!426 = !DILocalVariable(name: "np", scope: !427, file: !2, line: 132, type: !35, align: 8)
!427 = distinct !DILexicalBlock(scope: !422, file: !2, line: 131, column: 35)
!428 = !DILocation(line: 132, column: 22, scope: !427)
!429 = !DILocation(line: 132, column: 27, scope: !427)
!430 = !DILocation(line: 133, column: 23, scope: !427)
!431 = !DILocation(line: 133, column: 13, scope: !427)
!432 = !DILocation(line: 133, column: 29, scope: !427)
!433 = !DILocation(line: 135, column: 19, scope: !422)
!434 = !DILocation(line: 135, column: 9, scope: !422)
!435 = !DILocation(line: 135, column: 25, scope: !422)
!436 = !DILocation(line: 135, column: 43, scope: !422)
!437 = !DILocation(line: 135, column: 33, scope: !422)
!438 = !DILocation(line: 135, column: 51, scope: !422)
!439 = !DILocation(line: 136, column: 19, scope: !422)
!440 = !DILocation(line: 136, column: 9, scope: !422)
!441 = !DILocation(line: 136, column: 27, scope: !422)
!442 = !DILocation(line: 138, column: 5, scope: !407)
!443 = !DILocation(line: 139, column: 5, scope: !407)
!444 = distinct !DISubprogram(name: "main", linkageName: "chess.main", scope: !2, file: !2, line: 142, type: !445, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!445 = !DISubroutineType(types: !446)
!446 = !{!14, !447}
!447 = !DICompositeType(tag: DW_TAG_structure_type, name: "String[]", size: 128, align: 64, elements: !448, identifier: "String[]")
!448 = !{!449, !452}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !447, baseType: !450, size: 64, align: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "String*", baseType: !451, size: 64, align: 64, dwarfAddressSpace: 0)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "String", baseType: !53)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !447, baseType: !59, size: 64, align: 64, offset: 64)
!453 = !DILocalVariable(name: "args", arg: 1, scope: !444, file: !2, line: 142, type: !447)
!454 = !DILocation(line: 142, column: 22, scope: !444)
!455 = !DILocation(line: 143, column: 5, scope: !444)
!456 = !DILocalVariable(name: "img", scope: !444, file: !2, line: 144, type: !457, align: 8)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Image", scope: !2, file: !2, line: 92, size: 192, align: 64, elements: !458, identifier: "raylib5.rl.Image")
!458 = !{!459, !460, !461, !462, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !457, file: !2, line: 94, baseType: !81, size: 64, align: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !457, file: !2, line: 95, baseType: !14, size: 32, align: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !457, file: !2, line: 96, baseType: !14, size: 32, align: 32, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "mipmaps", scope: !457, file: !2, line: 97, baseType: !14, size: 32, align: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !457, file: !2, line: 98, baseType: !96, size: 32, align: 32, offset: 160)
!464 = !DILocation(line: 144, column: 15, scope: !444)
!465 = !DILocation(line: 144, column: 60, scope: !444)
!466 = !DILocation(line: 144, column: 21, scope: !444)
!467 = !DILocalVariable(name: "tex", scope: !444, file: !2, line: 145, type: !160, align: 4)
!468 = !DILocation(line: 145, column: 19, scope: !444)
!469 = !DILocation(line: 145, column: 25, scope: !444)
!470 = !DILocalVariable(name: "texContext", scope: !444, file: !2, line: 146, type: !151, align: 4)
!471 = !DILocation(line: 146, column: 16, scope: !444)
!472 = !DILocation(line: 146, column: 29, scope: !444)
!473 = !DILocation(line: 147, column: 24, scope: !444)
!474 = !DILocation(line: 147, column: 11, scope: !444)
!475 = !DILocation(line: 148, column: 5, scope: !444)
!476 = !DILocalVariable(name: "context", scope: !444, file: !2, line: 149, type: !151, align: 4)
!477 = !DILocation(line: 149, column: 16, scope: !444)
!478 = !DILocation(line: 155, column: 5, scope: !444)
!479 = !DILocation(line: 155, column: 12, scope: !480)
!480 = distinct !DILexicalBlock(scope: !444, file: !2, line: 155, column: 5)
!481 = !DILocation(line: 156, column: 9, scope: !482)
!482 = distinct !DILexicalBlock(scope: !480, file: !2, line: 155, column: 37)
!483 = !DILocation(line: 157, column: 20, scope: !482)
!484 = !DILocation(line: 158, column: 13, scope: !482)
!485 = !DILocalVariable(name: "n", scope: !486, file: !2, line: 159, type: !35, align: 8)
!486 = distinct !DILexicalBlock(scope: !482, file: !2, line: 158, column: 61)
!487 = !DILocation(line: 159, column: 22, scope: !486)
!488 = !DILocation(line: 159, column: 59, scope: !486)
!489 = !DILocation(line: 159, column: 85, scope: !486)
!490 = !DILocation(line: 159, column: 26, scope: !486)
!491 = !DILocation(line: 160, column: 16, scope: !486)
!492 = !DILocation(line: 161, column: 17, scope: !493)
!493 = distinct !DILexicalBlock(scope: !486, file: !2, line: 160, column: 22)
!494 = !DILocation(line: 161, column: 25, scope: !493)
!495 = !DILocation(line: 161, column: 23, scope: !493)
!496 = !DILocation(line: 162, column: 17, scope: !493)
!497 = !DILocation(line: 162, column: 25, scope: !493)
!498 = !DILocation(line: 162, column: 23, scope: !493)
!499 = !DILocation(line: 164, column: 16, scope: !486)
!500 = !DILocalVariable(name: "o", scope: !501, file: !2, line: 165, type: !35, align: 8)
!501 = distinct !DILexicalBlock(scope: !486, file: !2, line: 164, column: 35)
!502 = !DILocation(line: 165, column: 26, scope: !501)
!503 = !DILocation(line: 165, column: 30, scope: !501)
!504 = !DILocation(line: 166, column: 32, scope: !501)
!505 = !DILocation(line: 166, column: 17, scope: !501)
!506 = !DILocation(line: 168, column: 23, scope: !507)
!507 = distinct !DILexicalBlock(scope: !486, file: !2, line: 167, column: 20)
!508 = !DILocation(line: 168, column: 17, scope: !507)
!509 = !DILocation(line: 171, column: 9, scope: !482)
!510 = !DILocation(line: 172, column: 9, scope: !482)
!511 = !DILocation(line: 174, column: 5, scope: !444)
!512 = !DILocation(line: 175, column: 9, scope: !444)
!513 = distinct !DISubprogram(name: "_$main", linkageName: "main", scope: !2, file: !2, line: 142, type: !514, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !94, retainedNodes: !137)
!514 = !DISubroutineType(types: !515)
!515 = !{!14, !14, !516}
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char**", baseType: !56, size: 64, align: 64, dwarfAddressSpace: 0)
!517 = !DILocalVariable(name: ".anon", arg: 1, scope: !513, file: !2, line: 142, type: !14)
!518 = !DILocation(line: 142, column: 8, scope: !513)
!519 = !DILocalVariable(name: ".anon", arg: 2, scope: !513, file: !2, line: 142, type: !516)
!520 = !DILocalVariable(name: "list", scope: !521, file: !2, line: 45, type: !447, align: 8)
!521 = distinct !DISubprogram(name: "@main_to_int_main_args", linkageName: "@main_to_int_main_args", scope: !522, file: !522, line: 43, scopeLine: 43, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94, retainedNodes: !137)
!522 = !DIFile(filename: "main_stub.c3", directory: "/usr/lib/c3c/lib/std/core/private")
!523 = !DILocation(line: 45, column: 11, scope: !521, inlinedAt: !518)
!524 = !DILocalVariable(name: "list", scope: !525, file: !2, line: 24, type: !447, align: 8)
!525 = distinct !DISubprogram(name: "args_to_strings", linkageName: "args_to_strings", scope: !522, file: !522, line: 22, scopeLine: 22, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94, retainedNodes: !137)
!526 = !DILocation(line: 24, column: 11, scope: !525, inlinedAt: !527)
!527 = !DILocation(line: 45, column: 18, scope: !521, inlinedAt: !518)
!528 = !DILocation(line: 24, column: 43, scope: !525, inlinedAt: !527)
!529 = !DILocation(line: 303, column: 55, scope: !530, inlinedAt: !532)
!530 = distinct !DISubprogram(name: "alloc_array_try", linkageName: "alloc_array_try", scope: !531, file: !531, line: 301, scopeLine: 301, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!531 = !DIFile(filename: "mem_allocator.c3", directory: "/usr/lib/c3c/lib/std/core")
!532 = !DILocation(line: 286, column: 9, scope: !533, inlinedAt: !534)
!533 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !531, file: !531, line: 284, scopeLine: 284, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!534 = !DILocation(line: 818, column: 9, scope: !535, inlinedAt: !537)
!535 = distinct !DISubprogram(name: "alloc_array", linkageName: "alloc_array", scope: !536, file: !536, line: 816, scopeLine: 816, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!536 = !DIFile(filename: "mem.c3", directory: "/usr/lib/c3c/lib/std/core")
!537 = !DILocation(line: 24, column: 18, scope: !525, inlinedAt: !527)
!538 = !DILocation(line: 303, column: 40, scope: !530, inlinedAt: !532)
!539 = !DILocation(line: 79, column: 6, scope: !540, inlinedAt: !541)
!540 = distinct !DISubprogram(name: "malloc_try", linkageName: "malloc_try", scope: !531, file: !531, line: 77, scopeLine: 77, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!541 = !DILocation(line: 303, column: 18, scope: !530, inlinedAt: !532)
!542 = !DILocation(line: 79, column: 20, scope: !540, inlinedAt: !541)
!543 = !DILocation(line: 85, column: 28, scope: !540, inlinedAt: !541)
!544 = !DILocation(line: 37, column: 12, scope: !540, inlinedAt: !541)
!545 = !DILocation(line: 973, column: 9, scope: !546, inlinedAt: !548)
!546 = distinct !DISubprogram(name: "is_power_of_2", linkageName: "is_power_of_2", scope: !547, file: !547, line: 971, scopeLine: 971, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94)
!547 = !DIFile(filename: "math.c3", directory: "/usr/lib/c3c/lib/std/math")
!548 = !DILocation(line: 37, column: 26, scope: !540, inlinedAt: !541)
!549 = !DILocation(line: 973, column: 20, scope: !546, inlinedAt: !548)
!550 = !DILocation(line: 973, column: 25, scope: !546, inlinedAt: !548)
!551 = !DILocation(line: 85, column: 10, scope: !540, inlinedAt: !541)
!552 = !DILocation(line: 303, column: 67, scope: !530, inlinedAt: !532)
!553 = !DILocation(line: 303, column: 10, scope: !530, inlinedAt: !532)
!554 = !DILocalVariable(name: "i", scope: !555, file: !2, line: 25, type: !14, align: 4)
!555 = distinct !DILexicalBlock(scope: !525, file: !522, line: 25, column: 2)
!556 = !DILocation(line: 25, column: 11, scope: !555, inlinedAt: !527)
!557 = !DILocation(line: 25, column: 15, scope: !555, inlinedAt: !527)
!558 = !DILocation(line: 25, column: 18, scope: !555, inlinedAt: !527)
!559 = !DILocation(line: 25, column: 22, scope: !555, inlinedAt: !527)
!560 = !DILocalVariable(name: "arg", scope: !561, file: !2, line: 27, type: !56, align: 8)
!561 = distinct !DILexicalBlock(scope: !555, file: !522, line: 26, column: 2)
!562 = !DILocation(line: 27, column: 9, scope: !561, inlinedAt: !527)
!563 = !DILocation(line: 27, column: 15, scope: !561, inlinedAt: !527)
!564 = !DILocation(line: 27, column: 20, scope: !561, inlinedAt: !527)
!565 = !DILocalVariable(name: "len", scope: !561, file: !2, line: 28, type: !59, align: 8)
!566 = !DILocation(line: 28, column: 7, scope: !561, inlinedAt: !527)
!567 = !DILocation(line: 28, column: 13, scope: !561, inlinedAt: !527)
!568 = !DILocation(line: 29, column: 3, scope: !561, inlinedAt: !527)
!569 = !DILocation(line: 29, column: 8, scope: !561, inlinedAt: !527)
!570 = !DILocation(line: 29, column: 21, scope: !561, inlinedAt: !527)
!571 = !DILocalVariable(name: "len", scope: !572, file: !2, line: 5, type: !59, align: 8)
!572 = distinct !DISubprogram(name: "_strlen", linkageName: "_strlen", scope: !522, file: !522, line: 3, scopeLine: 3, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !94, retainedNodes: !137)
!573 = !DILocation(line: 5, column: 6, scope: !572, inlinedAt: !574)
!574 = !DILocation(line: 29, column: 26, scope: !561, inlinedAt: !527)
!575 = !DILocation(line: 5, column: 12, scope: !572, inlinedAt: !574)
!576 = !DILocation(line: 6, column: 2, scope: !572, inlinedAt: !574)
!577 = !DILocation(line: 6, column: 9, scope: !578, inlinedAt: !574)
!578 = distinct !DILexicalBlock(scope: !572, file: !522, line: 6, column: 2)
!579 = !DILocation(line: 6, column: 13, scope: !578, inlinedAt: !574)
!580 = !DILocation(line: 6, column: 19, scope: !578, inlinedAt: !574)
!581 = !DILocation(line: 7, column: 9, scope: !572, inlinedAt: !574)
!582 = !DILocation(line: 29, column: 13, scope: !561, inlinedAt: !527)
!583 = !DILocation(line: 25, column: 28, scope: !555, inlinedAt: !527)
!584 = !DILocation(line: 31, column: 9, scope: !525, inlinedAt: !527)
!585 = !DILocation(line: 47, column: 12, scope: !521, inlinedAt: !518)
!586 = !DILocation(line: 47, column: 9, scope: !521, inlinedAt: !518)
!587 = !DILocation(line: 46, column: 13, scope: !588, inlinedAt: !518)
!588 = distinct !DILexicalBlock(scope: !521, file: !522, line: 46, column: 8)
!589 = !DILocation(line: 46, column: 8, scope: !588, inlinedAt: !518)
